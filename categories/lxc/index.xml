<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lxc on Dash</title>
    <link>http://purplepalmdash.github.io/categories/lxc/</link>
    <description>Recent content in Lxc on Dash</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Sep 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://purplepalmdash.github.io/categories/lxc/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>LXC On OpenSuse</title>
      <link>http://purplepalmdash.github.io/2014/09/01/lxc-on-opensuse/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/09/01/lxc-on-opensuse/</guid>
      <description>

&lt;h3 id=&#34;lxc-相关操作&#34;&gt;LXC 相关操作&lt;/h3&gt;

&lt;p&gt;列出本机已有的容器：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# lxc-ls
xxxxxyyySimulator1  xxxxxyyySimulator2

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;开启虚拟机：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# lxc-start -n xxxxxyyySimulator1

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;本机开启终端连接到开启后的虚拟机：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# lxc-console --name xxxxxyyySimulator1

Type &amp;lt;Ctrl+a q&amp;gt; to exit the console, &amp;lt;Ctrl+a Ctrl+a&amp;gt; to enter Ctrl+a itself

Welcome to openSUSE 12.3 &amp;quot;Dartmouth&amp;quot; - Kernel 3.11.10-21-default (tty1).


xxxxxyyySimulator1 login: root
Password: 
Last login: Fri Aug 29 15:40:54 from xxx.xxx.xx.59
Have a lot of fun...
xxxxxyyySimulator1:~ # 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用户名和密码都是&amp;rdquo;root&amp;rdquo;. ctrl+a后按q即可退出该终端。&lt;/p&gt;

&lt;p&gt;销毁容器:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lxc-destroy -n XXXXXXXXXX

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;克隆容器:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash /usr/bin/lxc-clone -o xxxxxyyySimulator1 -n xxxxxyyySimulator2

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中-o 是源容器， -n 后接的是目的容器名，目的容器会自动创建。&lt;/p&gt;

&lt;h3 id=&#34;lxc-容器修改&#34;&gt;LXC 容器修改&lt;/h3&gt;

&lt;p&gt;比如，网络配置在下列文件里：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cat /var/lib/lxc/xxxxxyyySimulator2/config | more
# Template used to create this container: /usr/share/lxc/templates/lxc-opensuse
# Template script checksum (SHA-1): xxxxxxxxxxxxxxxxxxxxxxxxxxxx

#lxc.network.type = empty
lxc.network.type = veth
lxc.network.flags = up
lxc.network.link = br0
lxc.network.name = eth0
lxc.network.ipv4 = xxx.xxx.xx.67/24
lxc.network.ipv4.gateway = xxx.xxx.xx.1

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;network.ipv4代表其IP地址，而Gateway则代表其默认路由。&lt;/p&gt;

&lt;p&gt;虚拟机位置：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;linux:/var/lib/lxc # du -hs *
483M	xxxxxyyySimulator1
483M	xxxxxyyySimulator2
linux:/var/lib/lxc # pwd
/var/lib/lxc

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;克隆后的虚拟机也在同一目录下。&lt;/p&gt;

&lt;p&gt;启动后的虚拟机，都可以被视为真实的物理机，可以通过ssh直接连上去操作。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LXC Computer</title>
      <link>http://purplepalmdash.github.io/2014/08/27/lxc-computer-in-lab/</link>
      <pubDate>Wed, 27 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/08/27/lxc-computer-in-lab/</guid>
      <description>

&lt;h3 id=&#34;network-configuration&#34;&gt;Network Configuration&lt;/h3&gt;

&lt;p&gt;Add the rules in udevd:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;linux-:~ # cd /etc/udev/rules.d/
linux-:/etc/udev/rules.d # cat 10-network.rules
SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, ATTR{address}==&amp;quot;00:22:22:22:22&amp;quot;, NAME=&amp;quot;eth1&amp;quot;
SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, ATTR{address}==&amp;quot;00:22:22:22:22&amp;quot;, NAME=&amp;quot;eth0&amp;quot;
SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, ATTR{address}==&amp;quot;00:22:22:22:22&amp;quot;, NAME=&amp;quot;eth2&amp;quot;
SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, ATTR{address}==&amp;quot;00:22:22:22:22&amp;quot;, NAME=&amp;quot;eth3&amp;quot;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add following network configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;linux-:/etc/sysconfig # cd network/
linux-:/etc/sysconfig/network # cat ifcfg-eth0
# Loopback (lo) configuration
IPADDR=1xx.xx.xx.xxx
NETMASK=255.255.255.0
BROADCAST=1xx.xx.xx.xxx
STARTMODE=auto
USERCONTROL=yes
FIREWALL=no

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Default Gateway Setup:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;linux-:~ # cat /etc/sysconfig/network/ifroute-br0
# Destination     Dummy/Gateway     Netmask            Device
#
default		xxx.xxx.xx.1	    255.255.255.255	br0

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Restart computer then you got the fixed ip address in eth0.&lt;br /&gt;
Add the default route so we could get outside.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim routes
xxx.xxx.xx.1 -eth0 
or manually: 
route add default gw xxx.xxx.xx.1 eth0

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bridge Networking Configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;linux-:/etc/sysconfig/network # cat ifcfg-br0
STARTMODE=&#39;auto&#39;
BOOTPROTO=&#39;static&#39;
DNS1=xxx.xxx.xx.1
GATEWAY=xxx.xxx.xx.1
IPADDR=xxx.xxx.xx.59
NETMASK=255.255.255.0
ONBOOT=yes
USERCONTROL=&#39;no&#39;
BRIDGE=&#39;yes&#39;
BRIDGE_PORTS=&#39;eth0&#39;
BRIDGE_AGEINGTIME=&#39;20&#39;
BRIDGE_FORWARDDELAY=&#39;0&#39;
BRIDGE_HELLOTIME=&#39;2&#39;
BRIDGE_MAXAGE=&#39;20&#39;
BRIDGE_PATHCOSTS=&#39;3&#39;
BRIDGE_STP=&#39;on&#39;
linux-:/etc/sysconfig/network # cat ifcfg-eth0
BOOTPROTO=&#39;static&#39;
STARTMODE=&#39;ifplugd&#39;
IFPLUGD_PRIORITY=&#39;1&#39;
NAME = &#39;1000 mBIT ETHERNET&#39;
USERCTL=no


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The route should changed to:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;route add default gw xxx.xxx.xx.1 br0

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;lxc-install&#34;&gt;LXC Install&lt;/h3&gt;

&lt;p&gt;Enable the free ways:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -C -L 127.0.0.1:9001:1xx.xxx.2xx:2xxxx root@1xx.xx.1xx.xxx

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use zypper to install the container.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zypper search lxc
# zypper install lxc lxc-devel yast2-lxc libvirt-daemon-lxc libvirt-daemon-driver-lxc
# lxc-checkconfig 
# ls /usr/share/lxc/templates/

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yes we have the opensuse specified configuraton.&lt;/p&gt;

&lt;p&gt;Create The first Container:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lxc-create -n ixxxxxSimulator1 -t /usr/share/lxc/templates/lxc-opensuse

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List the installed Container:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;linux-:~ # lxc-ls
xxxxhxxSimulator1

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Username and password are &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Start the lxc machine via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lxc-start -n xxxxxSimulator1

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;lxc-configuration&#34;&gt;LXC Configuration&lt;/h3&gt;

&lt;p&gt;No Network, Add it!&lt;br /&gt;
First we remove the desktop kernel. and use the default kernel&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# uname -a
Linux XXXXSimulator1 3.11.6-4-desktop 
# zypper in kernel-default
# zypper rm kernel-desktop
# uname -a
Linux linux- 3.11.10-21-default

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enable the xfce4 for the default vnc server desktop:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zypper in -t pattern xfce

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Change the default lxc configuraiton of network:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /var/lib/lxc/XXXXSimulator1/config
lxc.network.type = veth
lxc.network.flags = up
lxc.network.link = br0
lxc.network.name = eth0

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now if you start the lxc container, the network eth0 will be automatically started.&lt;/p&gt;

&lt;h3 id=&#34;lxc-expand&#34;&gt;LXC Expand&lt;/h3&gt;

&lt;p&gt;Duplicate LXC Machine.&lt;br /&gt;
This is strange when we directly call lxc-clone will cause failed silently:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; # lxc-clone -o XXXXSimulator1 -n XXXXSimulator2
linux-:~ # echo $?
1

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then we use this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# bash /usr/bin/lxc-clone -o XXXXSimulator1 -n XXXXSimulator2
Tweaking configuration
Copying rootfs...
Updating rootfs...
&#39;XXXXSimulator2&#39; created
linux-:~ # lxc-ls
XXXXSimulator1  XXXXSimulator2

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Change the XXXXSimulator2&amp;rsquo;s configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /var/lib/lxc/XXXXSimulator2/config
lxc.network.ipv4 = xxx.xxx.xx.67

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now start the two LXC via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# lxc-start  -n XXXXSimulator2
# lxc-start  -n XXXXSimulator1
[Trusty@Linux01 ~]$ ping -c 1 xxx.xxx.xx.66
PING xxx.xxx.xx.66 (xxx.xxx.xx.66) 56(84) bytes of data.
64 bytes from xxx.xxx.xx.66: icmp_seq=1 ttl=64 time=1.50 ms

--- xxx.xxx.xx.66 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 1ms
rtt min/avg/max/mdev = 1.506/1.506/1.506/0.000 ms
[Trusty@Linux01 ~]$ ping -c 1 xxx.xxx.xx.67
PING xxx.xxx.xx.67 (xxx.xxx.xx.67) 56(84) bytes of data.
64 bytes from xxx.xxx.xx.67: icmp_seq=1 ttl=64 time=1.56 ms

--- xxx.xxx.xx.67 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 1ms
rtt min/avg/max/mdev = 1.567/1.567/1.567/0.000 ms

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Later we could configure the LXC, to let the container start at bootup, Or control its behavior.&lt;/p&gt;

&lt;h3 id=&#34;lxc-computer-configuration&#34;&gt;LXC Computer Configuration&lt;/h3&gt;

&lt;p&gt;The IP address and Default Gateway Configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lxc.network.type = veth
lxc.network.flags = up
lxc.network.link = br0
lxc.network.name = eth0
lxc.network.ipv4 = xxx.xxx.xx.59/24
lxc.network.ipv4.gateway = xxx.xxx.xx.1

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then start the LXC Container, you will see the ip address/netmask already configured.&lt;/p&gt;

&lt;h3 id=&#34;lxc-destroy&#34;&gt;LXC Destroy&lt;/h3&gt;

&lt;p&gt;Destroyed the unused Container2:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;linux-:~ # lxc-ls
XXXXSimulator1  XXXXSimulator2
linux-:~ # lxc-destroy -n XXXXSimulator2
linux-:~ # lxc-ls
XXXXSimulator1

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>