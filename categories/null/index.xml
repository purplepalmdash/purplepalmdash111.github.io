<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Null on Dash</title>
    <link>http://purplepalmdash.github.io/categories/null/</link>
    <description>Recent content in Null on Dash</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 May 2016 22:17:35 +0000</lastBuildDate>
    
	<atom:link href="http://purplepalmdash.github.io/categories/null/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>tips on lxc</title>
      <link>http://purplepalmdash.github.io/2016/05/10/tips-on-lxc/</link>
      <pubDate>Tue, 10 May 2016 22:17:35 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/05/10/tips-on-lxc/</guid>
      <description>Working Tips Just for importing the images and let it run in lxc
dash@ubuntu:~/may10$ ls ubuntu-14.04-server-cloudimg-amd64-lxd.tar.xz ubuntu-15.04-snappy-amd64-generic.img.xz ubuntu-16.04-server-cloudimg-amd64-root.tar.xz ubuntu-14.04-server-cloudimg-amd64-root.tar.xz ubuntu-16.04-server-cloudimg-amd64-lxd.tar.xz dash@ubuntu:~/may10$ lxc image import ubuntu-14.04-server-cloudimg-amd64-lxd.tar.xz ubuntu-14.04-server-cloudimg-amd64-root.tar.xz --alias ubuntu:14.04 Transferring image: 100% Image imported with fingerprint: b69c9370446a28c02ad5b0d41f07e028a1756a74bee62b7d59467201a6488fc2 dash@ubuntu:~/may10$ lxc image list +--------------+--------------+--------+------------------------------------+--------+----------+------------------------------+ | ALIAS | FINGERPRINT | PUBLIC | DESCRIPTION | ARCH | SIZE | UPLOAD DATE | +--------------+--------------+--------+------------------------------------+--------+----------+------------------------------+ | ubuntu:14.04 | b69c9370446a | no | Ubuntu 14.04 LTS server (20160406) | x86_64 | 118.</description>
    </item>
    
    <item>
      <title>Moving Docker Repository Position</title>
      <link>http://purplepalmdash.github.io/2016/04/15/moving-docker-repository-position/</link>
      <pubDate>Fri, 15 Apr 2016 15:55:15 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/04/15/moving-docker-repository-position/</guid>
      <description>Since the root partition is not so large, I have to change the default position of the docker repository, following are the steps:
Make a Soft Link Make a soft link to the docker repository via:
$ sudo mkdir DockerRepo $ sudo chown -R dash:dash DockerRepo $ sudo chmod 777 -R DockerRepo $ sudo tar -zcC /var/lib docker &amp;gt; /home/juju/DockerRepo/var_lib_docker-backup-$(date +%s).tar.gz $ ls -l -h /home/juju/DockerRepo $ sudo mv /var/lib/docker /home/juju/DockerRepo/ $ sudo ln -s /home/juju/DockerRepo/docker /var/lib/docker $ sudo service docker restart $ sudo service docker status  Notice: the tar -zcC will take a long time, be patient.</description>
    </item>
    
    <item>
      <title>Tips On Setup Eclipse CHE</title>
      <link>http://purplepalmdash.github.io/2016/04/06/tips-on-setup-eclipse-che/</link>
      <pubDate>Wed, 06 Apr 2016 11:40:05 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/04/06/tips-on-setup-eclipse-che/</guid>
      <description>Steps Reconfigure the LC_ALL, etc:
$ sudo vim /etc/environment LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 $ sudo locale-gen &amp;quot;en_US.UTF-8&amp;quot; $ sudo dpkg-reconfigure locales $ sudo reboot  Be Sure to use latest repository, like aliyun.com.
$ sudo apt-get update -y $ sudo bash # apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D #  Trouble-Shooting Docker download too slow, download it to local.</description>
    </item>
    
    <item>
      <title>Use Debmirror For Setup Local Repository</title>
      <link>http://purplepalmdash.github.io/2016/03/29/use-debmirror-for-setup-local-repository/</link>
      <pubDate>Tue, 29 Mar 2016 11:31:42 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/03/29/use-debmirror-for-setup-local-repository/</guid>
      <description>Setup Repository Install debmirror via:
$ sudo apt-get install -y debmirror $ sudo mkdir /home/UbuntuMirror $ sudo vim /usr/local/bin/mirrorbuild.sh  The mirrorbuild.sh file listed as following:
#### Start script to automate building of Ubuntu mirror ##### ## THE NEXT LINE IS NEEDED THE REST OF THE LINES STARTING WITH A # CAN BE DELETED #!/bin/bash ## Setting variables with explanations. # # Don&#39;t touch the user&#39;s keyring, have our own instead # export GNUPGHOME=/home/mirrorkeyring # Arch= -a # Architecture.</description>
    </item>
    
    <item>
      <title>Reading In 2015</title>
      <link>http://purplepalmdash.github.io/2016/02/06/reading-in-2015/</link>
      <pubDate>Sat, 06 Feb 2016 21:55:47 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/02/06/reading-in-2015/</guid>
      <description>What I have read in pasted 2015.
102547607 流冰之恋 (日)渡边淳一著 I313.4/1852 2016-01-25 103994448 苏丝黄的世界 (英)理查德·梅森(Richard Mason)著 I561.4/2374 2016-01-25 102679289 睡美人 (日)川端康成著 I313.4/1909 2016-01-25 103282447 河童 (日)芥川龙之介著 I313.4/2129 2016-01-25 102542457 晚年 (日)太宰治著 I313.4/1787 2016-01-25 102542553 维庸之妻 (日)太宰治著 I313.4/1786 2016-01-25 103721231 西线无战事 (德)埃里希·玛丽亚·雷马克(E. M. Remarque)著 I516.44/L23-5/[3] 2016-01-25 103818078 失乐园：名著插图本 (英)约翰·弥尔顿(John Milton)著 I561/191 2016-01-25 100884493 近代中国人的生活掠影 (英)约翰·麦高恩著 I561/133 2016-01-25 103545690 天国之秋 (美)裴士锋(Stephen R. Platt)著 K254/63 2016-01-25 101125097 从清华到联大 朱自清著 K825.6/1972 2016-01-25 102500618 我的人生故事：周有光著作精选 周有光[著] K825.</description>
    </item>
    
    <item>
      <title>elastistor data</title>
      <link>http://purplepalmdash.github.io/2015/12/28/elastistor-data/</link>
      <pubDate>Mon, 28 Dec 2015 22:01:03 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2015/12/28/elastistor-data/</guid>
      <description>Using NFS for testing.
dash@agent:/sdb4$ echo &amp;quot;iops 5&amp;quot; iops 5 dash@agent:/sdb4$ time cp Kinetis\ SDK\ 1.3.0\ Mainline\ -\ Windows.exe /mnt/ real 1m1.908s user 0m0.002s sys 0m0.156s dash@agent:/sdb4$ time cp Kinetis\ SDK\ 1.3.0\ Mainline\ -\ Windows.exe /mnt/2.exe real 0m59.375s user 0m0.001s sys 0m0.154s dash@agent:/sdb4$ rm -f /mnt/ 2.exe Kinetis SDK 1.3.0 Mainline - Windows.exe dash@agent:/sdb4$ rm -f /mnt/* dash@agent:/sdb4$ echo &amp;quot;iops 50&amp;quot; iops 50 dash@agent:/sdb4$ time cp Kinetis\ SDK\ 1.3.0\ Mainline\ -\ Windows.</description>
    </item>
    
    <item>
      <title>20151008备注</title>
      <link>http://purplepalmdash.github.io/2015/10/08/20151008bei-zhu/</link>
      <pubDate>Thu, 08 Oct 2015 18:42:34 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2015/10/08/20151008bei-zhu/</guid>
      <description>Docker markdowncv容器启动以后，用python执行一个简单的http server，这时候需要更改其默 认主页，并且做端口映射到主机。
墙外楼推送 用Python的Beautiful Soup或其他的模块，抠到墙外楼上每天更新的文章，同步到某个信 箱，或者直接推送到NOOK?
Cloud-Init 这个东西可以用来管理用户名和密码的更新，从而需要引入新的数据库管理机制之类，可 以在这个星期做一下研究。
Auto-Run Task 启动时，自动同步几个仓库的情况，需要用expect来做，并且添加到awesome启动中。
Synergy Integration How to move the mouse from the 1.4&amp;rsquo;s Synergy Server to 1.3&amp;rsquo;s Synergy Client?</description>
    </item>
    
    <item>
      <title>Use Jenkins For Building Packer Images</title>
      <link>http://purplepalmdash.github.io/2015/08/26/use-jenkins-for-building-packer-images/</link>
      <pubDate>Wed, 26 Aug 2015 16:36:20 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2015/08/26/use-jenkins-for-building-packer-images/</guid>
      <description>Installation Jenkins Refers to https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins+on+Ubuntu
$ wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add - $ sudo sh -c &#39;echo deb http://pkg.jenkins-ci.org/debian binary/ &amp;gt; /etc/apt/sources.list.d/jenkins.list&#39; $ sudo apt-get update $ sudo apt-get install -y jenkins  Install Packer Plugins Manually(But failed), so finally I use the web-backed for installing.
$ wget https://ci.jenkins-ci.org/jnlpJars/jenkins-cli.jar $ java -jar jenkins-cli.jar -s http://localhost:8080 help $ java -jar jenkins-cli.jar -s http://localhost:8080 list-plugins $ java -jar jenkins-cli.</description>
    </item>
    
    <item>
      <title>Customize Kickstart For SpaceWalk</title>
      <link>http://purplepalmdash.github.io/2015/08/22/customize-kickstart-for-spacewalk/</link>
      <pubDate>Sat, 22 Aug 2015 18:53:09 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2015/08/22/customize-kickstart-for-spacewalk/</guid>
      <description>Software Selection An example is listed as:
@ Base firefox @ Gnome ibus-table-cangjie ibus-table-erbi ibus-table-wubi python-dmidecode python-hwdata @X Window System @gnome-desktop @graphics @input-methods @remote-desktop-clients @internet-browser @multimedia @web-server @x11  Defined in:
More detailed configuration could be found at the DVD-ROM of the CentOS7:
# ls /var/distro-trees/centos7_64/repodata 175ddec2056ec6b5ef267cea35f8ec679314afbfb019957e53f71725bcc5d829-c7-x86_64-comps.xml  This xml file include all of the possible groups.</description>
    </item>
    
    <item>
      <title>Preseed Partition Configuration</title>
      <link>http://purplepalmdash.github.io/2015/08/13/preseed-partition-configuration/</link>
      <pubDate>Thu, 13 Aug 2015 21:55:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2015/08/13/preseed-partition-configuration/</guid>
      <description> Regular Partition Use regular configuration of the partion:
d-i partman-auto/disk string /dev/vda d-i partman-auto/method string regular d-i partman-auto/choose_recipe \ select All files in one partition (recommended for new users) d-i partman/confirm_write_new_label boolean true # d-i partman/choose_partition \ select Finish partitioning and write changes to disk d-i partman/confirm boolean true d-i partman/confirm_nooverwrite boolean true  </description>
    </item>
    
    <item>
      <title>Re-Orgnize Blog</title>
      <link>http://purplepalmdash.github.io/2015/05/16/re-orgnize-blog/</link>
      <pubDate>Sat, 16 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2015/05/16/re-orgnize-blog/</guid>
      <description>Since my last blog touched something special, I have to delete the whole repository and re-orgnize the structure again. This time I also use Octopress, but the version has been upgraded to the 3.0, this article records the steps.
Github Account Register a new account, and verrify the email, add your own ssh key, test it via ssh -T git@github.com
Repository Get the latest repository via:
$ git clone https://github.</description>
    </item>
    
    <item>
      <title>Build qemu for supporting glustfs</title>
      <link>http://purplepalmdash.github.io/2015/04/01/build-qemu-for-supporting-glustfs/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2015/04/01/build-qemu-for-supporting-glustfs/</guid>
      <description>Following is the build procedure.
$ sudo apt-get build-dep qemu $ sudo apt-get install libvde-dev libvdeplug2-dev libcap-ng-dev libattr1-dev $ wget http://wiki.qemu-project.org/download/qemu-2.0.2.tar.bz2 $ tar xjvf qemu-2.0.2.tar.bz2 $ cd qemu-2.0.2/ $ mkdir -p bin/debug/native $ cd bin/debug/native $ sudo apt-get install libjpeg-turbo8-dev $ sudo apt-get install glusterfs-common ../../../configure --enable-sdl --audio-drv-list=alsa,oss --enable-curses --enable-vnc-jpeg --enable-curl --enable-fdt --enable-kvm --enable-tcg-interpreter --enable-system --enable-user \\n --enable-linux-user --enable-guest-base --enable-pie --enable-uuid --enable-vde --enable-linux-aio --enable-cap-ng --enable-attr --enable-docs --enable-vhost-net --enable-rbd \\n --enable-guest-agent --enable-glusterfs --target-list=x86_64-softmmu,i386-softmmu .</description>
    </item>
    
    <item>
      <title>Whole Process For Deploying Contrail</title>
      <link>http://purplepalmdash.github.io/2015/03/30/whole-process-for-deploying-contrail/</link>
      <pubDate>Mon, 30 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2015/03/30/whole-process-for-deploying-contrail/</guid>
      <description>Following are the steps, enjoy them:
# First bootstrap the environment. juju bootstrap --metadata-source ~/.juju/metadata --upload-tools -v --show-log --constraints=&amp;quot;mem=3G&amp;quot; ##################################################### # Machine 0, hold 9 services. 3G mem. trusty # Memory: 3G # Service: 10 ##################################################### # Since machine 0 is ready for using, deploy services to this node via following commands: # Juju-gui is for monitoring the status and the components # 1. juju-gui juju deploy --to 0 --repository=/home/Trusty/charms/ local:trusty/juju-gui # 2.</description>
    </item>
    
    <item>
      <title>juju tips</title>
      <link>http://purplepalmdash.github.io/2015/03/26/juju-tips/</link>
      <pubDate>Thu, 26 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2015/03/26/juju-tips/</guid>
      <description>Add Specified Machine We could add the specified name of the machine:
$ juju add-machine MaasOpenContrail6.maas  While the name of MaasOpenContrail6.maas is the name which we could get from the MAAS webUI.
Get/Set Constraints We could dynamically set constraints for adding/removing new machines or unit, get/set it via:
$ juju get-constraints mem=3072M $ juju set-constraints &amp;quot;mem=1024M&amp;quot; $ juju get-constraints mem=1024M  Tags Sometimes we need to add tags to specified maas units, the following webpage is for reference:</description>
    </item>
    
    <item>
      <title>Build OpenContrail On CentOS7(Local)</title>
      <link>http://purplepalmdash.github.io/2015/02/10/build-opencontrail-on-centos7-local/</link>
      <pubDate>Tue, 10 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2015/02/10/build-opencontrail-on-centos7-local/</guid>
      <description>Fresh steps.
$ sudo yum update $ sudo yum install vim $ sudo yum install net-tools $ sudo yum install -y scons git python-lxml wget gcc patch make unzip flex bison gcc-c++ openssl-devel autoconf automake vim python-devel python-setuptools protobuf protobuf-devel protobuf-compiler net-snmp-python libtool kernel-devel bzip2 boost-devel tbb-devel libcurl-devel libxml2-devel scons protobuf protobuf-devel protobuf-compiler $ sudo yum install -y https://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm $ sudo sed -i -e &#39;s/enabled=1/enabled=0/&#39; /etc/yum.repos.d/epel.repo $ sudo yum install -y --disablerepo=&amp;quot;*&amp;quot; --enablerepo=&amp;quot;epel&amp;quot; scons protobuf protobuf-devel protobuf-compiler $ sudo yum install -y bzip2 boost-devel tbb-devel libcurl-devel libxml2-devel  As root, Add repositories:</description>
    </item>
    
    <item>
      <title>Test in YY</title>
      <link>http://purplepalmdash.github.io/2015/01/19/test-in-yy/</link>
      <pubDate>Mon, 19 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2015/01/19/test-in-yy/</guid>
      <description>See If I could update in YY?</description>
    </item>
    
    <item>
      <title>git under proxy</title>
      <link>http://purplepalmdash.github.io/2014/11/02/git-under-proxy/</link>
      <pubDate>Sun, 02 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/11/02/git-under-proxy/</guid>
      <description>This changes use the socks proxy for git.
Install connect-proxy in aur:
yaourt -S connect-proxy  Edit the proxy definition file:
[Trusty@~]$ cat socks5.sh #!/bin/sh connect -S 127.0.0.1:1394 &amp;quot;$@&amp;quot;  Now directly set the
export GIT_PROXY_COMMAND=/home/Trusty/socks5.sh  Or change the proxy definition via:
[core] gitproxy = /home/Trusty/socks5.sh  </description>
    </item>
    
    <item>
      <title>Trouble-Shooting on LXC of ArchLinux</title>
      <link>http://purplepalmdash.github.io/2014/10/19/trouble-shooting-on-lxc-of-archlinux/</link>
      <pubDate>Sun, 19 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/10/19/trouble-shooting-on-lxc-of-archlinux/</guid>
      <description>I try to install ubuntu on ArchLinux using LXC, for the nfs server in ArchLinux seems forbidden the nfsv3&amp;rsquo;s client request, but in my joggler(which runs 12.04 server) the nfs server works OK, so I installed this version for validation.
Install method Install the ubuntu machine via following method:
lxc-create -n Ubuntu_Container -t /usr/share/lxc/templates/lxc-ubuntu  Trouble Shooting qemu-debootstrap No debootstrap in Archlinux:
which: no qemu-debootstrap in  Solution: create a soft link from debootstrap to qemu-debootstrap:</description>
    </item>
    
    <item>
      <title>Blueman</title>
      <link>http://purplepalmdash.github.io/2014/10/16/blueman/</link>
      <pubDate>Thu, 16 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/10/16/blueman/</guid>
      <description>Since I installed the ArchLinux around 3 months ago, but I am too busy to enable the bluetooth headset, now I am free finally, so this is the steps for enable the bluetooth headset.
Software Installation Install blueman:
$ sudo pacman -S blueman $ sudo pacman -S bluez-utils bluez-libs python2-pybluez  Wait, this method is not OK for current bluez5, so I need to switch to other method.
Use official website, named&amp;rdquo;Bluetooth headset&amp;rdquo; on ArchLinux Wiki.</description>
    </item>
    
    <item>
      <title>Convert different format in python</title>
      <link>http://purplepalmdash.github.io/2014/09/24/convert-different-format-in-python/</link>
      <pubDate>Wed, 24 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/09/24/convert-different-format-in-python/</guid>
      <description>The following commands is for directly convert ascii, numbers in python:
$ python2 &amp;gt;&amp;gt;&amp;gt; str(unichr(97)) &#39;a&#39; &amp;gt;&amp;gt;&amp;gt; str(unichr(0x68)) &#39;h&#39; &amp;gt;&amp;gt;&amp;gt; str(unichr(0x5a)) &#39;Z&#39; &amp;gt;&amp;gt;&amp;gt; bin(0x2711) &#39;0b10011100010001&#39; &amp;gt;&amp;gt;&amp;gt; 0x2711 10001 &amp;gt;&amp;gt;&amp;gt; hex(1127) &#39;0x467&#39;  </description>
    </item>
    
    <item>
      <title>Big-Little Endian</title>
      <link>http://purplepalmdash.github.io/2014/09/17/big-little-endian/</link>
      <pubDate>Wed, 17 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/09/17/big-little-endian/</guid>
      <description>An elegant way for juding big-endian or little-endian of processor:
eCCM2-root-root&amp;gt; python -c &amp;quot;import sys;sys.exit(0 if sys.byteorder==&#39;big&#39; else 1)&amp;quot; eCCM2-root-root&amp;gt; echo $? 0 [Trusty@~]$ python -c &amp;quot;import sys;sys.exit(0 if sys.byteorder==&#39;big&#39; else 1)&amp;quot; [Trusty@~]$ echo $? 1  So we could see powerpc is the big-endian, while PC is little-endian.</description>
    </item>
    
    <item>
      <title>Video Card Problem on ArchLinux</title>
      <link>http://purplepalmdash.github.io/2014/07/20/video-card-problem-on-archlinux/</link>
      <pubDate>Sun, 20 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/07/20/video-card-problem-on-archlinux/</guid>
      <description>The video card crash problem is caused by acceleration method chosen. My ArchLinux Installed on 2013.06.30, while at that time the default acceleration method is uxa, but now most of it uses sna. So if I choose sna instead of uxa, then problem will be solved.
[Trusty@~]$ cat /var/log/Xorg.0.log | grep -i uxa [ 7841.603] (**) intel(0): Option &amp;quot;AccelMethod&amp;quot; &amp;quot;uxa&amp;quot; [ 7841.638] (II) UXA(0): Driver registered support for the following operations: [ 7841.</description>
    </item>
    
    <item>
      <title>My Translator In ArchLinux(3)</title>
      <link>http://purplepalmdash.github.io/2014/07/07/my-translator-in-archlinux-3/</link>
      <pubDate>Mon, 07 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/07/07/my-translator-in-archlinux-3/</guid>
      <description>Using radis for cache the dictionary.
 # In C, it&#39;s simple to use do...while(), but in python, we need to judge the input, # Fortunately, the input is very simple, because get infos from RedisQue is blocking. # Forever Listening... while True: # Key in RedisQueue is &#39;dic&#39;, and we simply get its content: q = RedisQueue(&#39;dic&#39;) # cmdargs = q.get() # cmdargs = str(sys.argv) ## args to_be_refer_word = q.</description>
    </item>
    
    <item>
      <title>Deploy Snova On Heroku</title>
      <link>http://purplepalmdash.github.io/2014/05/03/deploy-snova-on-heroku/</link>
      <pubDate>Sat, 03 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/05/03/deploy-snova-on-heroku/</guid>
      <description>###Setting Account First you have to install heroku deploy tool via:
$ heroku plugins:install https://github.com/heroku/heroku-deploy  Then login and create the app:
$ heroku login Enter your Heroku credentials. Email: xxx@gmail.com Password (typing will be hidden): Authentication failed. $ $ heroku apps:create xxx Creating xxx... done, stack is cedar http://xxx.herokuapp.com/ | git@heroku.com:xxx.git  ###Source Code Preparation Download the source code from https://code.google.com/p/snova/, here you need to cross the Greatwall.
wget https://code.</description>
    </item>
    
    <item>
      <title>Install xampp on ArchLinux</title>
      <link>http://purplepalmdash.github.io/2014/04/18/install-xampp-on-archlinux/</link>
      <pubDate>Fri, 18 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/04/18/install-xampp-on-archlinux/</guid>
      <description>Install xampp in ArchLinux via:
	yaourt xampp pacman -U xampp-1.8.1-1-x86_64.pkg.tar.xz  Stop and disable the previous installed service:
	systemctl stop httpd.service systemctl stop mysqld systemctl stop vsftpd systemctl disable httpd.service systemctl disable mysqld systemctl disable vsftpd  Start the xampp via:
	/opt/lampp/lampp start  Other commands: start/restart/stop.</description>
    </item>
    
    <item>
      <title>Miragate Wordpress From Development Machine To Server</title>
      <link>http://purplepalmdash.github.io/2014/04/15/miragate-wordpress-from-development-machine-to-server/</link>
      <pubDate>Tue, 15 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/04/15/miragate-wordpress-from-development-machine-to-server/</guid>
      <description>First Log on to the development machine, view the configuration file of the Wordpress:
	// ** MySQL settings - You can get this info from your web host ** // /** The name of the database for WordPress */ define(&#39;DB_NAME&#39;, &#39;wordpress&#39;); /** MySQL database username */ define(&#39;DB_USER&#39;, &#39;wordpressuser&#39;); /** MySQL database password */ define(&#39;DB_PASSWORD&#39;, &#39;password&#39;); /** MySQL hostname */ define(&#39;DB_HOST&#39;, &#39;localhost&#39;);  Dump out the database:
mysqldump &amp;ndash;user=wordpressuser -p wordpress &amp;gt;wordpress.</description>
    </item>
    
    <item>
      <title>Adding Battery Widget and ACPI Notification in Awesome</title>
      <link>http://purplepalmdash.github.io/2014/02/18/adding-battery-widget-and-acpi-notification-in-awesome/</link>
      <pubDate>Tue, 18 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/02/18/adding-battery-widget-and-acpi-notification-in-awesome/</guid>
      <description>For keeping the &amp;ldquo;Clean Desktop&amp;rdquo;, the cleaner in my office unpluged my laptop&amp;rsquo;s powerline, and the laptop suddenly going to black when I was coding, so I want to write some scripts for calculating the battery&amp;rsquo;s power percentage and got notification when the power of the battery is too low. ###Add an indicator in Awesome Desktop Awesome have a very good 3rd-party library called &amp;ldquo;Vicious&amp;rdquo;, its page is athttp://awesome.naquadah.org/wiki/Vicious, following the guideline for install and configure it.</description>
    </item>
    
    <item>
      <title>How to manage wordpress based CMS</title>
      <link>http://purplepalmdash.github.io/2014/01/01/how-to-manage-wordpress-based-cms/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/01/01/how-to-manage-wordpress-based-cms/</guid>
      <description>What is CMS?
Content Management System.
###登入管理 Click &amp;ldquo;登入管理&amp;rdquo;
###增加新页面 页面会出现在导航栏中，如下：
增加方法：
开始撰写新页面：
点”发布”，可以看到新增加的页面
###如何在父页面下增加新页面 我们需要在这个下拉列表中增加一个“”新增页面“”的页面
新建-&amp;gt; 页面，到撰写窗口
这时候可以看到：
###编辑box内容 Box是该模板使用的小插件，如果需要定制的话，可以依下面步骤进行.
如何自定义Box? 后台点击ifeatures选项：
在出现的页面中点击博客-&amp;gt;盒子精简版：
Wordpress是一个很强大的内容管理系统，更多的特性可以在后台直接摸索出来，例如，添加博客，添加视频等等。Don&amp;rsquo;t afraid of it, Just Enjoy it.</description>
    </item>
    
    <item>
      <title>Problem of Capcity</title>
      <link>http://purplepalmdash.github.io/2013/11/20/problem-of-capcity/</link>
      <pubDate>Wed, 20 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2013/11/20/problem-of-capcity/</guid>
      <description>Image1:
Image2:
Image3:
Image4:
Image5:</description>
    </item>
    
    <item>
      <title>Things to be Done in Nov19</title>
      <link>http://purplepalmdash.github.io/2013/11/19/things-to-be-done-in-nov19/</link>
      <pubDate>Tue, 19 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2013/11/19/things-to-be-done-in-nov19/</guid>
      <description>1. Awesome tips, for example, drop-down terminal.
2. Verify the XBMC on Raspberry Pi.
3. Using IRremote on XBMC and know its principle.
4. BeagleBone&amp;rsquo;s old kernel and the old style tutorial.
5. Device tree of kernel on BeagleBone.
6. MP3 Player in IRremote control on Arduino.
7. Awesome Book in mobi or epub and send it to Kindle.
8. How to enable the various display method on Arduino(12864, Nokia5110, etc?</description>
    </item>
    
  </channel>
</rss>