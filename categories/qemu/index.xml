<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Qemu on Dash</title>
    <link>http://purplepalmdash.github.io/categories/qemu/</link>
    <description>Recent content in Qemu on Dash</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Mar 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://purplepalmdash.github.io/categories/qemu/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building Qemu Based RaspberryPI Development Environment</title>
      <link>http://purplepalmdash.github.io/2014/03/18/building-qemu-based-raspberrypi-development-environment/</link>
      <pubDate>Tue, 18 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/03/18/building-qemu-based-raspberrypi-development-environment/</guid>
      <description>First download the latest image from http://www.raspberrypi.org/downloads, mine is Wheezy. And we also have to download the qemu-compatible kernel from following address:
	$ wget http://xecdesign.com/downloads/linux-qemu/kernel-qemu  Change the img file according to http://localhost/blog/2013/09/04/qemu-for-raspberrypi/, follow this tutorial, you have to change the img file size and its content, but we have to do some modifications. The run-qemu file is changed to following: 	#!/bin/bash USERID=$(whoami) # Get name of newly created TAP device; see https://bbs.</description>
    </item>
    
    <item>
      <title>KALI Linux in Qemu</title>
      <link>http://purplepalmdash.github.io/2013/12/12/kali-linux-in-qemu/</link>
      <pubDate>Thu, 12 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2013/12/12/kali-linux-in-qemu/</guid>
      <description>Download the iso from kali websitehttp://www.kali.org/downloads/:
	$ wget http://cdimage.kali.org/kali-images/kali-1.0.5/kali-linux-1.0.5-i386.iso  Create qemu img file:
	$ qemu-img create -f qcow2 kali.qcow2 30G Formatting &#39;kali.qcow2&#39;, fmt=qcow2 size=32212254720 encryption=off cluster_size=65536 lazy_refcounts=off Run installation. Here we use the run-qemu script which has been generated before under the same directory: [Trusty@DashArch kali]$ ./run-qemu -hda ./kali.qcow2 -boot d -cdrom /media/nfs/iso/kali-linux-1.0.5-i386.iso -m 1024 -enable-kvm -usb  Choose &amp;ldquo;Graphic Install&amp;rdquo; because currently we are not familiar with this brand new distribution.</description>
    </item>
    
    <item>
      <title>Enable spice for qemu virtual machine</title>
      <link>http://purplepalmdash.github.io/2013/12/06/enable-spice-for-qemu-virtual-machine/</link>
      <pubDate>Fri, 06 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2013/12/06/enable-spice-for-qemu-virtual-machine/</guid>
      <description>###Package Installation Install virt-viewer for browsing the virtual machine desktop. For default spicec is not OK.
	$ pacman -S gtk-vnc $ yaourt -S spice-gtk3 $ yaourt -S virt-viewer  Install virt-manager
	[root@DashArch Trusty]# pacman -S virt-manager [root@DashArch Trusty]# systemctl start libvirtd.service [root@DashArch Trusty]# systemctl enable libvirtd.service ln -s &#39;/usr/lib/systemd/system/libvirtd.service&#39; &#39;/etc/systemd/system/multi-user.target.wants/libvirtd.service&#39; [root@DashArch Trusty]# ps -ef | grep libvirt root 8852 1 5 15:23 ? 00:00:00 /usr/bin/libvirtd -p /var/run/libvirtd.pid  ###启动支持spice Server的qemu -vga qxl -spice port=5988,disable-ticketing将使能spice</description>
    </item>
    
    <item>
      <title>Install Qemu virtio driver under windows</title>
      <link>http://purplepalmdash.github.io/2013/12/06/install-qemu-virtio-driver-under-windows/</link>
      <pubDate>Fri, 06 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2013/12/06/install-qemu-virtio-driver-under-windows/</guid>
      <description>Download the iso file from the redhat repository:
http://alt.fedoraproject.org/pub/alt/virtio-win/latest/images/images/images/bin/src/
Start the qemu with the following command :
 ./run-qemu -hda fpgawindows.qcow2 -m 1024 -cdrom ./virtio-win-0.1-74.iso -drive file=./fake.qcow2,if=ide  In run-qemu, the actual command is:
	qemu-system-i386 -net nic,model=virtio,macaddr=$macaddr -net tap,ifname=&amp;quot;$IFACE&amp;quot; $*  Then, follow the following images to operate:</description>
    </item>
    
  </channel>
</rss>