<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mac on Dash</title>
    <link>http://purplepalmdash.github.io/categories/mac/</link>
    <description>Recent content in Mac on Dash</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 22 Nov 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://purplepalmdash.github.io/categories/mac/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Tips For Mac</title>
      <link>http://purplepalmdash.github.io/2014/11/22/tips-for-mac/</link>
      <pubDate>Sat, 22 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/11/22/tips-for-mac/</guid>
      <description>

&lt;h3 id=&#34;set-proxy&#34;&gt;Set Proxy&lt;/h3&gt;

&lt;p&gt;The proxy setting method is the same as in Linux, just add following lines into the ~/.bashrc:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Set the proxy
alias unsethome=&#39;unset http_proxy https_proxy ftp_proxy ftps_proxy&#39;
alias set2383=&#39;unsethome;export http_proxy=http://xxx.xx.xx238:2383;export https_proxy=http://xxx.xx.xx238:2383;export ftp_proxy=http://xxx.xx.xx238:2383;export ftps_proxy=http://xxx.xx.xx238:2383&#39;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So next time simply run &lt;code&gt;set2383&lt;/code&gt; then you could set the proxy for terminal based programs.&lt;/p&gt;

&lt;h3 id=&#34;package-management&#34;&gt;Package Management&lt;/h3&gt;

&lt;p&gt;brew is a very good package management tool for MAC, install it via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install packages like following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install wget

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After installation the wget becomes available for using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Yosemite:~ Trusty$ which wget
/usr/local/bin/wget

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;brew-installed-packages&#34;&gt;Brew Installed Packages&lt;/h3&gt;

&lt;p&gt;Use brew to install frequently used tools:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install wget tree

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;git-configuration-for-proxy&#34;&gt;Git Configuration For Proxy&lt;/h3&gt;

&lt;p&gt;Since I worked under the proxy in office, so I need to configure a tunnel which could makes me go through the firewall:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Yosemite:Code Trusty$ git config --global user.name &amp;quot;xxxx&amp;quot;
Yosemite:Code Trusty$ git config --global user.email &amp;quot;xxxx@gmail.com&amp;quot;
Yosemite:Code Trusty$ cat ~/.gitconfig
[user]
	name = xxx
	email = xxx@gmail.com

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compile the connect.c via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pwd
/Users/Trusty/Code/proxy
$ gcc -o connect connect.c

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Configure the file via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Yosemite:proxy Trusty$ cat sock5.sh
#!/bin/bash
/Users/Trusty/Code/proxy/connect -H 1xx.x.xx.2xx:2xxx &amp;quot;$@&amp;quot;
Yosemite:proxy Trusty$ chmod 777 *

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add the following part in your ~/.gitconfig:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[core]
	gitproxy = /Users/Trusty/Code/proxy/socks5.sh

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now open a new terminal and git from a test repository via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git linux-git
Cloning into &#39;linux-git&#39;...
remote: Counting objects: 3857384, done.
remote: Compressing objects: 100% (5000/5000), done.
^Cfatal: index-pack failed95/3857384), 436.00 KiB | 152.00 KiB/s

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See? You really acrossed the firewall and reached Linus Torvalds&amp;rsquo; git tree.&lt;/p&gt;

&lt;h3 id=&#34;iterms2-colorscheme&#34;&gt;iterms2 Colorscheme&lt;/h3&gt;

&lt;p&gt;Default iterm2 is ugly, so we need to download the good style of colorschemes,&lt;br /&gt;
&lt;a href=&#34;iterm2colorschemes.com&#34;&gt;iterm2colorschemes.com&lt;/a&gt;&lt;br /&gt;
Also you could select whatever you like from the screen-shots.&lt;br /&gt;
Hit cmd+i then you got whatever you want import.&lt;/p&gt;

&lt;h3 id=&#34;sudo-tips&#34;&gt;sudo tips&lt;/h3&gt;

&lt;p&gt;For keeping the current environment, just do following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo visudo
Defaults	env_keep += &amp;quot;http_proxy https_proxy ftp_proxy ftps_proxy&amp;quot;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Restart or open a new terminal, now your sudo command won&amp;rsquo;t fail because of the proxy configuration.&lt;/p&gt;

&lt;h3 id=&#34;make-alias-to-chromium&#34;&gt;Make Alias to Chromium&lt;/h3&gt;

&lt;p&gt;The default installation of applications in mac maybe at the random place, so we have to make alias for whatever application we want to call in shell, like following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias chromium=&amp;quot;/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome 2&amp;gt;/dev/null&amp;quot;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So next time you could directly call &lt;code&gt;chromium&lt;/code&gt; for testing. Notice, &lt;code&gt;2&amp;gt;/dev/null&lt;/code&gt; means we don&amp;rsquo;t care about the stderr out.&lt;/p&gt;

&lt;h3 id=&#34;call-console-in-chromium&#34;&gt;Call Console in Chromium&lt;/h3&gt;

&lt;p&gt;Simply call cmd+opt+i, mapping to keyboard is win+alt+i.&lt;/p&gt;

&lt;h3 id=&#34;list-disk-usage&#34;&gt;List Disk Usage&lt;/h3&gt;

&lt;p&gt;Since &amp;ldquo;fdisk -l&amp;rdquo; is illegal options in MACOS, we have to use following command for displaying the disk usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ diskutil list
/dev/disk0
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:      GUID_partition_scheme                        *64.0 GB    disk0
   1:                        EFI EFI                     209.7 MB   disk0s1
   2:          Apple_CoreStorage                         63.2 GB    disk0s2
   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
/dev/disk1
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:                  Apple_HFS Hard                   *62.8 GB    disk1
                                 Logical Volume on disk0s2
                                 FBBDE745-2F1F-4B7A-8870-A9031F6E24CD
                                 Unencrypted

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;wallpapers&#34;&gt;Wallpapers&lt;/h3&gt;

&lt;p&gt;macOSx have lots of wallpapers, we could fetch it via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scp -r /Library/Desktop\ Pictures/ xxx@10.0.0.221:/home/xxx

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then all of the pictures are now in remote machines.&lt;/p&gt;

&lt;h3 id=&#34;updatedb&#34;&gt;updatedb&lt;/h3&gt;

&lt;p&gt;For equivalent to Linux&amp;rsquo;s updatedb, simply run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /usr/libexec/locate.updatedb

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Tips on installing Yosemite</title>
      <link>http://purplepalmdash.github.io/2014/11/18/tips-on-installing-yosemite/</link>
      <pubDate>Tue, 18 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/11/18/tips-on-installing-yosemite/</guid>
      <description>&lt;p&gt;First get the installation image from the AppStore, then format a flash-disk more than 8G to following format:&lt;br /&gt;
&lt;img src=&#34;http://purplepalmdash.github.io/images/macosdisk.jpg&#34; alt=&#34;/images/macosdisk.jpg&#34; /&gt;&lt;br /&gt;
Use following commands for creating the installation media:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kkkkkkkktttt-iMac:~ Trusty$ sudo /Applications/Install\ OS\ X\ Yosemite.app/Contents/Resources/createinstallmedia --volume /Volumes/Install --applicationpath /Applications/Install\ OS\ X\ Yosemite.app --nointeraction

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Take a coffee, cause this will spend a long time for copying everything you need into the disk.&lt;/p&gt;

&lt;p&gt;Install Clover:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/clover1.jpg&#34; alt=&#34;/images/clover1.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Customize Clover installation:&lt;br /&gt;
&lt;img src=&#34;http://purplepalmdash.github.io/images/clover2.jpg&#34; alt=&#34;/images/clover2.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/clover3.jpg&#34; alt=&#34;/images/clover3.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Copy the dsdt &amp;amp; ssdt files to EFI partition:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kkkkkkkktttt-iMac:Dsdt &amp;amp; Ssdt Trusty$ pwd
/Users/Trusty/Desktop/MacOS/SurfacePro/SurfacePro 1Â° Gen FilesPackage V.0.5.1/Dsdt &amp;amp; Ssdt
kkkkkkkktttt-iMac:Dsdt &amp;amp; Ssdt Trusty$ cp -ar * /Volumes/ESP/EFI/CLOVER/ACPI/patched/

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Copy some device driver files into the Clover:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kkkkkkkktttt-iMac:MacOS Trusty$ tar xzvf GenericUSBXHCI_1.2.7.tar.gz 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Copy GenericUSBXHCI.kext to 10.9/ 10.10/ Other/:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kkkkkkkktttt-iMac:kexts Trusty$ pwd
/Volumes/ESP/EFI/CLOVER/kexts
kkkkkkkktttt-iMac:kexts Trusty$ ls -F
10.10/  10.6/   10.7/   10.8/   10.9/   Other/
kkkkkkkktttt-iMac:10.10 Trusty$ sudo cp -r  /Users/Trusty/Desktop/MacOS/GenericUSBXHCI_Yosemite/ /Volumes/ESP/EFI/CLOVER/kexts/10.10/

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Also we have to copy the fakesmc.kext should be copied to above folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kkkkkkkktttt-iMac:kexts Trusty$ ls *
10.10:
GenericUSBXHCI.kext     fakesmc.kext

10.6:

10.7:

10.8:

10.9:
GenericUSBXHCI.kext     fakesmc.kext

Other:
GenericUSBXHCI.kext     fakesmc.kext

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now copy the config.plist into the CLOVER root directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kkkkkkkktttt-iMac:SurfacePro 1Â° Gen FilesPackage V.0.5.1 Trusty$ pwd
/Users/Trusty/Desktop/MacOS/SurfacePro/SurfacePro 1Â° Gen FilesPackage V.0.5.1
kkkkkkkktttt-iMac:SurfacePro 1Â° Gen FilesPackage V.0.5.1 Trusty$ ls config.plist 
config.plist

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you got your installation disk OK.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>