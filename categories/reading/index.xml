<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reading on Dash</title>
    <link>http://purplepalmdash.github.io/categories/reading/</link>
    <description>Recent content in Reading on Dash</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jan 2017 12:06:14 +0800</lastBuildDate>
    
	<atom:link href="http://purplepalmdash.github.io/categories/reading/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>后台开发读书笔记</title>
      <link>http://purplepalmdash.github.io/blog/2017/01/10/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 10 Jan 2017 12:06:14 +0800</pubDate>
      
      <guid>http://purplepalmdash.github.io/blog/2017/01/10/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid>
      <description>从图书馆借回来不少书，其中有一本腾讯工程师写的《后台开发核心技术与应用实践》，这本书的内容很浅显易懂， 基本上涵盖了Linux下C++开发在一般公司能用到的范畴。作者也说了，她写书的初衷在于用最短的篇幅讲解实际后台 用到的核心知识点以便读者能快速进入到实际开发中。扫了扫，前两张用来复习准备面试中有关C++的内容不错。
想提升的就算了，这本书的代码和调试手段都比较初级，实际工作中，需要更多的借助Google和开源社区来完成。
这里记录的主要是本人对该书里提到的一些概念的理解.
第一章 函数模板/函数重载 1.2函数章节里，关于函数重载和函数模板的理解可以用下面的代码来解释，左边是用函数重载的情形，可以看到一个 同名函数可以有多个参数版本，而右边的函数模板则引用了模板的概念，大大节约了代码行。
#include&amp;lt;iostream&amp;gt; #include&amp;lt;iostream&amp;gt; using namespace std; using namespace std; int min(int a, int b, int c){ |	template&amp;lt;typename T&amp;gt; &amp;gt;	T min(T a,T b,T c){ if(a&amp;gt;b)a=b; if(a&amp;gt;b)a=b; if(a&amp;gt;c)a=c; if(a&amp;gt;c)a=c; return a; return a; } } long long min(long long a,long long b, long long c){ &amp;lt; if(a&amp;gt;b)a=b; &amp;lt; if(a&amp;gt;c)a=c; &amp;lt; return a; &amp;lt; } &amp;lt; double min(double a, double b){ //�������������ϵĲ�����ֻ�� &amp;lt; if(a-b&amp;gt;(1e-5))a=b; &amp;lt; return a; &amp;lt; } &amp;lt; int main(){ int main(){ int a=1,b=2,c=3; |	int a=1,b=2,c=3; cout&amp;lt;&amp;lt;min(a,b,c)&amp;lt;&amp;lt;endl; |	cout&amp;lt;&amp;lt;min(a,b,c)&amp;lt;&amp;lt;endl; long long a1=100,b1=200,c1=300; |	long long a1=1000000000,b1=2000000000,c1=3000000000; cout&amp;lt;&amp;lt;min(a1,b1,c1)&amp;lt;&amp;lt;endl; |	cout&amp;lt;&amp;lt;min(a1,b1,c1)&amp;lt;&amp;lt;endl; double a2=1.</description>
    </item>
    
  </channel>
</rss>