<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Beaglebone on Dash</title>
    <link>http://purplepalmdash.github.io/categories/beaglebone/</link>
    <description>Recent content in Beaglebone on Dash</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Mar 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://purplepalmdash.github.io/categories/beaglebone/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Moving Weather App to BBB</title>
      <link>http://purplepalmdash.github.io/2014/03/18/moving-weather-app-to-bbb/</link>
      <pubDate>Tue, 18 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/03/18/moving-weather-app-to-bbb/</guid>
      <description>Following is the steps for moving the weather app to BBB(BeagleBone Black)
###Apache Configuration Create the site definition file under /etc/apache2/sites-available: 	$ cp default nanjing  Edit the nanjing file with the following content:
	$ cat nanjing &amp;lt;VirtualHost *:7778&amp;gt; ServerAdmin webmaster@localhost ServerName nanjing ServerAlias nanjing.weather DocumentRoot /srv/www1 &amp;lt;Directory /&amp;gt; Options FollowSymLinks AllowOverride None &amp;lt;/Directory&amp;gt; &amp;lt;Directory /srv/www1/&amp;gt; Options Indexes FollowSymLinks MultiViews AllowOverride None Order allow,deny Allow from all &amp;lt;/Directory&amp;gt; ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/ &amp;lt;Directory &amp;quot;/usr/lib/cgi-bin&amp;quot;&amp;gt; AllowOverride None Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch Order allow,deny Allow from all &amp;lt;/Directory&amp;gt; ErrorLog ${APACHE_LOG_DIR}/error.</description>
    </item>
    
    <item>
      <title>Setting Up Wordpress on BeagleBone Black</title>
      <link>http://purplepalmdash.github.io/2014/03/13/setting-up-wordpress-on-beaglebone-black/</link>
      <pubDate>Thu, 13 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/03/13/setting-up-wordpress-on-beaglebone-black/</guid>
      <description>Since BeagleBone Black&amp;rsquo;s hardware configuration is enough for running LAMP, I decide to run wordpress on it. ###Environment Hardware Configuration:
CPU: Generic AM33XX (Flattened Device Tree)
MEM: MemTotal: 507428 kB
Disk: 1.8&amp;rdquo; USB Disk, 30 GB
I also add 512MB swapfile for swapping partition. Software Configuration:
Kernel: Linux arm 3.8.13-bone30 #1 SMP Mon Nov 18 14:53:22 CST 2013 armv7l GNU/Linux
OS: Debian GNU/Linux 7 \n \l
###LAMP Configuration ####Install Apache</description>
    </item>
    
    <item>
      <title>Migrate BeagleBone Black</title>
      <link>http://purplepalmdash.github.io/2014/03/12/migrate-beaglebone-black/</link>
      <pubDate>Wed, 12 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/03/12/migrate-beaglebone-black/</guid>
      <description>Since I want to run wordpress at home, while my RaspberryPI got only 256M RAM, it will be hard to run such a heavy application, I use BeagleBone Black to run it, BeagleBone Black has 512M RAM, which will be enough for run wordpress and etc. ###Setting up NFS Server First I have to setup a nfs server in my LAN, I set it on my RaspberryPI, since I got only 1 USB hub which serves RaspberryPI, a 500GB harddisk has been attached to the USB hub, which is quite enough for serving nfs servers.</description>
    </item>
    
    <item>
      <title>Debian on NFS</title>
      <link>http://purplepalmdash.github.io/2013/12/11/debian-on-nfs/</link>
      <pubDate>Wed, 11 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2013/12/11/debian-on-nfs/</guid>
      <description>Install some packages:
	$ apt-get install usbutils alsa-base  Use lsusb to view the installed usb equipments:
	Bus 001 Device 006: ID 0e5c:6441 Bitland Information Technology Co., Ltd C-Media Sound Device  Install modules to the filesystem, since our newly-installed filesytem doesn&amp;rsquo;t contains the necessary modules:
	$ pwd /media/x/bbBlack/38/linux-dev/deploy  Copy the firmware tar package and modules tar package to the nfs root directory
	$ tar xzvf 3.</description>
    </item>
    
    <item>
      <title>BeagleBone boot from NFS</title>
      <link>http://purplepalmdash.github.io/2013/12/10/beaglebone-boot-from-nfs/</link>
      <pubDate>Tue, 10 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2013/12/10/beaglebone-boot-from-nfs/</guid>
      <description>###Building Preparation Create a new directory for stroing all of the items related to beaglebone.
	cd /media/nfs/ mkdir beaglebone cd beaglebone/  Download the cross-compiler from linaro toolchain binary website. And add it to the environment variables.
	wget -c https://launchpad.net/linaro-toolchain-binaries/trunk/2013.10/+download/gcc-linaro-arm-linux-gnueabihf-4.8-2013.10_linux.tar.xz tar xJf gcc-linaro-arm-linux-gnueabihf-4.8-2013.10_linux.tar.xz export CC=`pwd`/gcc-linaro-arm-linux-gnueabihf-4.8-2013.10_linux/bin/arm-linux-gnueabihf- # Test the cross-compiler ${CC}gcc --version  Checkout the U-boot:
	git clone git://git.denx.de/u-boot.git cd u-boot/ git checkout v2013.10 -b tmp  Patching U-boot:</description>
    </item>
    
    <item>
      <title>Building Poll circuit on EagleBone</title>
      <link>http://purplepalmdash.github.io/2013/11/15/building-poll-circuit-on-eaglebone/</link>
      <pubDate>Fri, 15 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2013/11/15/building-poll-circuit-on-eaglebone/</guid>
      <description>###Background Knowledge 三极管（NPN型）的用法很简单（半圆形平的一面朝自己，引脚朝下），左边接电源中间为触发极，右边输出，有点像开关，只要中间的脚有微弱电流触发，就如同开关被打开，电流就会从左边流向右边。</description>
    </item>
    
    <item>
      <title>Compile Linux kernel for Beaglebone</title>
      <link>http://purplepalmdash.github.io/2013/11/14/compile-linux-kernel-for-beaglebone/</link>
      <pubDate>Thu, 14 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2013/11/14/compile-linux-kernel-for-beaglebone/</guid>
      <description>###SourceCode Preparation 1. Get the latest code of beaglebone kernel:
	git clone git://github.com/RobertCNelson/linux-dev.git  2. Check for your cross-compiler:
	$ which arm-linux-gnueabi-gcc /media/y/embedded/gcc-linaro-arm-linux-gnueabi-2012.02-20120222_linux/bin/arm-linux-gnueabi-gcc  3. Start a new branch
	$ git checkout origin/am33x-v3.2 -b am33x-v3.2 Branch am33x-v3.2 set up to track remote branch am33x-v3.2 from origin. Switched to a new branch &#39;am33x-v3.2&#39;  Since the latest kernel has been moved 3.12, we have to checkout am33x-v3.12
	$ git checkout origin/am33x-v3.</description>
    </item>
    
    <item>
      <title>Use Eclipse and C/C&#43;&#43; to develop on Beaglebone</title>
      <link>http://purplepalmdash.github.io/2013/11/14/use-eclipse-and-c-slash-c-plus-plus-to-develop-on-beaglebone/</link>
      <pubDate>Thu, 14 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2013/11/14/use-eclipse-and-c-slash-c-plus-plus-to-develop-on-beaglebone/</guid>
      <description>###Local Development on Beaglebone board. On Beagle to verify local development:
	#include &amp;lt;iostream&amp;gt; using namespace std; int main() { cout&amp;lt;&amp;lt;&amp;quot;Hello Beagle World!&amp;quot;&amp;lt;&amp;lt;endl; return 0; }  Compile and run:
	$ g++ -o test test.cpp $ ./test Hello Beagle World!  ###Using Cross-compiler for developing applications for Beaglebone Launch eclipse, then install new software via help-&amp;gt; Install new software, make sure installed CDT. then we will install RSE.
	$ pwd /home/Trusty/.</description>
    </item>
    
  </channel>
</rss>