<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Network on Dash</title>
    <link>http://purplepalmdash.github.io/categories/network/</link>
    <description>Recent content in Network on Dash</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 12 Dec 2015 11:02:34 +0000</lastBuildDate>
    <atom:link href="http://purplepalmdash.github.io/categories/network/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>把玩TL-SG108E</title>
      <link>http://purplepalmdash.github.io/2015/12/12/ba-wan-tl-sg108e/</link>
      <pubDate>Sat, 12 Dec 2015 11:02:34 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2015/12/12/ba-wan-tl-sg108e/</guid>
      <description>

&lt;p&gt;前段时间黑色星期五在美国亚马逊败了个TP-LINK TL-SG108E, 直邮到手人民币200不到.
本意是拿来以后在家里跑虚拟机时,虚拟机可以在不同的VLAN里作用,譬如单独的存储/管
理网络等.&lt;/p&gt;

&lt;h3 id=&#34;配置&#34;&gt;配置&lt;/h3&gt;

&lt;p&gt;更改IP地址, 随意指定原有局域网内的某IP地址给交换机即可. 随后所有的节点均可添加
在交换机上.&lt;/p&gt;

&lt;h3 id=&#34;vlan&#34;&gt;VLAN&lt;/h3&gt;

&lt;p&gt;VLAN可以实现的功能, 位于不同交换机上的机器可以位于同一局域网内.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2015_12_12_14_25_15_724x626.jpg&#34; alt=&#34;/images/2015_12_12_14_25_15_724x626.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;默认在交换机上打开的VLAN是基于端口的VLAN(Port Based VLAN), 我们这里配置的是
802.1Q VLAN, 打开以后,基于端口的VLAN将自动被禁止.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2015_12_12_15_16_33_541x300.jpg&#34; alt=&#34;/images/2015_12_12_15_16_33_541x300.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;默认的配置页面如下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2015_12_12_15_17_52_927x570.jpg&#34; alt=&#34;/images/2015_12_12_15_17_52_927x570.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Tag 与 Untagged方式的差别:&lt;/p&gt;

&lt;p&gt;端口接收数据时：&lt;br /&gt;
  如果端口是tagged方式，当数据包本身不包含VLAN的话，输入的数据包就加上该缺省
vlan；如果数据包本身已经包含了VLAN，那么就不再添加。&lt;br /&gt;
  如果是untagged方式，输入的数据包全部都要加上该缺省vlan。不管输入的数据包是否
已经有VLAN标记。&lt;/p&gt;

&lt;p&gt;端口发送数据时：&lt;br /&gt;
  如果端口是tagged方式，如果端口缺省VLAN等于发送的数据包所含的VLAN，那么就会将
VLAN标记从发送的数据包中去掉；如果不相等，则数据包将带着VLAN发送出去，实现VLAN
的透传。&lt;br /&gt;
  如果是untagged方式，则不管端口缺省VLAN为多少，是否等于要输出的数据包的VLAN，
都会将VLAN ID从数据包中去掉。&lt;/p&gt;

&lt;p&gt;配置了vlan 22和33, 分别在7口和8口上.&lt;/p&gt;

&lt;h3 id=&#34;ovs-后的vlan-tag&#34;&gt;OVS 后的VLAN TAG&lt;/h3&gt;

&lt;p&gt;在7口上接入一台Ubuntu服务器,配置为open-vswitch桥接, 虚拟机通过以下配置, 制定
VLAN ID为22.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# virsh edit Gentoo
    &amp;lt;interface type=&#39;bridge&#39;&amp;gt;
      &amp;lt;mac address=&#39;52:54:00:fd:03:e9&#39;/&amp;gt;
      &amp;lt;source bridge=&#39;ovsbr0&#39;/&amp;gt;
      &amp;lt;vlan trunk=&#39;yes&#39;&amp;gt;
        &amp;lt;tag id=&#39;22&#39; nativeMode=&#39;untagged&#39;/&amp;gt;
      &amp;lt;/vlan&amp;gt;
      &amp;lt;virtualport type=&#39;openvswitch&#39;&amp;gt;
        &amp;lt;parameters interfaceid=&#39;fb3e7f34-6fcd-41dc-8fed-c3ffe0d54b18&#39;/&amp;gt;
      &amp;lt;/virtualport&amp;gt;
      &amp;lt;model type=&#39;virtio&#39;/&amp;gt;
      &amp;lt;address type=&#39;pci&#39; domain=&#39;0x0000&#39; bus=&#39;0x00&#39; slot=&#39;0x03&#39; function=&#39;0x0&#39;/&amp;gt;
    &amp;lt;/interface&amp;gt;
# virsh start Gentoo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样启动后的虚拟机&lt;code&gt;Gentoo&lt;/code&gt;就处于VLAN ID 22隔离的网络里. 手动配置其IP地址为
&lt;code&gt;10.48.58.2&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;物理机上的vlan&#34;&gt;物理机上的VLAN&lt;/h3&gt;

&lt;p&gt;这里附带了Ubuntu On Jogger的过程, Joggler XUbuntu下载地址在:&lt;br /&gt;
&lt;a href=&#34;http://jwills.co.uk/projects/joggler-xubuntu/download/&#34;&gt;http://jwills.co.uk/projects/joggler-xubuntu/download/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;操作指令在:&lt;br /&gt;
&lt;a href=&#34;http://jwills.co.uk/projects/joggler-xubuntu/instructions/&#34;&gt;http://jwills.co.uk/projects/joggler-xubuntu/instructions/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;默认用户名/密码都是joggler.&lt;/p&gt;

&lt;p&gt;我们需要在joggler上配置一个vlan, 和另一台机器上vlan后的虚拟机通信.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install -y vlan
$ sudo modprobe 8021q
$ sudo vconfig add eth0 22
$ sudo ifconfig eth0.22 10.47.58.3/24 up
$ sudo su -c &#39;echo &amp;quot;8021q&amp;quot;&amp;gt;&amp;gt;/etc/modules&#39;
$ cat /etc/module
8021q
$ sudo vim /etc/network/interface
....
auto eth0
iface eth0 inet dhcp

auto eth0.22
iface eth0.22 inet static
    address 10.47.58.3
    netmask 255.255.255.0
    vlan-raw-device eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样,重启以后, eth0.22会启动, 就可以通过VLAN 22 ping &lt;code&gt;10.47.58.2&lt;/code&gt;了.&lt;/p&gt;

&lt;h3 id=&#34;换口&#34;&gt;换口&lt;/h3&gt;

&lt;p&gt;把joggler从7口换到6口, 可以看到eth0还是可以通的,但是eth0.22则无法通信. 这是因
为我们只在7口和8口上添加了VLAN 22标记的缘故.换回7口,一切正常.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use Tunnel For Acrossing Something</title>
      <link>http://purplepalmdash.github.io/2014/05/08/use-tunnel-for-acrossing-something/</link>
      <pubDate>Thu, 08 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/05/08/use-tunnel-for-acrossing-something/</guid>
      <description>

&lt;h3 id=&#34;network-envorinment-introduction&#34;&gt;Network Envorinment Introduction&lt;/h3&gt;

&lt;p&gt;The network envoriment in daily working envoriment is very bad, thus I have to think for a solution, which could improve my network speed.&lt;br /&gt;
Following picture describes the network topology of the daily working.&lt;br /&gt;
&lt;img src=&#34;http://purplepalmdash.github.io/images/CompanyNetwork1.jpg&#34; alt=&#34;/images/CompanyNetwork1.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;From the picture we can see, several users shared a very narrow path, and this path have to go through chinese firewall, this firewall is ghastly, because it will filter some sensitive website which is not welcomed by CN gov.&lt;/p&gt;

&lt;h3 id=&#34;our-vpn-introduction&#34;&gt;Our VPN Introduction&lt;/h3&gt;

&lt;p&gt;There are very wide VPN(Virtual Private Network) between CN and US, the US networking don&amp;rsquo;t have to pass through the firewall.&lt;br /&gt;
Another big surprise is created by the time difference, when chinese are working, lots of american people are out of office.&lt;br /&gt;
&lt;img src=&#34;http://purplepalmdash.github.io/images/CompanyNetwork2.jpg&#34; alt=&#34;/images/CompanyNetwork2.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Surely we can make full use of our whole company&amp;rsquo;s network condition.&lt;/p&gt;

&lt;h3 id=&#34;solution-1-ssh-forwarding&#34;&gt;Solution 1: SSH Forwarding&lt;/h3&gt;

&lt;p&gt;First we will find a server which could forward ssh, just like in the picture.&lt;br /&gt;
&lt;img src=&#34;http://purplepalmdash.github.io/images/CompanyNetwork3.jpg&#34; alt=&#34;/images/CompanyNetwork3.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Then we can use following command for setup a ssh tunnel, which could forwarding our network flow to us proxy:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh -C  -L YourMachine:Port:USProxy:USProxy_Port YouAccount@ForwardingServer

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then in your browser or your application, use &lt;a href=&#34;http://YourMachine:Port&#34;&gt;http://YourMachine:Port&lt;/a&gt; as a proxy.&lt;/p&gt;

&lt;h3 id=&#34;solution-2-tcp-tunnel-forwarding&#34;&gt;Solution 2: TCP Tunnel Forwarding&lt;/h3&gt;

&lt;p&gt;Not every server can open ssh forwarding for you. For example, in following server, tcp forwarding is forbidden:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat /etc/ssh/sshd_config
# Port forwarding
AllowTcpForwarding no

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thus we have to setup our own tcp tunnel manually.&lt;/p&gt;

&lt;h4 id=&#34;netcat-way&#34;&gt;Netcat Way&lt;/h4&gt;

&lt;p&gt;Use following way you can use netcat for creating a very simple tunnel, which could forwarding all of your flow to US proxy, these operation have to be done on server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir /tmp/fifo
$ nc -lvvp -k 2323 0&amp;lt;/tmp/fifo | nc -k USproxy USProxy_Port 1&amp;gt;fifo

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then set the local proxy to &lt;a href=&#34;http://server_ip:2323&#34;&gt;http://server_ip:2323&lt;/a&gt;, then you can reached the proxy.&lt;/p&gt;

&lt;h4 id=&#34;tunnel-way&#34;&gt;Tunnel Way&lt;/h4&gt;

&lt;p&gt;Netcat way is OK, but the netcat version is very old on US Server, it can&amp;rsquo;t support &amp;lsquo;-k&amp;rsquo; option, for &amp;lsquo;-k&amp;rsquo; option is only supported by openbsd-netcat, and because the server is too old(It&amp;rsquo;s Sun OS 5.10, or solaris? ), so we have to find other ways.&lt;br /&gt;
Luckily I find a small tool, which could fit for our requirement.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wget http://www.cri.ensmp.fr/~coelho/tunnel.c
$ gcc -o tunnel tunnel.c -lsocket

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This compiling will complain &amp;lsquo;herror&amp;rsquo; is not supported, thus we have to comment them, or change them from &amp;lsquo;herror&amp;rsquo; to &amp;lsquo;printf&amp;rsquo;, anyway, the error happens seldomly.&lt;br /&gt;
Use following command for setting up a tunnel in server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./tunnel -Lr server_ip:1080 proxy:80

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then in your own PC, set proxy to &lt;a href=&#34;http://server_ip:1080&#34;&gt;http://server_ip:1080&lt;/a&gt;, you can reach the internet through your own tunnel, which will guide your traffic from VPN to US, then to Internet.&lt;/p&gt;

&lt;h3 id=&#34;make-tunnel-invisible&#34;&gt;Make Tunnel Invisible&lt;/h3&gt;

&lt;p&gt;Normally system administrator won&amp;rsquo;t like tunnel on server, maybe they will scan the server and find out the port occupation. So we have to do some modification to tunnel.c.&lt;br /&gt;
First, change the name of the executable file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mv tunnel.c autrace.c
$ gcc -o autrace autrace.c -lsocket

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So now, you can run your tunnel program via &amp;lsquo;./autrace -Lr localhost:1080 proxy:80&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;But this is not so safe, administrator will also find the port, then they will track this port, and find your tricks, so we have to hidden the port words.&lt;br /&gt;
In autrace.c, do following changes in corresponding lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//  Around line 128, change the ip/port into your own. 

/* default connexion. */
#define LHOST &amp;quot;138.138.138.138&amp;quot; /* this really means 127.0.0.1, thus no network! */
#define LPORT &amp;quot;4444&amp;quot;
/* DHOST: &amp;lt;same as chosen LHOST&amp;gt; */
//#define DPORT &amp;quot;23&amp;quot;        /* telnet port */
#define DHOST &amp;quot;139.139.139.139&amp;quot;
#define DPORT &amp;quot;8888&amp;quot;

// Around line 1023, this is actually a bug.  
 dhosts = getenv(&amp;quot;DHOST&amp;quot;); 1023

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you can run command like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./autracce -s

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;make-tunnel-only-serve-for-you&#34;&gt;Make Tunnel Only Serve for you&lt;/h3&gt;

&lt;p&gt;We have to forbidden other user use our tunnel, because &lt;a href=&#34;http://server_ip:port&#34;&gt;http://server_ip:port&lt;/a&gt; is open to all of the person in VPN.&lt;br /&gt;
We add following ACL rule in the autrace.c:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// in main(), around line 935
  /* Initialize the parameter for ACL(Access Control List) */
  struct sockaddr_in sa;
  inet_pton(AF_INET, &amp;quot;Your_IP_Address&amp;quot;, &amp;amp;(sa.sin_addr));
  allow_address = ntohl(sa.sin_addr.s_addr);

// in main(), around line 1187
      /* In here, we will do filter, filter specified ip address */
      /* Compare the allowed ip address with the incomming&#39;s ip address */
      if( allow_address != (ntohl(client_addr.sin_addr.s_addr)))
      {
        fprintf(stderr, &amp;quot;Sorry, you are not welcomed!\n&amp;quot;);
        /* No more receive/send any data */
        shutdown(client_socket, 2);
      }

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code will check the incoming client&amp;rsquo;s ip address, and comparing it to our pre-defined ip address(Your_IP_Address), if they are not equal, our server will directly close the socket, so the client will receive refuse information.&lt;/p&gt;

&lt;p&gt;Now you have a very safe and reliable path will will let you reach the internet via wide VPN and swift US network, enjoy it.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>