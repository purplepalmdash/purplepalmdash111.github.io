<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssh on Dash</title>
    <link>http://purplepalmdash.github.io/categories/ssh/</link>
    <description>Recent content in Ssh on Dash</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Mar 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://purplepalmdash.github.io/categories/ssh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Remote SSH and VNC Forwarding</title>
      <link>http://purplepalmdash.github.io/2014/03/30/remote-ssh-and-vnc-forwarding/</link>
      <pubDate>Sun, 30 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/03/30/remote-ssh-and-vnc-forwarding/</guid>
      <description>因为有中转服务器的存在，我们需要建立ssh端口转发，以便一步到位通过中转服务器登录到远程主机。
###ssh转发 建立ssh转发：
	ssh -L 2121:192.168.1xx.xxx.xxx 1xx.xxx.xxx.xxx -l Tomcat  建立以后则可以：
	ssh root@localhost -p 2121  Autossh without entering password:
	cat id_rsa.pub | ssh Tomcat@1xx.xxx.xx.xxx &#39;cat &amp;gt;&amp;gt;.ssh/authorized_keys&#39; # After login on to 170, run: chmod 600 ~/.ssh/authorized_keys  ###VNC设置 配置VNC自动启动:
	vim /etc/init.d/vncserver # 添加： VNCSERVERS=&amp;quot;1:rohc&amp;quot; VNCSERVERARGS[1]=&amp;quot;-geometry 1280x1024&amp;quot; $ chkconfig vncserver on  设置VNC转发：
	ssh -L 2333:192.168.1xx.xxx:5901 1xx.xxx.xxx.xxx -l Tomcat  之后就可以通过:
	vncviewer localhost:5901来访问VNC了。	 </description>
    </item>
    
    <item>
      <title>Using ssh socket proxy under windows</title>
      <link>http://purplepalmdash.github.io/2013/12/20/using-ssh-socket-proxy-under-windows/</link>
      <pubDate>Fri, 20 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2013/12/20/using-ssh-socket-proxy-under-windows/</guid>
      <description>1. Download Putty, it&amp;rsquo;s a green software, click it and then you got its configuration window.
2. Configure the ssh Tunnel via following
3. Disable the Command line interface.
4. Now using the configuration you can logon to remote server.
5. Now you can use socket proxy via &amp;ldquo;127.0.0.1&amp;rdquo;, port is 1395.</description>
    </item>
    
    <item>
      <title>Use Reverse SSH for Across Something(2)</title>
      <link>http://purplepalmdash.github.io/2013/11/19/use-reverse-ssh-for-across-something-2/</link>
      <pubDate>Tue, 19 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2013/11/19/use-reverse-ssh-for-across-something-2/</guid>
      <description>###ssh command Take following command for detailed example of using ssh:
	alias mydaili=&#39;ssh -qTfnN -D &#39; -q Quite Mode -T Disable pseudo-tty allocation -f background the ssh -n redirect the stdin from /dev/null -N Don&#39;t execute a remote command -D Bind address  ###Using rsh rsh could be used for executing the command remotely, thus in my family&amp;rsquo;s debian machine I could write following script:
	cat /bin/remoteON #!/bin/sh rsh -l root localhost -p 4381 ssh -qTfnN -L 1XX.</description>
    </item>
    
  </channel>
</rss>