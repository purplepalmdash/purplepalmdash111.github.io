<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wordpress on Dash</title>
    <link>http://purplepalmdash.github.io/categories/wordpress/</link>
    <description>Recent content in Wordpress on Dash</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Apr 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://purplepalmdash.github.io/categories/wordpress/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Customize First Page of Colorway Theme</title>
      <link>http://purplepalmdash.github.io/2014/04/15/customize-first-page-of-colorway-theme/</link>
      <pubDate>Tue, 15 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/04/15/customize-first-page-of-colorway-theme/</guid>
      <description>&lt;p&gt;View picture exiv2 info via exiv2 command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	exiv2 slide-img-1.jpg
	Image size      : 897 x 350

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So we must cut out a 897 x 350 picture for displaying as slide show.&lt;/p&gt;

&lt;p&gt;Now find out some pictures from internet, and download it to local.&lt;/p&gt;

&lt;p&gt;Use convert to fit the image?  No, it&amp;rsquo;s not exact, I use gimp&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Install Wordpress on ArchLinux</title>
      <link>http://purplepalmdash.github.io/2014/04/14/install-wordpress-on-archlinux/</link>
      <pubDate>Mon, 14 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/04/14/install-wordpress-on-archlinux/</guid>
      <description>&lt;p&gt;First install wordpress manually:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	cd /srv/http
	wget https://wordpress.org/latest.tar.gz
	tar xzvf latest.tar.gz
	chown -R http wordpress
	chgrp -R http wordpress

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now add a configuration file on wordpress:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	[Trusty@/etc/httpd/conf/extra]$ pwd 
	/etc/httpd/conf/extra
	[Trusty@/etc/httpd/conf/extra]$ cat httpd-wordpress.conf
	Alias / &amp;quot;/srv/http/wordpress/&amp;quot;
	&amp;lt;Directory &amp;quot;/srv/http/wordpress/&amp;quot;&amp;gt;
		AllowOverride All
		Options FollowSymlinks
		Order allow,deny
		Allow from all
		php_admin_value open_basedir &amp;quot;/srv/:/tmp/:/srv/http/wordpress/:/usr/share/webapps/:/etc/webapps:$&amp;quot;
	&amp;lt;/Directory&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In /etc/httpd/conf/httpd.conf file, add:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	# Include wordpress configuration
	Include conf/extra/httpd-wordpress.conf

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create the Wordpress Database and User&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	mysql -u root -p
	CREATE DATABASE wordpress;
	CREATE USER wordpressuser@localhost;
	SET PASSWORD FOR wordpressuser@localhost= PASSWORD(&amp;quot;password&amp;quot;);
	GRANT ALL PRIVILEGES ON wordpress.* TO wordpressuser@localhost IDENTIFIED BY &#39;password&#39;;
	FLUSH PRIVILEGES;
	exit

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Configure the configuration file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	cp ~/wordpress/wp-config-sample.php ~/wordpress/wp-config.php
	sudo nano ~/wordpress/wp-config.php
	// ** MySQL settings - You can get this info from your web host ** //
	/** The name of the database for WordPress */
	define(&#39;DB_NAME&#39;, &#39;wordpress&#39;);
	
	/** MySQL database username */
	define(&#39;DB_USER&#39;, &#39;wordpressuser&#39;);
	
	/** MySQL database password */
	define(&#39;DB_PASSWORD&#39;, &#39;password&#39;);	

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Configure the php.ini:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	sudo nano /etc/php/php.ini
	extension=mysql.so
	sudo systemctl restart httpd

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then visit the url of &lt;a href=&#34;http://localhost/&#34;&gt;http://localhost/&lt;/a&gt;, install the wordpress and begin to customize.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Miragating from ASP to Wordpress(2)</title>
      <link>http://purplepalmdash.github.io/2014/03/17/mirageting-from-asp-to-wordpress/</link>
      <pubDate>Mon, 17 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/03/17/mirageting-from-asp-to-wordpress/</guid>
      <description>&lt;p&gt;Recent days I am doing a data migration from asp website to WordPress, Following is how-to. &lt;br /&gt;
###Database
First we have to download the whole website content from the server, in my situation, the website contains a database called &amp;ldquo;xxxx.mdb&amp;rdquo;, I downloaded this database and renamed its name to &amp;ldquo;origin.mdb&amp;rdquo;&lt;br /&gt;
We can use Microsoft Access for opening this database file, and from the left side panel we can see all of the tables. &lt;br /&gt;
We know the about/news1/news2/news3/news4 table which contains the actual webpages content. &lt;br /&gt;
We can see the picture of news1 which displayed as following: &lt;br /&gt;
&lt;img src=&#34;http://purplepalmdash.github.io/images/tablesInAccess.jpg&#34; alt=&#34;/images/tablesInAccess.jpg&#34; /&gt;
###CSV Preparation
In a Ubuntu machine, we install mdbtools via following command:&lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	$ sudo apt-get install mdbtools

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Export the specified tables from the mdb file: &lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	$ mdb-export origin.mdb news &amp;gt; news.csv

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The CSV file is seperated via semicolon, just linke following:&lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	$ cat news.csv
	id,title,entitle,url,body,enbody,zz,hit,data,ssfl,img,ly,enly,color,encolor,tuijian,px_id,pass,kin
	58,&amp;quot;关于海外游学&amp;quot;,,,&amp;quot;&amp;lt;DIV&amp;gt;&amp;lt;B&amp;gt;&amp;lt;FONT size=2 face=Arial&amp;gt;关于游学&amp;lt;/FONT&amp;gt;&amp;lt;/B&amp;gt;&amp;lt;/DIV&amp;gt;
	&amp;lt;DIV&amp;gt;&amp;lt;FONT size=2&amp;gt;&amp;lt;FONT face=Arial&amp;gt;&amp;lt;STRONG&amp;gt;&amp;lt;/STRONG&amp;gt;&amp;lt;B&amp;gt;&amp;lt;/B&amp;gt;&amp;lt;/FONT&amp;gt;&amp;lt;/FONT&amp;gt;&amp;amp;n
	............

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now the news.csv contains all of the content which contains in the news table. &lt;br /&gt;
###WordPress Plugins Installation
Install the WP Ultimate CSV Importer for importing the csv into the WordPress:&lt;br /&gt;
This Plug-ins is fairly frendly, we simply upload the csv onto the plug-in, the plugin will analyse the csv&amp;rsquo;s content,and begin to mapping the database fields. &lt;br /&gt;
&lt;img src=&#34;http://purplepalmdash.github.io/images/csvimport.jpg&#34; alt=&#34;/images/csvimport.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Notice: You can import the csv into posts or pages, here I choose &amp;ldquo;Pages&amp;rdquo;, and it got the Parent Pages, so first you have to create the parent page, just as following:&lt;br /&gt;
&lt;img src=&#34;http://purplepalmdash.github.io/images/parentpage.jpg&#34; alt=&#34;/images/parentpage.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The content of parent page named &amp;ldquo;[child_pages]&amp;rdquo; is also another plug-in, this plug-in is called &amp;ldquo;Child Pages Shortcode&amp;rdquo;, after installed it, you can get the &amp;ldquo;screenshots&amp;rdquo; of the child pages.&lt;br /&gt;
The actual effects is listed as following picture: &lt;br /&gt;
&lt;img src=&#34;http://purplepalmdash.github.io/images/childpageshot.jpg&#34; alt=&#34;/images/childpageshot.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Another plug-in is called &amp;ldquo;Children Index Shortcode&amp;rdquo;. This plug-in will generate all of the child pages&amp;rsquo; hyper-links. You can call this plug-in via insert &amp;ldquo;children-index&amp;rdquo; into the content of the parent page. &lt;br /&gt;
###Change The Theme
You can easily install themes in wordpress, via Appearence-&amp;gt;Theme. &lt;br /&gt;
Currently I use &amp;ldquo;BlackBird Wordpress Theme&amp;rdquo;, the default suport of chinese is pretty good. &lt;br /&gt;
Things to be do:&lt;br /&gt;
1. Check all of the images. &lt;br /&gt;
2. Beautify the pages. &lt;br /&gt;
3. Customize the pages. &lt;br /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trouble-Shotting on Wordpress</title>
      <link>http://purplepalmdash.github.io/2014/03/14/trouble-shotting-on-wordpress/</link>
      <pubDate>Fri, 14 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/03/14/trouble-shotting-on-wordpress/</guid>
      <description>&lt;p&gt;Since the Wordpress is located at home, there are several problems for dealing with.&lt;br /&gt;
###Changeing Apache Listening Port
Nanjing Unicom has banned the port 80, thus I have to change the default listening port of apache from 80 to other ports. Following is How-To:&lt;br /&gt;
First import an variable in /etc/apache2/envvars:&lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	export VHOST_PORT_HTTP=7777

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then Change the /etc/apache2/ports.conf: &lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	# NameVirtualHost *:80
	# Listen 80
	NameVirtualHost *:${VHOST_PORT_HTTP}
	Listen ${VHOST_PORT_HTTP}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally change the site-enabled:&lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	root@arm:/etc/apache2# cat sites-enabled/000-default
	&amp;lt;VirtualHost *:${VHOST_PORT_HTTP}&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now restart the apache2 service, you should see the apache listens the 7777 port. &lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	/etc/init.d/apache2 restart

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;###Configurating the WordPress
Install this light-weight browser for changing configurations. &lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	pacman -S midori

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After remote login with &amp;ldquo;ssh -Y&amp;rdquo;, simply input: &lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	midori 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then you can get a local window. &lt;br /&gt;
But wait, midori relies on window, but we&amp;rsquo;d better do everything in command-line for savign the bandwidth, thus we install the elinks, and use it for configurating the wordpress.&lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	$ apt-get install elinks

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You have to change the configuration-&amp;gt;General, from &lt;a href=&#34;http://xxx.xxx.xxx.xxx&#34;&gt;http://xxx.xxx.xxx.xxx&lt;/a&gt; to &lt;a href=&#34;http://xxx.xxx.xxx.xxx:7777&#34;&gt;http://xxx.xxx.xxx.xxx:7777&lt;/a&gt;, then we can change the port and let it show in browser. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now you can access the wordpress in everywhere.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Customize Wordpress on BeagleBone Black</title>
      <link>http://purplepalmdash.github.io/2014/03/13/customize-wordpress-on-beaglebone-black/</link>
      <pubDate>Thu, 13 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2014/03/13/customize-wordpress-on-beaglebone-black/</guid>
      <description>&lt;p&gt;For Using proxy for Wordpress, we can directly edit the wp-config file:&lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	$ cat wp-config.php
	/** Set following for working behind the proxy **/
	//define(&#39;WP_PROXY_HOST&#39;, &#39;10.0.0.221&#39;);
	//define(&#39;WP_PROXY_PORT&#39;, &#39;9001&#39;);
	#define(&#39;WP_PROXY_BYPASS_HOSTS&#39;,&#39;*.local-intranet&#39;);
	##
	define(&#39;WP_EMMORY_LIMIT&#39;, &#39;64M&#39;);

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A trouble shooting, you have to edit the /etc/resolv.conf to change the default dns server, then your wordpress could reach the network and install new plugins or themes. &lt;br /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>