<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dash]]></title>
  <link href="http://purplepalmdash.github.io/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-10-14T07:18:10+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tips on Cloud-Init and CloudStack]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/13/tips-on-cloud-init-and-cloudstack/"/>
    <updated>2015-10-13T16:22:16+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/13/tips-on-cloud-init-and-cloudstack</id>
    <content type="html"><![CDATA[<h3>CloudStack VR VM</h3>

<p>For accessing the VR VM and view the user-data and meta-data, like following, on the
instance ssh, you could get the user-data and meta-data:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@testfuck ~]# curl http://10.1.1.1/latest/user-data
</span><span class='line'>[root@testfuck ~]# curl http://10.1.1.1/latest/meta-data
</span><span class='line'>service-offering
</span><span class='line'>availability-zone
</span><span class='line'>local-ipv4
</span><span class='line'>local-hostname
</span><span class='line'>public-ipv4
</span><span class='line'>public-hostname
</span><span class='line'>instance-id
</span><span class='line'>vm-id
</span><span class='line'>public-keys
</span><span class='line'>cloud-identifier
</span><span class='line'># curl http://10.1.1.1/latest/meta-data/vm-id
</span><span class='line'>c6e1165e-f19a-4c77-9d96-dfd48f8ce944</span></code></pre></td></tr></table></div></figure>


<p>user-data could not be fetched directly, you could only manage it via cloud-monkey when
deploying the VMs.</p>

<h3>user-data Simple Example</h3>

<p>Before user-data injected:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Login Using password:   
</span><span class='line'>
</span><span class='line'>root@r-9-VM:~# ssh root@10.1.1.162
</span><span class='line'>root@10.1.1.162's password: 
</span><span class='line'>
</span><span class='line'>[root@testfuck etc]# date +%Z
</span><span class='line'>BST
</span><span class='line'>[root@testfuck etc]# cat /etc/sysconfig/clock 
</span><span class='line'>ZONE="Europe/London"</span></code></pre></td></tr></table></div></figure>


<p>But We want to change! First let VR VM could directly login to the instance, second, we
change the timezone into Asia/Chongqing.</p>

<p>Generate the user-data:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat hello_world.sh
</span><span class='line'>#!/bin/bash
</span><span class='line'>echo "hello world!" &gt;&gt; /root/test
</span><span class='line'>$ cat my-user-data
</span><span class='line'>#cloud-config
</span><span class='line'>growpart:
</span><span class='line'>  mode: auto
</span><span class='line'>chpasswd: { expire: False }
</span><span class='line'>ssh_pwauth: True
</span><span class='line'>
</span><span class='line'>ssh_authorized_keys:
</span><span class='line'> - ssh-rsa xxxxxxxxxxxxxxxxxxxxxxxx
</span><span class='line'>
</span><span class='line'>timezone: Asia/Chongqing
</span><span class='line'>$ $ write-mime-multipart --output=combined-userdata.txt \ 
</span><span class='line'>hello_world.sh:text/x-shellscript my-user-data
</span><span class='line'>$ ls -l -h combined-userdata.txt 
</span><span class='line'>-rw-rw-r-- 1 dash dash 1.1K Oct 13 17:14 combined-userdata.txt
</span><span class='line'>$ cat combined-userdata.txt | base64</span></code></pre></td></tr></table></div></figure>


<p>Deploy via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cloudmonkey deploy virtualmachine
</span><span class='line'>serviceofferingid=683f31f8-a939-468e-b4de-4512a8ccff8e
</span><span class='line'>templateid=13fb2961-533e-4a7d-80f9-21d860269aad
</span><span class='line'>zoneid=78509dc3-c828-429c-8154-9fffbc09384c
</span><span class='line'>networkids=7c6e7e6b-6aa2-4f95-a835-8d18bf930061 name=testuserdata
</span><span class='line'>userdata='Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT0xOTk5MDU5OTcyMjA5ODg1MjY2PT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTE5OTkwNTk5NzIyMDk4ODUyNjY9PQpDb250ZW50LVR5cGU6IHRleHQveC1zaGVsbHNjcmlwdDsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKQ29udGVudC1EaXNwb3NpdGlvbjogYXR0YWNobWVudDsgZmlsZW5hbWU9ImhlbGxvX3dvcmxkLnNoIgoKIyEvYmluL2Jhc2gKZWNobyAiaGVsbG8gd29ybGQhIiA+PiAvcm9vdC90ZXN0CgotLT09PT09PT09PT09PT09PTE5OTkwNTk5NzIyMDk4ODUyNjY9PQpDb250ZW50LVR5cGU6IHRleHQvY2xvdWQtY29uZmlnOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdApDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRhY2htZW50OyBmaWxlbmFtZT0ibXktdXNlci1kYXRhIgoKI2Nsb3VkLWNvbmZpZwpncm93cGFydDoKICBtb2RlOiBhdXRvCmNocGFzc3dkOiB7IGV4cGlyZTogRmFsc2UgfQpzc2hfcHdhdXRoOiBUcnVlCgpzc2hfYXV0aG9yaXplZF9rZXlzOgogLSBzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJBUUNzMFA4aFNCM05qN2tmd2lRT01PQ0Z2RXVqd3JLZjVuUFdmdzdzbmplVzd3TnhCYi9pTHhqbGxIK0tJdjdpS0dRaGI5WGtpZ3dXelhjdktSRk9OQTF0UU5CUHBsUE9RQXhHYUpoYzcxYlhZTVRabWsxcmZ5L0U4bUZIQmJ3U0trdm04Z3oxaFVqQWFITHdiZ21iaUE3eUNDUkVXbVR1SWpudm1FZnJXYU92WERRZFFPb2RkSzFhZThKM3BnRUNtQ21mRldrQmR3Y1JaN05jTUxBSkVkYTNpYWtJbWdaR2NqTWNCc1hjUUNOcjN1RGlKbERvc1V6Mjg4L3grTnZteTlzcHZnc2x4RXVUV0VQWFRGY1l5eVBrUHdkTnlpQm5TaWFoZTExcUdUZkk0Z2IyWllEb3JDZU5Ca1QxdkVaY0psL1JqT3NKRUFXT04rbno3Nm16MmdhZCByb290QHItOS1WTSAKCnRpbWV6b25lOiBBc2lhL0Nob25ncWluZwoKLS09PT09PT09PT09PT09PT0xOTk5MDU5OTcyMjA5ODg1MjY2PT0tLQo='</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cloud-Init Grow Partition]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/13/cloud-init-grow-partition/"/>
    <updated>2015-10-13T14:37:57+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/13/cloud-init-grow-partition</id>
    <content type="html"><![CDATA[<h3>Resize QCOW2</h3>

<p>Resize qcow2 file via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ qemu-img info my_vm.img
</span><span class='line'>image: my_vm.img
</span><span class='line'>file format: qcow2
</span><span class='line'>virtual size: 2.2G (2361393152 bytes)
</span><span class='line'>disk size: 904M
</span><span class='line'>cluster_size: 65536
</span><span class='line'>Format specific information:
</span><span class='line'>    compat: 1.1
</span><span class='line'>    lazy refcounts: false
</span><span class='line'>$ qemu-img resize my_vm.img +100G
</span><span class='line'>Image resized.
</span><span class='line'>$ qemu-img info my_vm.img
</span><span class='line'>image: my_vm.img
</span><span class='line'>file format: qcow2
</span><span class='line'>virtual size: 102G (109735575552 bytes)
</span><span class='line'>disk size: 904M
</span><span class='line'>cluster_size: 65536
</span><span class='line'>Format specific information:
</span><span class='line'>    compat: 1.1
</span><span class='line'>    lazy refcounts: false</span></code></pre></td></tr></table></div></figure>


<h3>Enlarge Partition</h3>

<p>Modify the meta-data, and enable the partition grow options in user-data:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim my-user-data
</span><span class='line'>#cloud-config
</span><span class='line'>+ growpart:
</span><span class='line'>+   mode: auto
</span><span class='line'>password: xxxxxxxx
</span><span class='line'>chpasswd: { expire: False }
</span><span class='line'>ssh_pwauth: True
</span><span class='line'>
</span><span class='line'>ssh_authorized_keys:
</span><span class='line'> - ssh-rsa xxxxxxxxxxx
</span><span class='line'>timezone: Asia/Chongqing
</span><span class='line'>
</span><span class='line'>$ cat my-meta-data 
</span><span class='line'>instance-id: d59656d7-b365-4940-ae95-9168c32c68b7
</span><span class='line'>$ echo "instance-id: $(uuidgen || echo i-abcdefg)" &gt; my-meta-data
</span><span class='line'>$ cat my-meta-data 
</span><span class='line'>instance-id: 5cad0dc4-facb-4079-b045-fbbc05caaf4a</span></code></pre></td></tr></table></div></figure>


<p>Regenerate the image:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rm -f my-seed.img
</span><span class='line'>$ cloud-localds my-seed.img my-user-data my-meta-data</span></code></pre></td></tr></table></div></figure>


<p>Restart the vm then you could get the disk resized.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Tips 3]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/13/linux-tips-3/"/>
    <updated>2015-10-13T10:43:51+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/13/linux-tips-3</id>
    <content type="html"><![CDATA[<h3>1. Tips on Cloud-Init</h3>

<p><a href="http://www.cnblogs.com/smallcoderhujin/p/4238609.html">http://www.cnblogs.com/smallcoderhujin/p/4238609.html</a></p>

<h3>2. Access CloudStack VR</h3>

<p>Get the VR IP address from the CloudStack Web Interface:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_10_13_15_46_59_464x499.jpg" alt="/images/2015_10_13_15_46_59_464x499.jpg" /></p>

<p>Then get the ssh connection via(On Agent Node):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csmgmt ~]# ssh -i .ssh/id_rsa.cloud -p3922 169.254.1.177  
</span><span class='line'>Linux r-9-VM 3.2.0-4-amd64 #1 SMP Debian 3.2.65-1+deb7u2 x86_64
</span><span class='line'>.......
</span><span class='line'>root@r-9-VM:~#</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on OZ]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/12/tips-on-oz/"/>
    <updated>2015-10-12T12:27:04+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/12/tips-on-oz</id>
    <content type="html"><![CDATA[<h3>Reference</h3>

<p>The reference URL is located at: <br/>
<a href="http://www.chenshake.com/oz-making-centos-mirror/">http://www.chenshake.com/oz-making-centos-mirror/</a></p>

<h3>Installation</h3>

<p>On CentOS 7, install oz via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y oz
</span><span class='line'># rpm -qa | grep oz-
</span><span class='line'>oz-0.14.0-1.el7.noarch</span></code></pre></td></tr></table></div></figure>


<h3>Configuration</h3>

<p>The configuration file for oz should be configured as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/oz/oz.cfg 
</span><span class='line'>[paths]
</span><span class='line'>output_dir = /var/lib/libvirt/images
</span><span class='line'>data_dir = /var/lib/oz
</span><span class='line'>screenshot_dir = /var/lib/oz/screenshots
</span><span class='line'># sshprivkey = /etc/oz/id_rsa-icicle-gen
</span><span class='line'>
</span><span class='line'>[libvirt]
</span><span class='line'>uri = qemu:///system
</span><span class='line'>#image_type = raw
</span><span class='line'>image_type = qcow2
</span><span class='line'># type = kvm
</span><span class='line'>bridge_name = virbr0
</span><span class='line'>cpus = 1
</span><span class='line'>memory = 1024</span></code></pre></td></tr></table></div></figure>


<p>The configuration file for the oz should have one tdl file and one kickstart file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat centos66.tdl 
</span><span class='line'>&lt;template&gt;
</span><span class='line'>   &lt;name&gt;centos_66_x86_64&lt;/name&gt;
</span><span class='line'>   &lt;description&gt;CentOS 6.6 x86_64 template&lt;/description&gt;
</span><span class='line'>   &lt;os&gt;
</span><span class='line'>      &lt;name&gt;CentOS-6&lt;/name&gt;
</span><span class='line'>      &lt;version&gt;6&lt;/version&gt;
</span><span class='line'>      &lt;arch&gt;x86_64&lt;/arch&gt;
</span><span class='line'>      &lt;install type='url'&gt;
</span><span class='line'>         &lt;url&gt;http://192.168.0.79/ks_mirror/CentOS-6.6-x86_64&lt;/url&gt;
</span><span class='line'>      &lt;/install&gt;
</span><span class='line'>   &lt;/os&gt;
</span><span class='line'>&lt;/template&gt;</span></code></pre></td></tr></table></div></figure>


<p>Be sure the kickstart file should have the same url installtion location:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat centos6-oz.cfg 
</span><span class='line'>text
</span><span class='line'>skipx
</span><span class='line'>install
</span><span class='line'>url --url http://192.168.0.79/ks_mirror/CentOS-6.6-x86_64
</span><span class='line'>repo --name=updates --baseurl=http://192.168.0.79/ks_mirror/CentOS-6.6-x86_64
</span><span class='line'>lang en_US.UTF-8</span></code></pre></td></tr></table></div></figure>


<h3>Build Image</h3>

<p>Build your own images via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># oz-install -p -u -d1 -a centos6-oz.cfg centos66.tdl</span></code></pre></td></tr></table></div></figure>


<p>Get the images via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@pc134 images]# pwd
</span><span class='line'>/var/lib/libvirt/images
</span><span class='line'>[root@pc134 images]# ls -l -h centos_66_x86_64.qcow2
</span><span class='line'>-rw-rw-rw- 1 root root 1015M Oct 12 14:48 centos_66_x86_64.qcow2</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on Cloud-Init]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/12/tips-on-cloud-init/"/>
    <updated>2015-10-12T10:50:53+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/12/tips-on-cloud-init</id>
    <content type="html"><![CDATA[<h3>参考</h3>

<p>主要参考了  <br/>
<a href="http://huang-wei.github.io/programming/2013/12/23/run-cloud-init-in-local-kvm.html">http://huang-wei.github.io/programming/2013/12/23/run-cloud-init-in-local-kvm.html</a></p>

<p>这里主要记录的是操作步骤。</p>

<h3>介绍</h3>

<p>红帽介绍:   <br/>
 Cloud-Init 是一个用来自动配置虚拟机的初始设置（如主机名，网卡和密钥）的工具。它可以在
使用模板部署虚拟机时使用，从而达到避免网络冲突的目的。   <br/>
在使用这个工具前，cloud-init 软件包必须在虚拟机上被安装。安装后，Cloud-Init 服务会在系
统启动时搜索如何配置系统的信息。您可以使用只运行一次窗口来提供只需要配置一次的设置信息
；或在 新建虚拟机、编辑虚拟机和编辑模板窗口中输入虚拟机每次启动都需要的配置信息。</p>

<h3>cloud-init安装</h3>

<p>Ubuntu 14.04上可以通过以下命令来安装cloud-init:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ apt-cache search cloud-utils
</span><span class='line'>cloud-utils - metapackage for installation of upstream cloud-utils source
</span><span class='line'>$ sudo apt-get install cloud-utils</span></code></pre></td></tr></table></div></figure>


<h3>镜像准备</h3>

<p>在<a href="http://cloud-images.ubuntu.com/releases/">http://cloud-images.ubuntu.com/releases/</a>
可以找到Ubuntu制作的ubuntu cloud image, image分版本, 这里使用14.04的image。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget http://cloud-images.ubuntu.com/releases/14.04.3/
</span><span class='line'>release-20151008/ubuntu-14.04-server-cloudimg-amd64-disk1.img</span></code></pre></td></tr></table></div></figure>


<p>取回来后的镜像可以直接使用，但解压开后读取速度会更快:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ qemu-img convert -O qcow2 ubuntu-14.04-server-cloudimg-amd64-disk1.img my_vm.img</span></code></pre></td></tr></table></div></figure>


<p>对比两个镜像大小可以看到:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ qemu-img info ubuntu-14.04-server-cloudimg-amd64-disk1.img 
</span><span class='line'>image: ubuntu-14.04-server-cloudimg-amd64-disk1.img
</span><span class='line'>file format: qcow2
</span><span class='line'>virtual size: 2.2G (2361393152 bytes)
</span><span class='line'>disk size: 246M
</span><span class='line'>cluster_size: 65536
</span><span class='line'>Format specific information:
</span><span class='line'>    compat: 0.10
</span><span class='line'>$ qemu-img info my_vm.img 
</span><span class='line'>image: my_vm.img
</span><span class='line'>file format: qcow2
</span><span class='line'>virtual size: 2.2G (2361393152 bytes)
</span><span class='line'>disk size: 903M
</span><span class='line'>cluster_size: 65536
</span><span class='line'>Format specific information:
</span><span class='line'>    compat: 1.1
</span><span class='line'>    lazy refcounts: false</span></code></pre></td></tr></table></div></figure>


<h3>配置脚本内容</h3>

<p>my-user-data内容:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat my-user-data
</span><span class='line'>#cloud-config
</span><span class='line'>password: xxxxxx
</span><span class='line'>chpasswd: { expire: False }
</span><span class='line'>ssh_pwauth: True
</span><span class='line'>
</span><span class='line'>ssh_authorized_keys:
</span><span class='line'> - ssh-rsa xxxxxx
</span><span class='line'>
</span><span class='line'>timezone: Asia/Chongqing</span></code></pre></td></tr></table></div></figure>


<p>通过my-user-data生成img文件:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cloud-localds my-seed.img my-user-data</span></code></pre></td></tr></table></div></figure>


<p>由之前的my_vm.img和my-seed.img文件启动虚拟机:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ qemu-system-x86_64 -net nic -net user,hostfwd=tcp::2222-:22 -hda my_vm.img -hdb my-seed.img -m 512</span></code></pre></td></tr></table></div></figure>


<p>通过qemu的窗口或者ssh登录系统: <code>ssh -p 2222 ubuntu@localhost</code>.</p>

<h3>引入meta-data</h3>

<p>meta-data的内容与虚拟机的实例相关，只用来做初始化，虚拟机实例运行完一次以后就不需要修改
。但如果要引入更新，则重建一下instance-id即可。</p>

<p>更新my-meta-data文件内容:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ echo "instance-id: $(uuidgen || echo i-abcdefg)" &gt; my-meta-data</span></code></pre></td></tr></table></div></figure>


<p>由my-meta-data和my-user-data生成my-seed.img文件:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cloud-localds my-seed.img my-user-data my-meta-data</span></code></pre></td></tr></table></div></figure>


<p>启动虚拟机:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ qemu-system-x86_64 -net nic -net user,hostfwd=tcp::2222-:22 -hda my_vm.img -hdb my-seed.img -m 512
</span><span class='line'>$ kvm -net nic -net user,hostfwd=tcp::2222-:22 -hda my_vm.img -hdb my-seed.img -m 512</span></code></pre></td></tr></table></div></figure>


<h3>其他初始化行为</h3>

<p>需要初始化的脚本:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat hello_world.sh 
</span><span class='line'>#!/bin/bash
</span><span class='line'>echo "hello world!" &gt;&gt; /home/ubuntu/test</span></code></pre></td></tr></table></div></figure>


<p>将初始化脚本和cloud config data合并:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ write-mime-multipart
</span><span class='line'>--output=combined-userdata.txt hello_world.sh:text/x-shellscript my-user-data</span></code></pre></td></tr></table></div></figure>


<p>由生成的combined-userdata.txt生成my-seed.img:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ echo "instance-id: $(uuidgen || echo i-abcdefg)" &gt; my-meta-data
</span><span class='line'>$ cloud-localds my-seed.img combined-userdata.txt my-meta-data</span></code></pre></td></tr></table></div></figure>


<p>重启后即可得到更新后的系统镜像.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[20151009备注]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/09/20151009bei-zhu/"/>
    <updated>2015-10-09T22:21:11+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/09/20151009bei-zhu</id>
    <content type="html"><![CDATA[<h3>Mirantis</h3>

<p>定时任务，更新Mirantis镜像</p>

<h3>Autossh Issue</h3>

<p>取远端服务器上的某个值，若该值为真，则临时建立反向链接。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[20151008备注]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/08/20151008bei-zhu/"/>
    <updated>2015-10-08T18:42:34+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/08/20151008bei-zhu</id>
    <content type="html"><![CDATA[<h3>Docker</h3>

<p>markdowncv容器启动以后，用python执行一个简单的http server，这时候需要更改其默
认主页，并且做端口映射到主机。</p>

<h3>墙外楼推送</h3>

<p>用Python的Beautiful Soup或其他的模块，抠到墙外楼上每天更新的文章，同步到某个信
箱，或者直接推送到NOOK?</p>

<h3>Cloud-Init</h3>

<p>这个东西可以用来管理用户名和密码的更新，从而需要引入新的数据库管理机制之类，可
以在这个星期做一下研究。</p>

<h3>Auto-Run Task</h3>

<p>启动时，自动同步几个仓库的情况，需要用expect来做，并且添加到awesome启动中。</p>

<h3>Synergy Integration</h3>

<p>How to move the mouse from the 1.4&rsquo;s Synergy Server to 1.3&rsquo;s Synergy Client?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dockerize Markdown Written CV]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/08/dockerize-markdown-written-cv/"/>
    <updated>2015-10-08T10:08:02+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/08/dockerize-markdown-written-cv</id>
    <content type="html"><![CDATA[<h3>Tips</h3>

<p>Manually run the commands for generating the CVs.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install -y build-essential
</span><span class='line'>$ sudo apt-get install -y pandoc
</span><span class='line'>$ sudo apt-get install -y wkhtmltopdf 
</span><span class='line'>$ sudo apt-get install xvfb
</span><span class='line'>$  echo 'xvfb-run --server-args="-screen 0, 1024x768x24" /usr/bin/wkhtmltopdf $*' &gt; \
</span><span class='line'>/usr/bin/wkhtmltopdf.sh
</span><span class='line'>$ chmod a+x /usr/bin/wkhtmltopdf
</span><span class='line'>$ chmod a+x /usr/bin/wkhtmltopdf.sh 
</span><span class='line'>$ ln -s /usr/bin/wkhtmltopdf.sh /usr/local/bin/wkhtmltopdf
</span><span class='line'>$ apt-get install -y ttf-wqy-zenhei
</span><span class='line'>$ apt-get install -y git
</span><span class='line'>$ apt-get install -y rubygems-integration ruby-dev
</span><span class='line'>$ apt-get install -y libimage-exiftool-perl
</span><span class='line'>$ gem install compass
</span><span class='line'>$ gem install susy
</span><span class='line'>$ git clone https://github.com/barraq/pandoc-moderncv.git
</span><span class='line'>$ cd pandoc-moderncv/
</span><span class='line'>$ mkdir -p cv/images/
</span><span class='line'>$ vim cv/cv.md
</span><span class='line'>$ gem install gempass
</span><span class='line'>$ gem install 
</span><span class='line'>$ make
</span><span class='line'>#####$ apt-get install python-software-properties
</span><span class='line'>#####$ apt-get install software-properties-common
</span><span class='line'>$ vim Makefile 
</span><span class='line'>   -&gt; Change the wkpdf to wkhtmltopdf
</span><span class='line'>$ make pdf</span></code></pre></td></tr></table></div></figure>


<h3>Dockerfile</h3>

<p>Write the Dockerfile like following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Based on Ubuntu 14.04
</span><span class='line'>FROM ubuntu:trusty
</span><span class='line'>
</span><span class='line'># Install Packages, via apt-get. 
</span><span class='line'>RUN apt-get update && apt-get install -y \
</span><span class='line'>  build-essential \
</span><span class='line'>  pandoc \
</span><span class='line'>  wkhtmltopdf \
</span><span class='line'>  xvfb \
</span><span class='line'>  ttf-wqy-zenhei \
</span><span class='line'>  git \
</span><span class='line'>  rubygems-integration \
</span><span class='line'>  ruby-dev \
</span><span class='line'>  libimage-exiftool-perl \
</span><span class='line'>  python-twisted
</span><span class='line'>
</span><span class='line'># Now Change wkhtmltopdf
</span><span class='line'>RUN echo 'xvfb-run --server-args="-screen 0, 1024x768x24" /usr/bin/wkhtmltopdf $*' &gt; /usr/bin/wkhtmltopdf.sh
</span><span class='line'>RUN chmod a+x /usr/bin/wkhtmltopdf
</span><span class='line'>RUN chmod a+x /usr/bin/wkhtmltopdf.sh 
</span><span class='line'>RUN ln -s /usr/bin/wkhtmltopdf.sh /usr/local/bin/wkhtmltopdf
</span><span class='line'>
</span><span class='line'># Now Run gems 
</span><span class='line'>RUN gem install compass
</span><span class='line'>RUN gem install susy
</span><span class='line'>
</span><span class='line'># Git Clone the CV FrameWork from github.
</span><span class='line'>RUN mkdir -p /opt/Code/
</span><span class='line'>RUN git clone https://github.com/barraq/pandoc-moderncv.git  /opt/Code/pandoc-moderncv
</span><span class='line'>
</span><span class='line'># Now begin to build the cv, using the demo 'scaffold'
</span><span class='line'>RUN cd /opt/Code/pandoc-moderncv/ && make scaffold && make pdf HTMLTOPDF=wkhtmltopdf
</span><span class='line'>
</span><span class='line'># Run http server on server 5177, since in dist/ folder we will have the html and pdf
</span><span class='line'>EXPOSE 5177
</span><span class='line'>CMD ["twistd", "-n", "web", "-p", "5177", "--path", "/opt/Code/pandoc-moderncv/dist/"]
</span></code></pre></td></tr></table></div></figure>


<p>Put it on github, and trigger an auto-build on dockerhub, pulling it and you could get
the well built docker image.</p>

<h3>Use this Container</h3>

<p>Use it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo docker build -t mycv/mycvapp /home/dash/Code/DockerBuild
</span><span class='line'>$ sudo docker run -d -p 5000:5177 mycv/mycvapp</span></code></pre></td></tr></table></div></figure>


<p>Since our Docker Container listens 5177 port, we use <code>-p</code> for mapping local machine&rsquo;s
5000 port to 5177, visit localmachine:5000 then you could found the CV based directory.</p>

<h3>Change to Debian Based</h3>

<p>Maybe Debian based will be much more slim? But this involves the pandoc issue.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Based on Debian Wheezy
</span><span class='line'>FROM debian:wheezy
</span><span class='line'>
</span><span class='line'># Install Packages, via apt-get. 
</span><span class='line'>RUN apt-get update && apt-get install -y \
</span><span class='line'>        build-essential \
</span><span class='line'>        cabal-install \
</span><span class='line'>        wkhtmltopdf \
</span><span class='line'>        xvfb \
</span><span class='line'>        ttf-wqy-zenhei \
</span><span class='line'>        git \
</span><span class='line'>        rubygems-integration \
</span><span class='line'>        ruby-dev \
</span><span class='line'>        libimage-exiftool-perl \
</span><span class='line'>  zlib1g-dev \
</span><span class='line'>  libdigest-perl \
</span><span class='line'>        python-twisted && rm -rf /var/lib/apt/lists/*
</span><span class='line'>
</span><span class='line'># Via cabal for installing pandoc, latest one will have the markdown plugins
</span><span class='line'>RUN cabal update && cabal install pandoc
</span><span class='line'>
</span><span class='line'># After install pandoc via cabal, update the $PATH
</span><span class='line'>ENV PATH /root/.cabal/bin:$PATH
</span><span class='line'>
</span><span class='line'># Now Change wkhtmltopdf
</span><span class='line'>RUN echo 'xvfb-run --server-args="-screen 0, 1024x768x24" /usr/bin/wkhtmltopdf $*' &gt;
</span><span class='line'>/usr/bin/wkhtmltopdf.sh
</span><span class='line'>RUN chmod a+x /usr/bin/wkhtmltopdf
</span><span class='line'>RUN chmod a+x /usr/bin/wkhtmltopdf.sh 
</span><span class='line'>RUN ln -s /usr/bin/wkhtmltopdf.sh /usr/local/bin/wkhtmltopdf
</span><span class='line'>
</span><span class='line'># Now Run gems 
</span><span class='line'>RUN gem install compass
</span><span class='line'>RUN gem install susy
</span><span class='line'>
</span><span class='line'># Git Clone the CV FrameWork from github.
</span><span class='line'>RUN mkdir -p /opt/Code/
</span><span class='line'>RUN git clone https://github.com/barraq/pandoc-moderncv.git  /opt/Code/pandoc-moderncv
</span><span class='line'>
</span><span class='line'># Now begin to build the cv, using the demo 'scaffold'
</span><span class='line'>RUN cd /opt/Code/pandoc-moderncv/ && make scaffold && make pdf HTMLTOPDF=wkhtmltopdf
</span><span class='line'>
</span><span class='line'># Run http server on server 5177, since in dist/ folder we will have the html and pdf
</span><span class='line'>EXPOSE 5177
</span><span class='line'>CMD ["twistd", "-n", "web", "-p", "5177", "--path", "/opt/Code/pandoc-moderncv/dist/"]
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sharing Mouse/Keyboard Among 3 Nodes]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/09/22/sharing-mouse-slash-keyboard-among-3-nodes/"/>
    <updated>2015-09-22T20:42:04+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/09/22/sharing-mouse-slash-keyboard-among-3-nodes</id>
    <content type="html"><![CDATA[<p>I have 3 computers which runs ArchLinux/Ubuntu15.04 Mate, they both connected
to the same ethernet, I&rsquo;d like to use only one mouse/keyboard for controlling
them, following are the steps for how-to.</p>

<h3>Network Configuration</h3>

<p>The 3 computer are listed as following:  <br/>
* 192.168.1.11/dashArch/ArchLinux
* 192.168.1.13/dash32G/Ubuntu15.04
* 192.168.1.10/dashMate/Ubuntu15.04</p>

<p>Edit the <code>/etc/hosts</code> in 192.168.1.11:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/hosts
</span><span class='line'>192.168.1.13    dash32G
</span><span class='line'>192.168.1.14    dashMate</span></code></pre></td></tr></table></div></figure>


<p>In 192.168.1.13, Edit <code>/etc/hosts</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/hosts
</span><span class='line'>192.168.1.11    dashArch</span></code></pre></td></tr></table></div></figure>


<h3>Synergy Server</h3>

<p>I use ArchLinux for Synergy Server, install it simply via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo pacman -S synergy</span></code></pre></td></tr></table></div></figure>


<p>Run synergy via <code>synergy</code>, now configure it:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_09_22_20_47_11_692x530.jpg" alt="/images/2015_09_22_20_47_11_692x530.jpg" /></p>

<p>By drag a new machine in the configuration window, named dash32G:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_09_22_21_00_13_732x508.jpg" alt="/images/2015_09_22_21_00_13_732x508.jpg" /></p>

<p>Also drag a new machine in the configuraitn window, named dashMate:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_09_22_22_35_02_607x363.jpg" alt="/images/2015_09_22_22_35_02_607x363.jpg" /></p>

<p>Save the conf file as <code>~/SynergyArch.conf</code>, then configure the systemctl.</p>

<p>Start the Synergy Server at the startup:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat /usr/lib/systemd/synergys@.service 
</span><span class='line'>[Unit]
</span><span class='line'>Description=Synergy Server Daemon
</span><span class='line'>After=network.target
</span><span class='line'>
</span><span class='line'>[Service]
</span><span class='line'>User=%i
</span><span class='line'>ExecStart=/usr/bin/synergys --no-daemon --config /home/dash/SynergyArch.conf --enable-crypto
</span><span class='line'>Restart=on-failure
</span><span class='line'>
</span><span class='line'>[Install]
</span><span class='line'>WantedBy=multi-user.target
</span><span class='line'>$ sudo systemctl start synergys@dash
</span><span class='line'>$ sudo systemctl enable synergys@dash
</span><span class='line'>Created symlink from
</span><span class='line'>/etc/systemd/system/multi-user.target.wants/synergys@dash.service to
</span><span class='line'>/usr/lib/systemd/system/synergys@.service.</span></code></pre></td></tr></table></div></figure>


<h3>Synergy Client</h3>

<p>Install synergy client on Ubuntu via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install -y synergy</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Configure the synergy as the client mode, like following:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_09_22_21_18_42_697x546.jpg" alt="/images/2015_09_22_21_18_42_697x546.jpg" /></p>

<p>Save the configuration file under your home directory, named it as
<code>synergyconfig.conf</code>.</p>

<p>Since the Ubuntu15.04 Mate use lightdm for login, we add following line into
lightdm&rsquo;s configuration file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /usr/share/lightdm/lightdm.conf.d/50-ubuntu-mate.conf
</span><span class='line'>+ greeter-setup-script=/usr/bin/synergyc 192.168.1.11</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>The same configuration should be applied to dashMate.</p>

<h3>Auto-login Synergyc Configuration</h3>

<p>Start synergy after login:</p>

<p>To start Synergy once you have logged into your X-session.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Main Menu - System - Preferences - Startup Applications   
</span><span class='line'>[ Add ]  
</span><span class='line'>  Name:     synergys
</span><span class='line'>  Command:  synergys --config ~/.synergy.conf
</span><span class='line'>  Comment:  synergys  </span></code></pre></td></tr></table></div></figure>


<p>Also you should configure the mate configuration file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat /usr/share/lightdm/lightdm.conf.d/50-ubuntu-mate.conf
</span><span class='line'>[SeatDefaults]
</span><span class='line'>user-session=mate
</span><span class='line'>greeter-setup-script=/usr/bin/synergyc 192.168.1.11
</span><span class='line'>autologin-user=xxxxxx</span></code></pre></td></tr></table></div></figure>


<p>Now you will have the synergy runs after you login to the mate desktop.</p>

<h3>Conclusion</h3>

<p>Now restart the computer, and everytime you could switch from different
machines.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trouble-Shooting on ChromeOS's Crouton Updating]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/09/10/trouble-shooting-on-chromeoss-crouton-updating/"/>
    <updated>2015-09-10T10:17:17+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/09/10/trouble-shooting-on-chromeoss-crouton-updating</id>
    <content type="html"><![CDATA[<h3>Problem</h3>

<p>After updating of ChromeOS itself, the crouton failed to start with following message:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Entering /mnt/stateful_partition/crouton/chroots/xxxxxx...
</span><span class='line'>
</span><span class='line'>ERROR: ld.so: object '/usr/local/lib/croutonfreon.so' from LD_PRELOAD cannot be
</span><span class='line'>preloaded (cannot open shared object file): ignored.
</span><span class='line'>_XSERVTransmkdir: Owner of /tmp/.X11-unix should be set to root</span></code></pre></td></tr></table></div></figure>


<h3>Solution</h3>

<p>First setup the proxy for acrossing the Fucking Great Fire Wall.</p>

<p>In another PC which have the socket proxy, install privoxy:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install -y privoxy</span></code></pre></td></tr></table></div></figure>


<p>Oh sorry I have to delete the whole chroot environment, delete it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo delete-chroot trusty</span></code></pre></td></tr></table></div></figure>


<p>This time try kali, list all of the available rleases via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sh ~/Downloads/crouton -r list</span></code></pre></td></tr></table></div></figure>


<p>Install it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo sh -e ~/Downloads/crouton -r kali -t x11</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on Remove Maas-dhcp]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/31/tips-on-remove-maas-dhcp/"/>
    <updated>2015-08-31T12:07:37+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/31/tips-on-remove-maas-dhcp</id>
    <content type="html"><![CDATA[<h3>Solution</h3>

<p>Previous I always encounter problems in removing maas-dhcp, so I checked some materials
show the result is because I disabled apparmor, the solution is:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim /etc/default/grub
</span><span class='line'>GRUB_CMDLINE_LINUX_DEFAULT="security=selinux selinux=1  apparmor=1 security=apparmor"</span></code></pre></td></tr></table></div></figure>


<p>Add apparmor related, and reboot the computer.  <br/>
Now you could remove the maas-dhcp and install new softwares.</p>

<h3>TIPS</h3>

<h4>apparmor status</h4>

<p>View apparmor status:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apparmor_status</span></code></pre></td></tr></table></div></figure>


<h4>Track Reason</h4>

<p>Via restart you could know the exact reason:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo /etc/init.d/apparmor restart
</span><span class='line'>* Reloading AppArmor profiles * AppArmor not available as kernel LSM.
</span><span class='line'>[fail]</span></code></pre></td></tr></table></div></figure>


<p>The reason is because the LSM is not avaiable, by editing the grub configuration you
could enable apparmor again.</p>

<h3>Disable checking in deb</h3>

<p>Hold the package, then you could continue with installing other packages.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sudo apt-mark hold &lt;package&gt;
</span><span class='line'>OR
</span><span class='line'># echo &lt;package&gt; hold | sudo dpkg --set-selections</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips for SSD Installation]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/30/tips-for-ssd-installation/"/>
    <updated>2015-08-30T14:45:24+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/30/tips-for-ssd-installation</id>
    <content type="html"><![CDATA[<p>Refers to:  <br/>
<a href="https://wiki.archlinux.org/index.php/Beginners'_guide_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29">https://wiki.archlinux.org/index.php/Beginners'<em>guide</em>%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29</a></p>

<h3>Partition</h3>

<p>Check if you are in efi mode:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># efivar -l</span></code></pre></td></tr></table></div></figure>


<p>Then format your disk using parted:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># parted /dev/sda
</span><span class='line'>(parted) mkpart ESP fat32 1M 513M
</span><span class='line'>(parted) set 1 boot on
</span><span class='line'>(parted) mkpart primary ext4 513M 100%</span></code></pre></td></tr></table></div></figure>


<p>Check if your partition is aligned:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># blockdev --getalignoff /dev/sda
</span><span class='line'>0</span></code></pre></td></tr></table></div></figure>


<p>I have 2 disks, one for ssd, the other for hdd, so I want to share the swap partition,
and locate the /var directory in the hdd, modify it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkfs.ext4 /dev/sda2
</span><span class='line'># mkfs.vfat -F32 /dev/sda1
</span><span class='line'># mount /dev/sda2 /mnt
</span><span class='line'># mkdir -p /mnt/boot
</span><span class='line'># mount /dev/sda1 /mnt/boot
</span><span class='line'># swapon /dev/sdb1
</span><span class='line'># mkdir /media/
</span><span class='line'># mount /dev/sdb2 /media
</span><span class='line'># mkdir /media/var_for_sda
</span><span class='line'># ln -s /media/var_for_sda /mnt/var</span></code></pre></td></tr></table></div></figure>


<p>Now you could do pacstrap.</p>

<h3>Installation</h3>

<p>Installation are the same as the guildeline show,</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># pacman -S dosfstools efibootmgr
</span><span class='line'># bootctl --path=/boot install
</span><span class='line'># vim /boot/loader/entries/arch.conf
</span><span class='line'>title          Arch Linux
</span><span class='line'>linux          /vmlinuz-linux
</span><span class='line'>initrd         /initramfs-linux.img
</span><span class='line'>options        root=/dev/sda2 rw
</span><span class='line'># vim /boot//loader/loader.conf
</span><span class='line'>#timeout 3
</span><span class='line'>default arch
</span><span class='line'>timeout 5</span></code></pre></td></tr></table></div></figure>


<p>For wireless connection:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># pacman -S iw wpa_supplicant
</span><span class='line'># pacman -S dialog</span></code></pre></td></tr></table></div></figure>


<p>Modification of the /etc/fstab:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># /dev/sda2
</span><span class='line'>UUID=xxxxxxxxxxxxxxxxxxxxxxxx       /               ext4 default,rw,data=ordered,noatime,discard 0 1
</span><span class='line'>
</span><span class='line'># /dev/sda1
</span><span class='line'>UUID=xxxxxxxxxxxxxxxxx          /boot           vfat rw,noatime,discard,fmask=0022,dmask=0022,codepage=437,iocharset=iso8859-1,shortname=mixed,errors=remount-ro  0 2
</span><span class='line'>
</span><span class='line'># /dev/sdb1
</span><span class='line'>UUID=xxxxxxxxxxxxxxxxxxx       none            swap defaults        0 0
</span><span class='line'>
</span><span class='line'># /dev/sdb2
</span><span class='line'>UUID=xxxxxxxxxxxxxxxxxxx       /media          ext4    rw,relatime,data=ordered        0 2
</span><span class='line'>
</span><span class='line'># Only for /var , use mount -o bind
</span><span class='line'>/media/var_for_sda      /var    none    bind</span></code></pre></td></tr></table></div></figure>


<p>Now reboot everything will be OK.</p>

<h3>Configuration For SSD</h3>

<p>Profile-sync-daemon for optimization of Browser :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ yaourt profile-sync-daemon
</span><span class='line'>$ sudo vim /etc/psd.conf
</span><span class='line'>USERS="XXXXX"
</span><span class='line'>BROWSERS="chromium firefox"
</span><span class='line'>USE_OVERLAYFS="yes"
</span><span class='line'>$ sudo systemctl enable psd.service
</span><span class='line'>$ sudo systemctl start psd.service</span></code></pre></td></tr></table></div></figure>


<p>Test it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ profile-sync-daemon parse</span></code></pre></td></tr></table></div></figure>


<p>Use <code>firefox -P</code> for changing the profile position. I put all of the profils on HDD.</p>

<p>For chromium, softlink the ~/.config/chromium to HDD disk then you play the tricks for
avoiding HDD from too much write.   .</p>

<h3>Quickly Add User</h3>

<p>Use following command for quickly adding the user with specified priviledge:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># useradd -m -g root -G \
</span><span class='line'>audio,video,floppy,network,rfkill,scanner,storage,optical,power,wheel,uucp -s  \
</span><span class='line'>/usr/bin/zsh xxxxx
</span><span class='line'># passwd xxxxx</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GPT/SSD on ArchLinux Installation]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/30/gpt-slash-ssd-on-archlinux-installation/"/>
    <updated>2015-08-30T09:18:15+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/30/gpt-slash-ssd-on-archlinux-installation</id>
    <content type="html"><![CDATA[<p>Since I met so many problems in archlinux installation on SSD, plus UEFI issues, I use
following virt machine for re-produce the problem and try to find out the solution.</p>

<h3>Prepare</h3>

<p>Prepare two disk, one for SSD, the second is the oridinary one.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ qemu-img create -f qcow2 -o cluster_size=4k ArchSSD.qcow2 100G
</span><span class='line'>$ qemu-img create -f qcow2 ArchHDD.qcow2 80G
</span><span class='line'>$ virt-manage</span></code></pre></td></tr></table></div></figure>


<h3>UEFI Support In Virt-Manager</h3>

<p>Follow the tips in
<a href="https://fedoraproject.org/wiki/Using_UEFI_with_QEMU">https://fedoraproject.org/wiki/Using_UEFI_with_QEMU</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># wget http://www.kraxel.org/repos/firmware.repo -O /etc/yum.repos.d/firmware.repo
</span><span class='line'># yum install edk2.git-ovmf-x64
</span><span class='line'># vim /etc/libvirt/qemu.conf
</span><span class='line'> nvram = [
</span><span class='line'>    "/usr/share/edk2.git/ovmf-x64/OVMF_CODE-pure-efi.fd:/usr/share/edk2.git/ovmf-x64/OVMF_VARS-pure-efi.fd",
</span><span class='line'> ]</span></code></pre></td></tr></table></div></figure>


<p>In customization of the vm, select like following:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_08_30_10_09_31_306x202.jpg" alt="/images/2015_08_30_10_09_31_306x202.jpg" /></p>

<h3>Virtual Machine Definition</h3>

<p>The configuration of the vm machine is listed as in following picture:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_08_30_09_28_46_445x204.jpg" alt="/images/2015_08_30_09_28_46_445x204.jpg" /></p>

<p>So now begin to install virt-machine. Use iso for booting up the machine and you will
see following partition configuration in the terminal:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@archiso ~ # fdisk -l /dev/vda
</span><span class='line'>Disk /dev/vda: 100 GiB, 107374182400 bytes, 209715200 sectors
</span><span class='line'>Units: sectors of 1 * 512 = 512 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>root@archiso ~ # fdisk -l /dev/vdb
</span><span class='line'>Disk /dev/vdb: 80 GiB, 85899345920 bytes, 167772160 sectors
</span><span class='line'>Units: sectors of 1 * 512 = 512 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>Partition Preparation</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Jenkins for Building Packer Images]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/26/use-jenkins-for-building-packer-images/"/>
    <updated>2015-08-26T16:36:20+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/26/use-jenkins-for-building-packer-images</id>
    <content type="html"><![CDATA[<h3>Installation Jenkins</h3>

<p>Refers to
<a href="https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins+on+Ubuntu">https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins+on+Ubuntu</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
</span><span class='line'>$ sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ &gt; /etc/apt/sources.list.d/jenkins.list'
</span><span class='line'>$ sudo apt-get update
</span><span class='line'>$ sudo apt-get install -y jenkins</span></code></pre></td></tr></table></div></figure>


<h3>Install Packer Plugins</h3>

<p>Manually(But failed), so finally I use the web-backed for installing.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget https://ci.jenkins-ci.org/jnlpJars/jenkins-cli.jar
</span><span class='line'>$ java -jar jenkins-cli.jar -s http://localhost:8080 help
</span><span class='line'>$ java -jar jenkins-cli.jar -s http://localhost:8080 list-plugins
</span><span class='line'>$ java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin \ 
</span><span class='line'>http://ftp.yz.yamagata-u.ac.jp/pub/misc/jenkins/plugins/packer/1.2/packer.hpi</span></code></pre></td></tr></table></div></figure>


<p><img src="http://purplepalmdash.github.io/images/2015_08_26_16_56_22_672x344.jpg" alt="/images/2015_08_26_16_56_22_672x344.jpg" /></p>

<p>After installation, restart service via <code>service restart jenkins</code>.</p>

<p>How to use it? later will investigate.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enable Trusty KickStart for SpaceWalk]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/25/enable-trusty-kickstart-for-spacewalk/"/>
    <updated>2015-08-25T16:06:17+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/25/enable-trusty-kickstart-for-spacewalk</id>
    <content type="html"><![CDATA[<h3>Import distro-tree</h3>

<p>Copy iso content into the distro-tree:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mount -t  iso9660 -o loop /mnt/iso/ubuntu-14.04.3-server-amd64.iso /mnt1/
</span><span class='line'># mkdir /var/distro-trees/ubuntu-14.04.3-amd64
</span><span class='line'># chmod 755 /var/distro-trees/ubuntu-14.04.3-amd64/
</span><span class='line'># cp -ar /mnt1/* /var/distro-trees/ubuntu-14.04.3-amd64/</span></code></pre></td></tr></table></div></figure>


<p>We will copy the pxeboot startup file from CentOS7 into ubuntu14.04 distro tree for
cheating the spacewalk:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mount -t iso9660 -o loop /mnt/iso/CentOS-7-x86_64-Everything-1503-01.iso /mnt2/
</span><span class='line'># mkdir -p /var/distro-trees/ubuntu-14.04.3-amd64/images/pxeboot/
</span><span class='line'># cp /mnt2/images/pxeboot/{initrd.img,vmlinuz} /var/distro-trees/ubuntu-14.04.3-amd64/images/pxeboot/
</span><span class='line'># ls /var/distro-trees/ubuntu-14.04.3-amd64/images/pxeboot/ -l -h
</span><span class='line'>....</span></code></pre></td></tr></table></div></figure>


<h3>Kickstarting</h3>

<p>Now in spacewalk go to Systems->Kickstart->Distributions, with the parameters like
following picture:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_08_25_16_17_53_595x352.jpg" alt="/images/2015_08_25_16_17_53_595x352.jpg" />  <br/>
We copy the CentOS Kernel and initrd, so Spacewalk use redhat parameters for this
distribution, later we will fix this.</p>

<p>Now create a profile via go to Systems->Kickstart->Profiles and &ldquo;upload a new kickstart
file&rdquo;, just like following picture.</p>

<p><img src="http://purplepalmdash.github.io/images/2015_08_25_16_22_53_617x590.jpg" alt="/images/2015_08_25_16_22_53_617x590.jpg" /></p>

<p>We fix the hardcoded breed from redhat to ubuntu via following steps:</p>

<p>Get the list info via <code>cobbler list</code>:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_08_25_16_27_12_515x205.jpg" alt="/images/2015_08_25_16_27_12_515x205.jpg" /></p>

<p>Report the selected distro info:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cobbler distro report --name=trustyamd64:1:SpacewalkDefaultOrganization</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><img src="http://purplepalmdash.github.io/images/2015_08_25_16_28_48_990x256.jpg" alt="/images/2015_08_25_16_28_48_990x256.jpg" /></p>

<p>Edit it like following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cobbler distro edit --name trustyamd64:1:SpacewalkDefaultOrganization --breed=ubuntu --os-version=jaunty --initrd=/var/distro-trees/ubuntu-14.04.3-amd64/install/netboot/ubuntu-installer/amd64/initrd.gz --kernel=/var/distro-trees/ubuntu-14.04.3-amd64/install/vmlinuz </span></code></pre></td></tr></table></div></figure>


<p>We should notice the initrd file and kernel has been modified!!!</p>

<p><img src="http://purplepalmdash.github.io/images/2015_08_25_16_32_24_933x261.jpg" alt="/images/2015_08_25_16_32_24_933x261.jpg" /></p>

<p>Now edit the <code>/var/lib/tftpboot/pxelinux.cfg/default</code> file, find the item and modify it like following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>LABEL trustykickstart:1:SpacewalkDefaultOrganization
</span><span class='line'>        kernel /images/trustyamd64:1:SpacewalkDefaultOrganization/vmlinuz
</span><span class='line'>        MENU LABEL trustykickstart:1:SpacewalkDefaultOrganization
</span><span class='line'>        append initrd=/images/trustyamd64:1:SpacewalkDefaultOrganization/initrd.gz  ks=http://192.168.0.79/trustykickstart.cfg ksdevice=eth0 --
</span><span class='line'>        ipappend 2</span></code></pre></td></tr></table></div></figure>


<p>Now you could kickstart your ubuntu trusty now.</p>

<h3>Register to SpaceWalk</h3>

<p>First create a key under spacewalk for activating all of the trusty clients:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_08_26_11_10_35_378x489.jpg" alt="/images/2015_08_26_11_10_35_378x489.jpg" /></p>

<p>Register the client via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install apt-transport-spacewalk rhnsd
</span><span class='line'># vim /usr/lib/python2.7/xmlrpclib.py
</span><span class='line'>    def dump_nil (self, value, write):
</span><span class='line'>    - if not self.allow_none:
</span><span class='line'>    - raise TypeError, "cannot marshal None unless allow_none is enabled"
</span><span class='line'>    +# if not self.allow_none:
</span><span class='line'>    +# raise TypeError, "cannot marshal None unless allow_none is enabled"
</span><span class='line'># apt-get install python-libxml2
</span><span class='line'># mkdir /var/lock/subsys
</span><span class='line'># vim /etc/hosts
</span><span class='line'>10.11.11.3      spacewalk
</span><span class='line'># rhnreg_ks --activationkey=1-trustyamd64 --serverUrl=http://spacewalk/XMLRPC
</span><span class='line'>Warning: unable to enable rhnsd with chkconfig</span></code></pre></td></tr></table></div></figure>


<p>Register to the main channel:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /etc/apt/sources.list.d/spacewalk.list
</span><span class='line'>deb spacewalk://spacewalk channels: main
</span><span class='line'># apt-get update</span></code></pre></td></tr></table></div></figure>


<p>Added more software channels in the spacewalk web.</p>

<p><img src="http://purplepalmdash.github.io/images/2015_08_26_11_22_13_607x454.jpg" alt="/images/2015_08_26_11_22_13_607x454.jpg" /></p>

<p>Update it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get update && apt-get update
</span><span class='line'>Apt-Spacewalk: Updating sources.list
</span><span class='line'>WARNING:root:could not open file '/etc/apt/sources.list'
</span><span class='line'>
</span><span class='line'>Ign spacewalk://spacewalk channels: InRelease
</span><span class='line'>Ign spacewalk://spacewalk channels: Release.gpg
</span><span class='line'>Ign spacewalk://spacewalk channels: Release
</span><span class='line'>Ign spacewalk://spacewalk channels:/main amd64 Packages/DiffIndex
</span><span class='line'>Ign spacewalk://spacewalk channels:/main i386 Packages/DiffIndex
</span><span class='line'>Get:1 spacewalk://spacewalk channels:/trusty-amd64-updates amd64 Packages [829 kB]
</span><span class='line'>Get:2 spacewalk://spacewalk channels:/trusty-amd64-backports amd64 Packages [5,177 B]
</span><span class='line'>Get:3 spacewalk://spacewalk channels:/trusty-amd64-security amd64 Packages [437 kB]
</span><span class='line'>Get:4 spacewalk://spacewalk channels:/trusty-amd64-updates i386 Packages [829 kB]
</span><span class='line'>Get:5 spacewalk://spacewalk channels:/trusty-amd64-backports i386 Packages [5,177 B]
</span><span class='line'>Get:6 spacewalk://spacewalk channels:/trusty-amd64-security i386 Packages [437 kB]
</span><span class='line'>Get:7 spacewalk://spacewalk channels:/main amd64 Packages [2,017 kB]
</span><span class='line'>Get:8 spacewalk://spacewalk channels:/main i386 Packages [2,017 kB]
</span><span class='line'>Ign spacewalk://spacewalk channels:/main Translation-en_US
</span><span class='line'>Ign spacewalk://spacewalk channels:/main Translation-en
</span><span class='line'>Ign spacewalk://spacewalk channels:/trusty-amd64-backports Translation-en_US
</span><span class='line'>Ign spacewalk://spacewalk channels:/trusty-amd64-backports Translation-en
</span><span class='line'>Ign spacewalk://spacewalk channels:/trusty-amd64-security Translation-en_US
</span><span class='line'>Ign spacewalk://spacewalk channels:/trusty-amd64-security Translation-en
</span><span class='line'>Ign spacewalk://spacewalk channels:/trusty-amd64-updates Translation-en_US
</span><span class='line'>Ign spacewalk://spacewalk channels:/trusty-amd64-updates Translation-en
</span><span class='line'>Fetched 6,577 kB in 1s (5,320 kB/s)</span></code></pre></td></tr></table></div></figure>


<p>Met many problems, perhaps the repository error.</p>

<p>Fix Bug, In spacewalk server, change following items:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@spacewalk trusty-ia32]# cat Packages | grep -i "Package: python$" -A2
</span><span class='line'>Package: python
</span><span class='line'>Version: 2.7.5-5ubuntu3
</span><span class='line'>Multi-Arch: allowed
</span><span class='line'>[root@spacewalk trusty-ia32]# cat Packages | grep -i "Package: python3$" -A2
</span><span class='line'>Package: python3
</span><span class='line'>Version: 3.4.0-0ubuntu2
</span><span class='line'>Multi-Arch: allowed
</span><span class='line'>[root@spacewalk trusty-ia32]# pwd
</span><span class='line'>/var/cache/rhn/repodata/trusty-ia32</span></code></pre></td></tr></table></div></figure>


<p>And regenerate the Packages.gz via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># rm -f Packages.gz
</span><span class='line'># gzip -c Packages Packages.gz</span></code></pre></td></tr></table></div></figure>


<p>Now re-install firefox you won&rsquo;t meet problem.</p>

<h3>Enable &ldquo;Push&rdquo;</h3>

<p>Install the packages, precise&rsquo;s package will also be OK for trusty.</p>

<p>Notice, the Trusty could use saucy based deb.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget https://launchpad.net/~mj-casalogic/+archive/ubuntu/spacewalk-ubuntu/+files/rhncfg_5.10.14-1ubuntu1%7Esaucy2_all.deb
</span><span class='line'>$ wget https://launchpad.net/~mj-casalogic/+archive/ubuntu/spacewalk-ubuntu/+files/osad_5.11.27-1ubuntu1%7Esaucy5_all.deb
</span><span class='line'>$ wget https://launchpad.net/~mj-casalogic/+archive/ubuntu/spacewalk-ubuntu/+files/pyjabber_0.5.0-1.4ubuntu3%7Esaucy1_all.deb
</span><span class='line'>$ sudo dpkg -i osad_5.11.27-1ubuntu1~saucy5_all.deb
</span><span class='line'>$ sudo dpkg -i pyjabber_0.5.0-1.4ubuntu3~saucy1_all.deb</span></code></pre></td></tr></table></div></figure>


<p>Import the certification file and modify the osad&rsquo;s certification file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cd /usr/share/rhn
</span><span class='line'># wget http://spacewalk.example.com/pub/RHN-ORG-TRUSTED-SSL-CERT
</span><span class='line'># vim /etc/sysconfig/rhn/up2date
</span><span class='line'>sslCACert=/usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT
</span><span class='line'># vim /etc/sysconfig/rhn/osad.conf
</span><span class='line'>osa_ssl_cert = /usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT
</span><span class='line'># service osad start
</span><span class='line'># update-rc.d osad defaults
</span><span class='line'># reboot</span></code></pre></td></tr></table></div></figure>


<p>If you encounter problem, check the version of the osad/pyjabber, remove the precise
version and install saucy version on Trusty via <code>dpkg -P osad &amp;&amp; dpkg -P pyjabber</code>,
install the right version, then everything will becomes OK.</p>

<h3>Enable Remote Command</h3>

<p>Install and Configure it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># dpkg -i rhncfg_5.10.14-1ubuntu1~saucy2_all.deb 
</span><span class='line'># rhn-actions-control --enable-run
</span><span class='line'># mkdir /var/spool/rhn</span></code></pre></td></tr></table></div></figure>


<p>Also add configuration:   <br/>
<img src="http://purplepalmdash.github.io/images/2015_08_27_15_09_31_375x346.jpg" alt="/images/2015_08_27_15_09_31_375x346.jpg" /></p>

<p>Now you could run command in spacewalk backend.</p>

<h3>Errata</h3>

<p>Following the tips on <a href="http://cefs.steve-meier.de/">http://cefs.steve-meier.de/</a>  <br/>
Import erratas into the system.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ./errata-import.pl --server spacewalk --errata ./errata.latest.xml  --rhsa-oval \
</span><span class='line'>./com.redhat.rhsa-all.xml --channel centos6-i386 --os-version 6 --publish</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add CentOS Client Into SpaceWalk]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/25/add-centos-client-into-spacewalk/"/>
    <updated>2015-08-25T14:30:44+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/25/add-centos-client-into-spacewalk</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<p>Take i386 architecture for example, first download the rpm package then install it:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget /yum.spacewalkproject.org/2.3-client/RHEL/6/i386/spacewalk-client-repo-2.3-2.el6.noarch.rpm
</span><span class='line'>$ rpm -ivh spacewalk-client-repo-2.3-2.el6.noarch.rpm </span></code></pre></td></tr></table></div></figure>


<p>If your architecture is x86_64, then select x86_64 corresponding rpm and install it.</p>

<p>Enable EPEL:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># BASEARCH=$(uname -i)
</span><span class='line'># rpm -Uvh http://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm</span></code></pre></td></tr></table></div></figure>


<p>Now install the spacewalk client via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y rhn-client-tools rhn-check rhn-setup rhnsd m2crypto yum-rhn-plugin</span></code></pre></td></tr></table></div></figure>


<h3>Configuration</h3>

<p>Install Spacewalk server&rsquo;s CA certificate on the server to enable SSL communication:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># wget http://10.11.11.3/pub/rhn-org-trusted-ssl-cert-1.0-1.noarch.rpm
</span><span class='line'># rpm -ivh rhn-org-trusted-ssl-cert-1.0-1.noarch.rpm</span></code></pre></td></tr></table></div></figure>


<p>Add following item into the <code>/etc/hosts</code> and test its reachable:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/hosts
</span><span class='line'>....
</span><span class='line'>10.11.11.3      spacewalk
</span><span class='line'># ping spacewalk
</span><span class='line'>PING spacewalk (10.11.11.3) 56(84) bytes of data.
</span><span class='line'>64 bytes from spacewalk (10.11.11.3): icmp_seq=1 ttl=64 time=0.214 ms
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>Now register your machine into the server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#  rhnreg_ks --serverUrl=https://spacewalk/XMLRPC --sslCACert=/usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT --activationkey=1-centos6-i386</span></code></pre></td></tr></table></div></figure>


<p>Verify it in SpaceWalk&rsquo;s system details view.</p>

<h3>Enable osad</h3>

<p>Install and configure it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install osad
</span><span class='line'># vim /etc/sysconfig/rhn/osad.conf
</span><span class='line'>osa_ssl_cert = /usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT
</span><span class='line'># yum install python-hashlib
</span><span class='line'># service osad start</span></code></pre></td></tr></table></div></figure>


<p>After osad has been installed, the installation of packages will be done almost
instantly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enable Game-KeyBoard Rapoo V5 Pro in Ubuntu Trusty]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/24/enable-game-keyboard-rapoo-v5-pro-in-ubuntu-trusty/"/>
    <updated>2015-08-24T12:13:42+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/24/enable-game-keyboard-rapoo-v5-pro-in-ubuntu-trusty</id>
    <content type="html"><![CDATA[<h3>Problem</h3>

<p>A Game KeyBoard Rapoo V5 Pro could work propery under windows, but in
Ubuntu 14.04(Trusty) it could not be identified. Following are the steps for enable it.   <br/>
The dmesg shows following message(similar message):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ 272.865245] hid-generic 0003:04D9:A04A.0007: input,hidraw4: USB HID v1.10 Keyboard
</span><span class='line'>[xxxxxxxxxxxxxx] on usb-0000:00:1d.0-1/input0
</span><span class='line'>[ 272.874127] hid-generic 0003:04D9:A04A.0008: usage index exceeded
</span><span class='line'>[ 272.874142] hid-generic 0003:04D9:A04A.0008: item 0 2 2 2 parsing failed
</span><span class='line'>[ 272.874187] hid-generic: probe of 0003:04D9:A04A.0008 failed with error -22</span></code></pre></td></tr></table></div></figure>


<h3>Reason</h3>

<p>This is an known bug which we could found at:<br/>
<a href="https://bugs.archlinux.org/task/33322">https://bugs.archlinux.org/task/33322</a>   <br/>
Or:  <br/>
<a href="https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1064490">https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1064490</a></p>

<p>The reason is because &ldquo;usage index exceeded&rdquo; because the source code definition in
kernel only 12288:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat include/hid.c
</span><span class='line'>....
</span><span class='line'>#define HID_MAX_USAGES            12288</span></code></pre></td></tr></table></div></figure>


<h3>Solution</h3>

<p>We need to re-compile the kernel with the modified code, then install it we could get
this keyboard working.</p>

<p>Download the kernel source:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir ~/Code/Kernel_Enable_Keyboard && ce ~/Code/Kernel_Enable_Keyboard
</span><span class='line'>$ apt-get source linux-image-$(uname -r)</span></code></pre></td></tr></table></div></figure>


<p>Now prepare the building environment:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install kernel-package
</span><span class='line'>$ sudo apt-get build-dep linux-image-$(uname -r)
</span><span class='line'>$ sudo apt-get install libncurses5 libncurses5-dev</span></code></pre></td></tr></table></div></figure>


<p>Modify the code:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim linux-lts-utopic-3.16.0/include/hid.h
</span><span class='line'>- #define HID_MAX_USAGES          12288
</span><span class='line'>+ #define HID_MAX_USAGES          42288</span></code></pre></td></tr></table></div></figure>


<p>Configure the kernel using your current running configuration and build it:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo make oldconfig
</span><span class='line'>$ sudo make-kpkg -j N --initrd --append-to-version=my-very-own-kernel kernel-image
</span><span class='line'>kernel-headers</span></code></pre></td></tr></table></div></figure>


<p>You will get the deb file generated under the folder, <code>sudo dpkg -i *.deb</code> them, reboot
the system, now insert your USB Keyboard, it will be identified and runs OK.</p>

<h3>Known Issue</h3>

<p>My 8188eu usb wifi dongle could not be identified, so <code>modprobe r8188eu</code> could solve
the problem, Later add it into the system startup script.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/modules
</span><span class='line'>r8188eu</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Customize Kickstart for SpaceWalk]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/22/customize-kickstart-for-spacewalk/"/>
    <updated>2015-08-22T18:53:09+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/22/customize-kickstart-for-spacewalk</id>
    <content type="html"><![CDATA[<h3>Software Selection</h3>

<p>An example is listed as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@ Base
</span><span class='line'>firefox
</span><span class='line'>@ Gnome
</span><span class='line'>ibus-table-cangjie
</span><span class='line'>ibus-table-erbi
</span><span class='line'>ibus-table-wubi
</span><span class='line'>python-dmidecode
</span><span class='line'>python-hwdata
</span><span class='line'>@X Window System
</span><span class='line'>@gnome-desktop
</span><span class='line'>@graphics
</span><span class='line'>@input-methods
</span><span class='line'>@remote-desktop-clients
</span><span class='line'>@internet-browser
</span><span class='line'>@multimedia
</span><span class='line'>@web-server
</span><span class='line'>@x11</span></code></pre></td></tr></table></div></figure>


<p>Defined in:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_08_22_18_54_00_563x587.jpg" alt="/images/2015_08_22_18_54_00_563x587.jpg" /></p>

<p>More detailed configuration could be found at the DVD-ROM of the CentOS7:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ls /var/distro-trees/centos7_64/repodata
</span><span class='line'>175ddec2056ec6b5ef267cea35f8ec679314afbfb019957e53f71725bcc5d829-c7-x86_64-comps.xml</span></code></pre></td></tr></table></div></figure>


<p>This xml file include all of the possible groups.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Move SpaceWalk Server Into a New Network]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/22/move-spacewalk-server-into-a-new-network/"/>
    <updated>2015-08-22T16:49:19+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/22/move-spacewalk-server-into-a-new-network</id>
    <content type="html"><![CDATA[<h3>Env</h3>

<p>Move from one isolated network to another isolated network. Experiment is done on
virt-manager, from 10.9.10.0/24 to 10.47.58.0/24 network. Following are the steps for
migration.</p>

<h3>Steps</h3>

<p>First shutdown the machine and connect the existing network card to new network, boot
on the computer.</p>

<p>Modify the ip address(static IP Address):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/sysconfig/network-scripts/ifcfg-eth0
</span><span class='line'>- IPADDR=10.9.10.13
</span><span class='line'>- GATEWAY=10.9.10.1
</span><span class='line'>+ IPADDR=10.47.58.3
</span><span class='line'>+ GATEWAY=10.47.58.1</span></code></pre></td></tr></table></div></figure>


<p>Modify the hostname:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/hosts
</span><span class='line'>- 10.9.10.13      spacewalker
</span><span class='line'>+ 10.47.58.3      spacewalker</span></code></pre></td></tr></table></div></figure>


<p>Modify the dhcpd configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/dhcp/dhcpd.conf
</span><span class='line'>#  specify network address and subnet mask
</span><span class='line'>-  subnet 10.9.10.0 netmask 255.255.255.0 {
</span><span class='line'>-      # specify the range of lease IP address
</span><span class='line'>-      range dynamic-bootp 10.9.10.200 10.9.10.254;
</span><span class='line'>-      # specify broadcast address
</span><span class='line'>-      option broadcast-address 10.9.10.255;
</span><span class='line'>-      # specify default gateway
</span><span class='line'>-      option routers 10.9.10.1;
</span><span class='line'>-      # Specify default dns server
</span><span class='line'>-      option domain-name-servers 10.9.10.13;
</span><span class='line'>-  }
</span><span class='line'>
</span><span class='line'>+ subnet 10.47.58.0 netmask 255.255.255.0 {
</span><span class='line'>+     # specify the range of lease IP address
</span><span class='line'>+     range dynamic-bootp 10.47.58.200 10.47.58.254;
</span><span class='line'>+     # specify broadcast address
</span><span class='line'>+     option broadcast-address 10.47.58.255;
</span><span class='line'>+     # specify default gateway
</span><span class='line'>+     option routers 10.47.58.1;
</span><span class='line'>+     # Specify default dns server
</span><span class='line'>+     option domain-name-servers 10.47.58.3;
</span><span class='line'>+     filename                   "/pxelinux.0";       
</span><span class='line'>+     # default-lease-time         21600;           
</span><span class='line'>+     # max-lease-time             43200;      
</span><span class='line'>+     next-server                10.47.58.3; 
</span><span class='line'>+ 
</span><span class='line'>+ }</span></code></pre></td></tr></table></div></figure>


<p>DNS Server Configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/named.conf
</span><span class='line'>
</span><span class='line'>options {
</span><span class='line'>        - listen-on port 53 { 127.0.0.1; 10.9.10.13;};
</span><span class='line'>        + listen-on port 53 { 127.0.0.1; 10.47.58.3;};
</span><span class='line'>//.................
</span><span class='line'>        
</span><span class='line'>  - allow-query     { localhost; 10.9.10.0/24;};
</span><span class='line'>        + allow-query     { localhost; 10.47.58.0/24;};</span></code></pre></td></tr></table></div></figure>


<p>DNS Server DB Change:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/named/zones/db.spacewalker
</span><span class='line'>- spacewalker.         IN      A       10.9.10.13
</span><span class='line'>+ spacewalker.         IN      A       10.47.58.3</span></code></pre></td></tr></table></div></figure>


<p>Reboot and check the result:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@spacewalker ~]# ps -ef | grep dhcp
</span><span class='line'>dhcpd      848     1  0 17:02 ?        00:00:00 /usr/sbin/dhcpd -f -cf
</span><span class='line'>/etc/dhcp/dhcpd.conf -user dhcpd -group dhcpd --no-pid
</span><span class='line'>root      2208  2186  0 17:03 pts/0    00:00:00 grep --color=auto dhcp
</span><span class='line'>[root@spacewalker ~]# ps -ef | grep name
</span><span class='line'>named     1031     1  0 17:02 ?        00:00:00 /usr/sbin/named -u named
</span><span class='line'>root      2210  2186  0 17:03 pts/0    00:00:00 grep --color=auto name
</span><span class='line'>[root@spacewalker ~]# hostname --fqdn
</span><span class='line'>spacewalker
</span><span class='line'>[root@spacewalker tftpboot]# netstat -anp | grep 69 | grep xinetd
</span><span class='line'>udp        0      0 0.0.0.0:69              0.0.0.0:*  841/xinetd  </span></code></pre></td></tr></table></div></figure>


<p>Now bootup a machine and add it to the 10.47.58.0/24 network, your machine will be boot
into pxe menu, thus you could reinstall your machine.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mrepo Tips for Syncing CentOS Repositories]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/21/mrepo-tips-for-syncing-centos-repositories/"/>
    <updated>2015-08-21T14:48:30+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/21/mrepo-tips-for-syncing-centos-repositories</id>
    <content type="html"><![CDATA[<p>Refers to the mirrorlist website, don&rsquo;t use aliyun, cause their webserver will
forbidden lftp from fetching the infos. I switches to 163.com and ustc.edu.cn for
different repositories, following are the configuration file.</p>

<h3>CentOS6</h3>

<p>An example is listed as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /etc/mrepo.conf.d/centos6.conf 
</span><span class='line'>[centos6]
</span><span class='line'>name = CentOS $release ($arch)
</span><span class='line'>release = 6
</span><span class='line'>arch = x86_64
</span><span class='line'>metadata = yum repomd
</span><span class='line'>
</span><span class='line'>#iso = http://mirrors.163.com/centos/$release/isos/$arch/CentOS-6.6-x86_64-bin-DVD?.iso
</span><span class='line'># os = http://mirrors.163.com/centos/$release/os/$arch/Packages/ 
</span><span class='line'># updates = http://mirrors.163.com/centos/$release/updates/$arch/Packages/
</span><span class='line'># extras = http://mirrors.163.com/centos/$release/extras/$arch/Packages/
</span><span class='line'># fasttrack = http://mirrors.163.com/centos/$release/fasttrack/$arch/Packages/
</span><span class='line'># contrib = http://mirrors.163.com/centos/$release/contrib/$arch/Packages/
</span><span class='line'># centosplus = http://mirrors.163.com/centos/$release/centosplus/$arch/Packages/
</span><span class='line'>epel = http://mirrors.ustc.edu.cn/epel/$release/$arch/
</span></code></pre></td></tr></table></div></figure>


<h3>CentOS7</h3>

<p>An example is listed as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /etc/mrepo.conf.d/centos7.conf 
</span><span class='line'>[centos7]
</span><span class='line'>name = CentOS $release ($arch)
</span><span class='line'>release = 7
</span><span class='line'>arch = x86_64
</span><span class='line'>metadata = yum repomd
</span><span class='line'>
</span><span class='line'>#iso = http://mirrors.163.com/centos/$release/isos/$arch/CentOS-7.0-1406-x86_64-DVD.iso
</span><span class='line'>os = http://mirrors.163.com/centos/$release/os/$arch/Packages/ 
</span><span class='line'>updates = http://mirrors.163.com/centos/$release/updates/$arch/Packages/
</span><span class='line'>epel = http://mirrors.ustc.edu.cn/epel/$release/$arch/
</span><span class='line'>extras = http://mirrors.163.com/centos/$release/extras/$arch/Packages/
</span><span class='line'>fasttrack = http://mirrors.163.com/centos/$release/fasttrack/$arch/Packages/
</span><span class='line'>contrib = http://mirrors.163.com/centos/$release/contrib/$arch/Packages/
</span><span class='line'>centosplus = http://mirrors.163.com/centos/$release/centosplus/$arch/Packages/</span></code></pre></td></tr></table></div></figure>


<p>Sync via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mrepo -g -u -vvv centos6 && mrepo -g -u -vvv centos7</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
