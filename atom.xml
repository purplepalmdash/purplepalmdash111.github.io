<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dash]]></title>
  <link href="http://purplepalmdash.github.io/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-08-04T19:07:22+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tips on Using SpaceWalker for Deploying CentOS7]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/04/tips-on-using-spacewalker-for-deploying-centos7/"/>
    <updated>2015-08-04T15:57:47+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/04/tips-on-using-spacewalker-for-deploying-centos7</id>
    <content type="html"><![CDATA[<h3>Configuration</h3>

<p>After SpaceWalker has been setup, the configuration we need to done is listed as
following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>In /etc/rhn/rhn.conf change the value of the parameter cobbler.host to the ip address of the spacewalk server.
</span><span class='line'>In /etc/cobbler/settings change the value of the parameters server and redhat_management_server to the ip-address of the spacewalk server.</span></code></pre></td></tr></table></div></figure>


<p>Install cobbler bootloaders via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y cobbler-loaders</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install SpaceWalk 2.2 Steps]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/04/install-spacewalk-2-dot-2-steps/"/>
    <updated>2015-08-04T09:18:15+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/04/install-spacewalk-2-dot-2-steps</id>
    <content type="html"><![CDATA[<h3>Network Configuration</h3>

<p>Make sure the following configuration in CentOS6:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /etc/hosts
</span><span class='line'>10.9.10.10      spacewalk
</span><span class='line'>127.0.0.1       localhost
</span><span class='line'>::1     localhost ip6-localhost ip6-loopback
</span><span class='line'>fe00::0 ip6-localnet
</span><span class='line'>ff00::0 ip6-mcastprefix
</span><span class='line'>ff02::1 ip6-allnodes
</span><span class='line'>ff02::2 ip6-allrouters
</span><span class='line'>
</span><span class='line'># cat /etc/sysconfig/network
</span><span class='line'>NETWORKING=yes
</span><span class='line'>NETWORKING_IPV6=no
</span><span class='line'>HOSTNAME=localhost.localdomain
</span><span class='line'># cat /etc/hostname
</span><span class='line'>spacewalk</span></code></pre></td></tr></table></div></figure>


<p>Examine the result via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@spacewalk ~]# hostname
</span><span class='line'>spacewalk
</span><span class='line'>[root@spacewalk ~]# hostname --fqdn
</span><span class='line'>spacewalk</span></code></pre></td></tr></table></div></figure>


<h3>Packages Installation</h3>

<p>First you should only have the following repo definition in the <code>/etc/yum.repos.d/</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># wget -O /etc/yum.repos.d/CentOS-Base.repo \
</span><span class='line'>http://mirrors.aliyun.com/repo/Centos-6.repo 
</span><span class='line'># wget -O /etc/yum.repos.d/epel.repo \ 
</span><span class='line'>http://mirrors.aliyun.com/repo/epel-6.repo
</span><span class='line'># ls /etc/yum.repos.d/
</span><span class='line'>CentOS-Base.repo  epel.repo</span></code></pre></td></tr></table></div></figure>


<p>Install following package(For preparing the installation of the old SpaceWalk version):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y jabberpy python-debian perl-Cache-Cache  jabberd python-hwdata net-snmp-perl perl-XML-LibXML perl-libxml-perl perl-Config-IniFiles perl-Net-IPv4Addr dojo perl-libxml-perl net-snmp-perl perl-Apache-Session perl-Apache-DBI  perl-Crypt-GeneratePassword perl-HTML-Table perl-XML-Generator perl-Net-SNMP perl-HTML-TableExtract perl-libapreq2</span></code></pre></td></tr></table></div></figure>


<p>Now remove the epel.repo, add the following repo definition:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># rpm -Uvh http://yum.spacewalkproject.org/2.2/RHEL/6/x86_64/spacewalk-repo-2.2-1.el6.noarch.rpm
</span><span class='line'># vim /etc/yum.repos.d/jpackage.repo
</span><span class='line'>[jpackage-generic]
</span><span class='line'>name=JPackage generic
</span><span class='line'>#baseurl=http://mirrors.dotsrc.org/pub/jpackage/5.0/generic/free/
</span><span class='line'>mirrorlist=http://www.jpackage.org/mirrorlist.php?dist=generic&type=free&release=5.0
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=1
</span><span class='line'>gpgkey=http://www.jpackage.org/jpackage.asc</span></code></pre></td></tr></table></div></figure>


<p>Install spacewalk via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y spacewalk-postgresql spacewalk-setup-postgresql spacecmd spacewalk-utils </span></code></pre></td></tr></table></div></figure>


<p>Use a pre-defined answer.txt for deployment:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /root/answer.txt
</span><span class='line'>admin-email = root@localhost
</span><span class='line'>ssl-set-org = Spacewalk Org
</span><span class='line'>ssl-set-org-unit = spacewalk
</span><span class='line'>ssl-set-city = My City
</span><span class='line'>ssl-set-state = My State
</span><span class='line'>ssl-set-country = US
</span><span class='line'>ssl-password = spacewalk
</span><span class='line'>ssl-set-email = root@localhost
</span><span class='line'>ssl-config-sslvhost = Y
</span><span class='line'>db-backend=postgresql
</span><span class='line'>db-name=spaceschema
</span><span class='line'>db-user=spacewalk
</span><span class='line'>db-password=spacewalk
</span><span class='line'>db-host=localhost
</span><span class='line'>db-port=5432
</span><span class='line'>enable-tftp=N
</span><span class='line'># spacewalk-setup --disconnected --answer-file=/root/answer.txt</span></code></pre></td></tr></table></div></figure>


<p>You may encounter following error,</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>*** Progress: ##
</span><span class='line'>Could not install database.
</span><span class='line'># cat /var/log/rhn/install_db.log 
</span><span class='line'>Initializing database: [  OK  ]
</span><span class='line'>Starting postgresql service: [  OK  ]
</span><span class='line'>createdb: database creation failed: ERROR:  encoding UTF8 does not match locale en_GB
</span><span class='line'>DETAIL:  The chosen LC_CTYPE setting requires encoding LATIN1.</span></code></pre></td></tr></table></div></figure>


<p>Solve it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sudo su postgres
</span><span class='line'>bash-4.1$ psql
</span><span class='line'>could not change directory to "/root"
</span><span class='line'>psql (8.4.20)
</span><span class='line'>Type "help" for help.
</span><span class='line'>
</span><span class='line'>postgres=# UPDATE pg_database SET datallowconn = TRUE WHERE datname = 'template0';
</span><span class='line'>UPDATE 1
</span><span class='line'>postgres=# UPDATE pg_database SET datistemplate = FALSE WHERE datname = 'template1';
</span><span class='line'>UPDATE 1
</span><span class='line'>postgres=# drop database template1;
</span><span class='line'>DROP DATABASE
</span><span class='line'>postgres=# CREATE DATABASE template1 ENCODING = 'utf8' TEMPLATE = template0 LC_CTYPE ='en_US.utf8' LC_COLLATE = 'en_US.utf8';
</span><span class='line'>CREATE DATABASE
</span><span class='line'>postgres=# UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template1';
</span><span class='line'>UPDATE 1
</span><span class='line'>postgres=# UPDATE pg_database SET datallowconn = FALSE WHERE datname = 'template0';
</span><span class='line'>UPDATE 1
</span><span class='line'>postgres=# \q
</span><span class='line'>bash-4.1$ exit
</span><span class='line'>exit</span></code></pre></td></tr></table></div></figure>


<p>Run <code>spacewalk-setup</code> again, this time you will pass the installation.    <br/>
Visit <code>http://YourIPAddress</code> for setting the login name and password:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_08_04_10_54_48_879x600.jpg" alt="/images/2015_08_04_10_54_48_879x600.jpg" /></p>

<p>Prepare the distro trees for CentOS7.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkdir /var/distro-trees/centos7_64 -p
</span><span class='line'># chmod 755 /var/
</span><span class='line'># chmod 755 /var/distro-trees/
</span><span class='line'># chmod 755 /var/distro-trees/centos7_64/
</span><span class='line'># cp -ar /mnt1/* /var/distro-trees/centos7_64/</span></code></pre></td></tr></table></div></figure>


<p>Create Channel:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># /usr/bin/spacewalk-common-channels -v -u Username -p Password \ 
</span><span class='line'>-a x86_64 -k unlimited  'centos7*'</span></code></pre></td></tr></table></div></figure>


<p>Create Repository:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#  spacecmd  -u Username -p Password -- distribution_create -n centos7 -p  /var/distro-trees/centos7_64/ -b centos7-x86_64 -t rhel_7</span></code></pre></td></tr></table></div></figure>


<p>Now you could use the backend for creating the kickstart, via <code>System-&gt; KickStart-&gt; Profile</code></p>

<h3>Channel Package Upload</h3>

<p>Uploading packages to the channel could consume lots of time, CentOS7 DVD have more
than 8000 packages, thus takes around half a day for uploading.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># wget https://127.0.0.1/pub/RHN-ORG-TRUSTED-SSL-CERT -O \
</span><span class='line'>/usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT --no-check-certificate 
</span><span class='line'># find . -name "*rpm" | xargs rhnpush --channel=centos7-x86_64 --server=http://localhost/APP -v --tolerant -u Username -p Passwd</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu1504's Cobbler Server]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/29/ubuntu1504-s-cobbler-server/"/>
    <updated>2015-07-29T21:23:44+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/29/ubuntu1504-s-cobbler-server</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<p>The newest version is 2.6.9.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># wget -qO - http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/xUbuntu_15.04/Release.key | sudo apt-key add -
</span><span class='line'># sudo add-apt-repository "deb http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/xUbuntu_15.04/ ./"
</span><span class='line'># sudo apt-get install cobbler</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trying SpaceWalk]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/29/trying-spacewalk.markdown~/"/>
    <updated>2015-07-29T16:43:23+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/29/trying-spacewalk.markdown~</id>
    <content type="html"><![CDATA[### Server Installation && Configration
Server have 2-core and 3072MB, running CentOS6.6, IP address is 10.9.10.2.    

Installation:   

```
# rpm -Uvh http://yum.spacewalkproject.org/2.3/RHEL/6/x86_64/spacewalk-repo-2.3-4.el6.noarch.rpm
# wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo
# yum update
# yum install -y spacewalk-postgresql 
```

Now add a new repository:    

```
# cat /etc/yum.repos.d/jpackage-generic.repo 
[jpackage-generic]
name=JPackage generic
#baseurl=http://mirrors.dotsrc.org/pub/jpackage/5.0/generic/free/
mirrorlist=http://www.jpackage.org/mirrorlist.php?dist=generic&type=free&release=5.0
enabled=1
gpgcheck=1
gpgkey=http://www.jpackage.org/jpackage.asc
```


Met some problems on CentOS6.6, mainly the dependencies problem, switches to CentOS7(10.9.10.100) :    

Install it via:   

```
# rpm -Uvh http://yum.spacewalkproject.org/2.3/RHEL/7/x86_64/spacewalk-repo-2.3-4.el7.noarch.rpm
```

Setup Database for spacewalk:    

```
# yum install spacewalk-setup-postgresql
```

Install spacewalk with postgresql as its backend database:   

```
# yum install spacewalk-postgresql
```
Install spacecmd for using cmd of spacewalker:    

```
# yum install -y spacecmd
```

### Configuration

```
# /usr/bin/spacewalk-setup-postgresql remove --db
rhnschema --user rhnuser
# spacewalk-setup --disconnected                                          
** Database: Setting up database connection for PostgreSQL backend.
Database "rhnschema" does not exist
** Database: Installing the database:
** Database: This is a long process that is logged in:
** Database:   /var/log/rhn/install_db.log
*** Progress: ##
** Database: Installation complete.
** Database: Populating database.
*** Progress: ############################
* Configuring tomcat.
* Setting up users and groups.
** GPG: Initializing GPG and importing key.
** GPG: Creating /root/.gnupg directory
You must enter an email address.
Admin Email Address? xxxxxx@gmail.com
* Performing initial configuration.
* Activating Spacewalk.
** Loading Spacewalk Certificate.
** Verifying certificate locally.
** Activating Spacewalk.
* Configuring apache SSL virtual host.
Should setup configure apache's default ssl server for you (saves original ssl.conf)
[Y]? y
** /etc/httpd/conf.d/ssl.conf has been backed up to ssl.conf-swsave
* Configuring jabberd.
* Creating SSL certificates.
CA certificate password? 
Re-enter CA certificate password? 
Organization? Lxxzxxx University
Organization Unit [SpaceWalker]? XXU
Email Address [xxxxx@gmail.com]? XXXXX@gmail.com
City? LxxZxx
State? xxxx
Country code (Examples: "US", "JP", "IN", or type "?" to see a list)? CN
** SSL: Generating CA certificate.
** SSL: Deploying CA certificate.
** SSL: Generating server certificate.
** SSL: Storing SSL certificates.
* Deploying configuration files.
* Update configuration in database.
* Setting up Cobbler..
Cobbler requires tftp and xinetd services be turned on for PXE provisioning
functionality. Enable these services [Y]? Y
* Restarting services.
Installation complete.
Visit https://SpaceWalker to create the Spacewalk administrator account.
```

Open the iptables rules:   

```
# iptables -A INPUT -p tcp -m multiport --dport 22,443,5222,69,5432 -j ACCEPT 
```
For better use the spacewalk's utilities, install the following packages:    

```
# yum install -y spacewalk-utils
```
With this package, you could use `spacewalk-common-channels` and other commands.   

### Setup Repository
Add a channel of CentOS7:    

```
[root@SpaceWalker ~]# /usr/bin/spacewalk-common-channels -v -u YourUserName -p \
YourPassword -a x86_64 -k unlimited 'centos7*'
Connecting to http://localhost/rpc/api
Base channel 'CentOS 7 (x86_64)' - creating...
* Activation key 'centos7-x86_64' - creating...
* Child channel 'CentOS 7 Addons (x86_64)' - creating...
** Activation key '1-centos7-x86_64' - adding child channel...
* Child channel 'CentOS 7 Plus (x86_64)' - creating...
** Activation key '1-centos7-x86_64' - adding child channel...
* Child channel 'CentOS 7 Contrib (x86_64)' - creating...
** Activation key '1-centos7-x86_64' - adding child channel...
* Child channel 'CentOS 7 Extras (x86_64)' - creating...
** Activation key '1-centos7-x86_64' - adding child channel...
* Child channel 'CentOS 7 FastTrack (x86_64)' - creating...
** Activation key '1-centos7-x86_64' - adding child channel...
* Child channel 'CentOS 7 Updates (x86_64)' - creating...
** Activation key '1-centos7-x86_64' - adding child channel...
```

Now in the SpaceWalk Backend you will see:    
![/images/2015_07_30_15_22_27_807x526.jpg](/images/2015_07_30_15_22_27_807x526.jpg)    

Import ISO as the repository:    

```
# mkdir /var/distro-trees/centos7_64 -p
# chmod 755 /var/
# chmod 755 /var/distro-trees/
# chmod 755 /var/distro-trees/centos7_64/
# mount -t nfs 192.168.0.79:/home/juju /mnt
#  mount -t iso9660 -o loop /mnt/iso/CentOS-7-x86_64-Everything-1503-01.iso \ 
/var/distro-trees/centos7_64/
# wget https://127.0.0.1/pub/RHN-ORG-TRUSTED-SSL-CERT -O \
/usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT --no-check-certificate 
# /usr/bin/rhnpush -v --channel=centos7-x86_64 --server=https://localhost/APP
--dir="/var/distro-trees/centos7_64/Packages"
Connecting to https://localhost/APP
Username: xxxxxx
Password: 
```
The import process will cost pretty long times.    

### Cobbler Configuration

Via `cobbler check` and fix some errors, notice in CentOS7, the rsyncd is managed via
systemd, so we just enable the rsyncd via:    

```
# systemctl enable rsyncd.service
# systemctl start rsyncd.service
```

debmirror  missing:    

```
# wget http://archive.ubuntu.com/ubuntu/pool/universe/d/debmirror/debmirror_2.10ubuntu1.tar.gz
# tar -xzvf debmirror_2.10ubuntu1.tar.gz
# ...
# cd debmirror-2.10ubuntu1
# make
# cp debmirror /usr/bin/
# cp debmirror.1 /usr/share/man/man1/
# yum install -y cpan
# cpan install Net::INET6Glue 
```

rsync won't be a problem.  


```
# mount -t iso9660 -o loop /media/material/iso/CentOS-7-x86_64-Everything-1503.iso  /mnt1
# cp -ar /mnt1/*  /var/distro-trees/centos7_64
``` 
Now create the distribution:    

```
# spacecmd  -u YourUserName -p YourPassword -- distribution_create -n centos7 -p /var/distro-trees/centos7_64/ -b centos7-x86_64 -t rhel_6
```

```
# yum install -y spacewalk-postgresql spacewalk-setup-postgresql spacecmd spacewalk-utils firefox
[root@localhost ~]# cat /etc/yum.repos.d/SpaceWalk22.repo 
[SpaceWalk22]
name=SpaceWalk22
baseurl=http://192.168.1.11/SpaceWalk22
enabled=1
gpgcheck=0
```

### Use Answer File
Define the answer file and deploy using answer.txt:    

```
# cat /root/Code/spacewalker/answer.txt
admin-email = root@localhost
ssl-set-org = Spacewalk Org
ssl-set-org-unit = spacewalk
ssl-set-city = My City
ssl-set-state = My State
ssl-set-country = US
ssl-password = spacewalk
ssl-set-email = root@localhost
ssl-config-sslvhost = Y
db-backend=postgresql
db-name=spaceschema
db-user=spacewalk
db-password=spacewalk
db-host=localhost
db-port=5432
enable-tftp=N
```
Reconfigure the LC:    

```
$ sudo su postgres
$ psql
# 
# UPDATE pg_database SET datallowconn = TRUE WHERE datname = 'template0';
# \c template0
# UPDATE pg_database SET datistemplate = FALSE WHERE datname = 'template1';
# drop database template1;
# CREATE DATABASE template1 ENCODING = 'utf8' TEMPLATE = template0 LC_CTYPE =
'en_US.utf8' LC_COLLATE = en_US.utf8';
# UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template1';
# \c template1
# UPDATE pg_database SET datallowconn = FALSE WHERE datname = 'template0';
# \q
```
Now use the answser file for configure the spacewalk installation:    

```
# spacewalk-setup --disconnected --answer-file=/root/Code/spacewalker/answer.txt 
```
Verify the installation, first visit `https://Your_IP`, to setup the username/password.    

Create the channel, 

```
# /usr/bin/spacewalk-common-channels -v -u Username -p Password \ 
-a x86_64 -k unlimited  'centos7*'
# mkdir /var/distro-trees/centos7_64 -p
# chmod 755 /var/
# chmod 755 /var/distro-trees/
# chmod 755 /var/distro-trees/centos7_64/
# cp -ar ContentOfISO /var/distro-trees/centos7_64/
#  spacecmd  -u YourUserName -p YourPass -- distribution_create -n centos7 -p \
/var/distro-trees/centos7_64/ -b centos7-x86_64 -t rhel_7
```

Now check the installed distribution under(System->Kickstart->Distributions):    

![/images/2015_08_03_15_35_04_703x499.jpg](/images/2015_08_03_15_35_04_703x499.jpg)    

Check the kickstart via create the new kickstart file, fail again, why....


### 2.2.1 Version

```
$ vim jpackage.repo
$ rpm -Uvh http://yum.spacewalkproject.org/2.2/RHEL/6/x86_64/spacewalk-repo-2.2-1.el6.noarch.rpm
$ sudo yum clean all && sudo yum makecache
<<<<<<< HEAD

=======
```


### 2.2.3 Version - Correct way
Disable the cobbler package in epel repository via:    
>>>>>>> ead3de1767a3a4a8aa719d8d91af5c1be85ea0ce

```
# vim epel.repo 
[epel]
name=Extra Packages for Enterprise Linux 7 - $basearch
baseurl=http://mirrors.aliyun.com/epel/7/$basearch
        http://mirrors.aliyuncs.com/epel/7/$basearch
#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-7&arch=$basearch
failovermethod=priority
enabled=1
gpgcheck=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
### Blacklist cobbler and cobbler-web package ###
exclude=cobbler*
```

Cause the spacewalk has its own cobbler packages in repository, by addeding epel's
cobbler into blacklist we could continue the setup.    
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trying SpaceWalk]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/29/trying-spacewalk/"/>
    <updated>2015-07-29T16:43:23+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/29/trying-spacewalk</id>
    <content type="html"><![CDATA[<h3>Server Installation &amp;&amp; Configration</h3>

<p>Server have 2-core and 3072MB, running CentOS6.6, IP address is 10.9.10.2.</p>

<p>Installation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># rpm -Uvh http://yum.spacewalkproject.org/2.3/RHEL/6/x86_64/spacewalk-repo-2.3-4.el6.noarch.rpm
</span><span class='line'># wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo
</span><span class='line'># yum update
</span><span class='line'># yum install -y spacewalk-postgresql </span></code></pre></td></tr></table></div></figure>


<p>Now add a new repository:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /etc/yum.repos.d/jpackage-generic.repo 
</span><span class='line'>[jpackage-generic]
</span><span class='line'>name=JPackage generic
</span><span class='line'>#baseurl=http://mirrors.dotsrc.org/pub/jpackage/5.0/generic/free/
</span><span class='line'>mirrorlist=http://www.jpackage.org/mirrorlist.php?dist=generic&type=free&release=5.0
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=1
</span><span class='line'>gpgkey=http://www.jpackage.org/jpackage.asc</span></code></pre></td></tr></table></div></figure>


<p>Met some problems on CentOS6.6, mainly the dependencies problem, switches to CentOS7(10.9.10.100) :</p>

<p>Install it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># rpm -Uvh http://yum.spacewalkproject.org/2.3/RHEL/7/x86_64/spacewalk-repo-2.3-4.el7.noarch.rpm</span></code></pre></td></tr></table></div></figure>


<p>Setup Database for spacewalk:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install spacewalk-setup-postgresql</span></code></pre></td></tr></table></div></figure>


<p>Install spacewalk with postgresql as its backend database:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install spacewalk-postgresql</span></code></pre></td></tr></table></div></figure>


<p>Install spacecmd for using cmd of spacewalker:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y spacecmd</span></code></pre></td></tr></table></div></figure>


<h3>Configuration</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># /usr/bin/spacewalk-setup-postgresql remove --db
</span><span class='line'>rhnschema --user rhnuser
</span><span class='line'># spacewalk-setup --disconnected                                          
</span><span class='line'>** Database: Setting up database connection for PostgreSQL backend.
</span><span class='line'>Database "rhnschema" does not exist
</span><span class='line'>** Database: Installing the database:
</span><span class='line'>** Database: This is a long process that is logged in:
</span><span class='line'>** Database:   /var/log/rhn/install_db.log
</span><span class='line'>*** Progress: ##
</span><span class='line'>** Database: Installation complete.
</span><span class='line'>** Database: Populating database.
</span><span class='line'>*** Progress: ############################
</span><span class='line'>* Configuring tomcat.
</span><span class='line'>* Setting up users and groups.
</span><span class='line'>** GPG: Initializing GPG and importing key.
</span><span class='line'>** GPG: Creating /root/.gnupg directory
</span><span class='line'>You must enter an email address.
</span><span class='line'>Admin Email Address? xxxxxx@gmail.com
</span><span class='line'>* Performing initial configuration.
</span><span class='line'>* Activating Spacewalk.
</span><span class='line'>** Loading Spacewalk Certificate.
</span><span class='line'>** Verifying certificate locally.
</span><span class='line'>** Activating Spacewalk.
</span><span class='line'>* Configuring apache SSL virtual host.
</span><span class='line'>Should setup configure apache's default ssl server for you (saves original ssl.conf)
</span><span class='line'>[Y]? y
</span><span class='line'>** /etc/httpd/conf.d/ssl.conf has been backed up to ssl.conf-swsave
</span><span class='line'>* Configuring jabberd.
</span><span class='line'>* Creating SSL certificates.
</span><span class='line'>CA certificate password? 
</span><span class='line'>Re-enter CA certificate password? 
</span><span class='line'>Organization? Lxxzxxx University
</span><span class='line'>Organization Unit [SpaceWalker]? XXU
</span><span class='line'>Email Address [xxxxx@gmail.com]? XXXXX@gmail.com
</span><span class='line'>City? LxxZxx
</span><span class='line'>State? xxxx
</span><span class='line'>Country code (Examples: "US", "JP", "IN", or type "?" to see a list)? CN
</span><span class='line'>** SSL: Generating CA certificate.
</span><span class='line'>** SSL: Deploying CA certificate.
</span><span class='line'>** SSL: Generating server certificate.
</span><span class='line'>** SSL: Storing SSL certificates.
</span><span class='line'>* Deploying configuration files.
</span><span class='line'>* Update configuration in database.
</span><span class='line'>* Setting up Cobbler..
</span><span class='line'>Cobbler requires tftp and xinetd services be turned on for PXE provisioning
</span><span class='line'>functionality. Enable these services [Y]? Y
</span><span class='line'>* Restarting services.
</span><span class='line'>Installation complete.
</span><span class='line'>Visit https://SpaceWalker to create the Spacewalk administrator account.</span></code></pre></td></tr></table></div></figure>


<p>Open the iptables rules:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># iptables -A INPUT -p tcp -m multiport --dport 22,443,5222,69,5432 -j ACCEPT </span></code></pre></td></tr></table></div></figure>


<p>For better use the spacewalk&rsquo;s utilities, install the following packages:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y spacewalk-utils</span></code></pre></td></tr></table></div></figure>


<p>With this package, you could use <code>spacewalk-common-channels</code> and other commands.</p>

<h3>Setup Repository</h3>

<p>Add a channel of CentOS7:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@SpaceWalker ~]# /usr/bin/spacewalk-common-channels -v -u YourUserName -p \
</span><span class='line'>YourPassword -a x86_64 -k unlimited 'centos7*'
</span><span class='line'>Connecting to http://localhost/rpc/api
</span><span class='line'>Base channel 'CentOS 7 (x86_64)' - creating...
</span><span class='line'>* Activation key 'centos7-x86_64' - creating...
</span><span class='line'>* Child channel 'CentOS 7 Addons (x86_64)' - creating...
</span><span class='line'>** Activation key '1-centos7-x86_64' - adding child channel...
</span><span class='line'>* Child channel 'CentOS 7 Plus (x86_64)' - creating...
</span><span class='line'>** Activation key '1-centos7-x86_64' - adding child channel...
</span><span class='line'>* Child channel 'CentOS 7 Contrib (x86_64)' - creating...
</span><span class='line'>** Activation key '1-centos7-x86_64' - adding child channel...
</span><span class='line'>* Child channel 'CentOS 7 Extras (x86_64)' - creating...
</span><span class='line'>** Activation key '1-centos7-x86_64' - adding child channel...
</span><span class='line'>* Child channel 'CentOS 7 FastTrack (x86_64)' - creating...
</span><span class='line'>** Activation key '1-centos7-x86_64' - adding child channel...
</span><span class='line'>* Child channel 'CentOS 7 Updates (x86_64)' - creating...
</span><span class='line'>** Activation key '1-centos7-x86_64' - adding child channel...</span></code></pre></td></tr></table></div></figure>


<p>Now in the SpaceWalk Backend you will see:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_30_15_22_27_807x526.jpg" alt="/images/2015_07_30_15_22_27_807x526.jpg" /></p>

<p>Import ISO as the repository:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkdir /var/distro-trees/centos7_64 -p
</span><span class='line'># chmod 755 /var/
</span><span class='line'># chmod 755 /var/distro-trees/
</span><span class='line'># chmod 755 /var/distro-trees/centos7_64/
</span><span class='line'># mount -t nfs 192.168.0.79:/home/juju /mnt
</span><span class='line'>#  mount -t iso9660 -o loop /mnt/iso/CentOS-7-x86_64-Everything-1503-01.iso \ 
</span><span class='line'>/var/distro-trees/centos7_64/
</span><span class='line'># wget https://127.0.0.1/pub/RHN-ORG-TRUSTED-SSL-CERT -O \
</span><span class='line'>/usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT --no-check-certificate 
</span><span class='line'># /usr/bin/rhnpush -v --channel=centos7-x86_64 --server=https://localhost/APP
</span><span class='line'>--dir="/var/distro-trees/centos7_64/Packages"
</span><span class='line'>Connecting to https://localhost/APP
</span><span class='line'>Username: xxxxxx
</span><span class='line'>Password: </span></code></pre></td></tr></table></div></figure>


<p>The import process will cost pretty long times.</p>

<h3>Cobbler Configuration</h3>

<p>Via <code>cobbler check</code> and fix some errors, notice in CentOS7, the rsyncd is managed via
systemd, so we just enable the rsyncd via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># systemctl enable rsyncd.service
</span><span class='line'># systemctl start rsyncd.service</span></code></pre></td></tr></table></div></figure>


<p>debmirror  missing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># wget http://archive.ubuntu.com/ubuntu/pool/universe/d/debmirror/debmirror_2.10ubuntu1.tar.gz
</span><span class='line'># tar -xzvf debmirror_2.10ubuntu1.tar.gz
</span><span class='line'># ...
</span><span class='line'># cd debmirror-2.10ubuntu1
</span><span class='line'># make
</span><span class='line'># cp debmirror /usr/bin/
</span><span class='line'># cp debmirror.1 /usr/share/man/man1/
</span><span class='line'># yum install -y cpan
</span><span class='line'># cpan install Net::INET6Glue </span></code></pre></td></tr></table></div></figure>


<p>rsync won&rsquo;t be a problem.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mount -t iso9660 -o loop /media/material/iso/CentOS-7-x86_64-Everything-1503.iso  /mnt1
</span><span class='line'># cp -ar /mnt1/*  /var/distro-trees/centos7_64</span></code></pre></td></tr></table></div></figure>


<p>
Now create the distribution:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># spacecmd  -u YourUserName -p YourPassword -- distribution_create -n centos7 -p /var/distro-trees/centos7_64/ -b centos7-x86_64 -t rhel_6</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y spacewalk-postgresql spacewalk-setup-postgresql spacecmd spacewalk-utils firefox
</span><span class='line'>[root@localhost ~]# cat /etc/yum.repos.d/SpaceWalk22.repo 
</span><span class='line'>[SpaceWalk22]
</span><span class='line'>name=SpaceWalk22
</span><span class='line'>baseurl=http://192.168.1.11/SpaceWalk22
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0</span></code></pre></td></tr></table></div></figure>


<h3>Use Answer File</h3>

<p>Define the answer file and deploy using answer.txt:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /root/Code/spacewalker/answer.txt
</span><span class='line'>admin-email = root@localhost
</span><span class='line'>ssl-set-org = Spacewalk Org
</span><span class='line'>ssl-set-org-unit = spacewalk
</span><span class='line'>ssl-set-city = My City
</span><span class='line'>ssl-set-state = My State
</span><span class='line'>ssl-set-country = US
</span><span class='line'>ssl-password = spacewalk
</span><span class='line'>ssl-set-email = root@localhost
</span><span class='line'>ssl-config-sslvhost = Y
</span><span class='line'>db-backend=postgresql
</span><span class='line'>db-name=spaceschema
</span><span class='line'>db-user=spacewalk
</span><span class='line'>db-password=spacewalk
</span><span class='line'>db-host=localhost
</span><span class='line'>db-port=5432
</span><span class='line'>enable-tftp=N</span></code></pre></td></tr></table></div></figure>


<p>Reconfigure the LC:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo su postgres
</span><span class='line'>$ psql
</span><span class='line'># 
</span><span class='line'># UPDATE pg_database SET datallowconn = TRUE WHERE datname = 'template0';
</span><span class='line'># \c template0
</span><span class='line'># UPDATE pg_database SET datistemplate = FALSE WHERE datname = 'template1';
</span><span class='line'># drop database template1;
</span><span class='line'># CREATE DATABASE template1 ENCODING = 'utf8' TEMPLATE = template0 LC_CTYPE =
</span><span class='line'>'en_US.utf8' LC_COLLATE = 'en_US.utf8';
</span><span class='line'># UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template1';
</span><span class='line'># \c template1
</span><span class='line'># UPDATE pg_database SET datallowconn = FALSE WHERE datname = 'template0';
</span><span class='line'># \q</span></code></pre></td></tr></table></div></figure>


<p>Now use the answser file for configure the spacewalk installation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># spacewalk-setup --disconnected --answer-file=/root/Code/spacewalker/answer.txt </span></code></pre></td></tr></table></div></figure>


<p>Verify the installation, first visit <code>https://Your_IP</code>, to setup the username/password.</p>

<p>Create the channel,</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># /usr/bin/spacewalk-common-channels -v -u Username -p Password \ 
</span><span class='line'>-a x86_64 -k unlimited  'centos7*'
</span><span class='line'># mkdir /var/distro-trees/centos7_64 -p
</span><span class='line'># chmod 755 /var/
</span><span class='line'># chmod 755 /var/distro-trees/
</span><span class='line'># chmod 755 /var/distro-trees/centos7_64/
</span><span class='line'># cp -ar ContentOfISO /var/distro-trees/centos7_64/
</span><span class='line'>#  spacecmd  -u YourUserName -p YourPass -- distribution_create -n centos7 -p \
</span><span class='line'>/var/distro-trees/centos7_64/ -b centos7-x86_64 -t rhel_7</span></code></pre></td></tr></table></div></figure>


<p>Now check the installed distribution under(System->Kickstart->Distributions):</p>

<p><img src="http://purplepalmdash.github.io/images/2015_08_03_15_35_04_703x499.jpg" alt="/images/2015_08_03_15_35_04_703x499.jpg" /></p>

<p>Check the kickstart via create the new kickstart file, fail again, why&hellip;.</p>

<h3>2.2.1 Version</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim jpackage.repo
</span><span class='line'>$ rpm -Uvh http://yum.spacewalkproject.org/2.2/RHEL/6/x86_64/spacewalk-repo-2.2-1.el6.noarch.rpm
</span><span class='line'>$ sudo yum clean all && sudo yum makecache</span></code></pre></td></tr></table></div></figure>


<h3>2.2.3 Version - Correct way</h3>

<p>Disable the cobbler package in epel repository via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim epel.repo 
</span><span class='line'>[epel]
</span><span class='line'>name=Extra Packages for Enterprise Linux 7 - $basearch
</span><span class='line'>baseurl=http://mirrors.aliyun.com/epel/7/$basearch
</span><span class='line'>        http://mirrors.aliyuncs.com/epel/7/$basearch
</span><span class='line'>#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-7&arch=$basearch
</span><span class='line'>failovermethod=priority
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0
</span><span class='line'>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
</span><span class='line'>### Blacklist cobbler and cobbler-web package ###
</span><span class='line'>exclude=cobbler*</span></code></pre></td></tr></table></div></figure>


<p>Cause the spacewalk has its own cobbler packages in repository, by addeding epel&rsquo;s
cobbler into blacklist we could continue the setup.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WorkTips on LandScape]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/28/worktips-on-landscape/"/>
    <updated>2015-07-28T16:10:49+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/28/worktips-on-landscape</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<p>Landscape is now in PPA repository, add it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install software-properties-common
</span><span class='line'>$ sudo add-apt-repository ppa:landscape/15.01
</span><span class='line'>$ sudo apt-get update
</span><span class='line'>$ sudo apt-get install landscape-server-quickstart </span></code></pre></td></tr></table></div></figure>


<p>During the installation will ask you the configuration of postfix, specify local.</p>

<h3>Configuration</h3>

<p>First time you login into the LandScape Root machine, you have to setup your email
address and your password.     <br/>
Then you could visit <code>https://YourIPAddress</code> for the configuration page.</p>

<p>Add the node into the Landscape Root Node.</p>

<p>In to-be-added node, copy the root node&rsquo;s <code>/etc/ssl/certs/landscape_server_ca.crt</code> to
<code>/etc/landscape</code>, and modify the following configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/landscape/client.conf
</span><span class='line'>ssl_public_key = /etc/landscape/landscape_server_ca.crt</span></code></pre></td></tr></table></div></figure>


<p>Now register the node into the Root Node.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install landscape-client
</span><span class='line'>$ sudo landscape-config --computer-title "LSNode0" --account-name standalone \
</span><span class='line'>--url https://packer-ubuntu-1404-server/message-system --ping-url \
</span><span class='line'>http://packer-ubuntu-1404-server/ping</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_29_11_27_27_582x380.jpg" alt="/images/2015_07_29_11_27_27_582x380.jpg" /></p>

<p>The following steps is to use or configurating the landscape based cluster
administration.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on Packer]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/27/tips-on-packer/"/>
    <updated>2015-07-27T12:18:46+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/27/tips-on-packer</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<p>Install Packer via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget https://dl.bintray.com/mitchellh/packer/packer_0.8.2_linux_amd64.zip
</span><span class='line'>$ unzip packer_0.8.2_linux_amd64.zip
</span><span class='line'>$ mv packer* ~/bin
</span><span class='line'>$ export PATH=~/bin:$PATH</span></code></pre></td></tr></table></div></figure>


<h3>KVM Based Image Build</h3>

<p>Fetch the kickstart configuration file.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir ~/Code/packer
</span><span class='line'>$ wget https://gist.githubusercontent.com/mitchellh/7328271/raw/9035b8e26d001f14a2a960d3cec65eceb0e716ea/centos6-ks.cfg
</span><span class='line'># vim centos6-ks.cfg
</span><span class='line'>  ### Replace your own repository URL</span></code></pre></td></tr></table></div></figure>


<p>Create the json definition file for the packer build:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$  packer validate first.json
</span><span class='line'>Template validated successfully.
</span><span class='line'>$ cat first.json
</span><span class='line'>{
</span><span class='line'>  "builders":
</span><span class='line'>  [
</span><span class='line'>    {
</span><span class='line'>      "type": "qemu",
</span><span class='line'>      "iso_url": "/media/opensuse/dash/iso/CentOS-6.6-x86_64-bin-DVD1.iso",
</span><span class='line'>      "iso_checksum": "7b1fb1a11499b31271ded79da6af8584",
</span><span class='line'>      "iso_checksum_type": "md5",
</span><span class='line'>      "output_directory": "output_centos_tdhtest",
</span><span class='line'>      "ssh_wait_timeout": "30s",
</span><span class='line'>      "shutdown_command": "shutdown -P now",
</span><span class='line'>      "disk_size": 5000,
</span><span class='line'>      "format": "qcow2",
</span><span class='line'>      "headless": false,
</span><span class='line'>      "accelerator": "kvm",
</span><span class='line'>      "http_directory": "httpdir",
</span><span class='line'>      "http_port_min": 10082,
</span><span class='line'>      "http_port_max": 10089,
</span><span class='line'>      "ssh_host_port_min": 2222,
</span><span class='line'>      "ssh_host_port_max": 2229,
</span><span class='line'>      "ssh_username": "root",
</span><span class='line'>      "ssh_password": "YourPassword",
</span><span class='line'>      "ssh_port": 22,
</span><span class='line'>      "ssh_wait_timeout": "90m",
</span><span class='line'>      "vm_name": "tdhtest",
</span><span class='line'>      "net_device": "virtio-net",
</span><span class='line'>      "disk_interface": "virtio",
</span><span class='line'>      "boot_wait": "5s",
</span><span class='line'>      "boot_command":
</span><span class='line'>      [
</span><span class='line'>        "&lt;tab&gt; text ks=http://192.168.1.79/centos6-cdrom.cfg&lt;enter&gt;&lt;wait&gt;"
</span><span class='line'>      ]
</span><span class='line'>    }
</span><span class='line'>  ]
</span><span class='line'>}
</span><span class='line'>$  packer validate first.json
</span><span class='line'>Template validated successfully.</span></code></pre></td></tr></table></div></figure>


<p>Now start build via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>packer build first.json</span></code></pre></td></tr></table></div></figure>


<h3>KickStart File</h3>

<p>An Template:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root:/var/www/html]# cat centos6-cdrom.cfg
</span><span class='line'>#platform=x86, AMD64, or Intel EM64T
</span><span class='line'>#version=DEVEL
</span><span class='line'># Firewall configuration
</span><span class='line'>firewall --enabled --ssh --service=ssh
</span><span class='line'># Install OS instead of upgrade
</span><span class='line'>install
</span><span class='line'># Use CDROM installation media
</span><span class='line'>cdrom
</span><span class='line'>
</span><span class='line'>rootpw  YourPassword
</span><span class='line'>authconfig --enableshadow --passalgo=sha512
</span><span class='line'>
</span><span class='line'># System keyboard
</span><span class='line'>keyboard uk
</span><span class='line'># System language
</span><span class='line'>lang en_GB
</span><span class='line'># SELinux configuration
</span><span class='line'>selinux --enforcing
</span><span class='line'># Do not configure the X Window System
</span><span class='line'>skipx
</span><span class='line'># Installation logging level
</span><span class='line'>logging --level=info
</span><span class='line'>
</span><span class='line'># Reboot after installation
</span><span class='line'>reboot
</span><span class='line'>
</span><span class='line'># System timezone
</span><span class='line'>timezone --isUtc Asia/Shanghai
</span><span class='line'># Network information
</span><span class='line'>network  --bootproto=dhcp --device=eth0 --onboot=on
</span><span class='line'># System bootloader configuration
</span><span class='line'>bootloader --append="crashkernel=auto rhgb quiet" --location=mbr --driveorder="vda"
</span><span class='line'>
</span><span class='line'># Partition clearing information
</span><span class='line'>zerombr
</span><span class='line'>clearpart --all  --drives=vda
</span><span class='line'>
</span><span class='line'># Disk partitioning information
</span><span class='line'>part /boot --fstype="ext4" --size=500
</span><span class='line'>part pv.008002 --grow --size=1
</span><span class='line'>volgroup vg_centos --pesize=4096 pv.008002
</span><span class='line'>logvol / --fstype=ext4 --name=lv_root --vgname=vg_centos --grow --size=1024
</span><span class='line'>--maxsize=51200
</span><span class='line'>logvol swap --name=lv_swap --vgname=vg_centos --grow --size=1024 --maxsize=1024
</span><span class='line'>
</span><span class='line'>%packages --nobase
</span><span class='line'>@core
</span><span class='line'>at
</span><span class='line'>acpid
</span><span class='line'>cronie-noanacron
</span><span class='line'>crontabs
</span><span class='line'>logrotate
</span><span class='line'>mailx
</span><span class='line'>mlocate
</span><span class='line'>openssh-clients
</span><span class='line'>openssh-server
</span><span class='line'>rsync
</span><span class='line'>sendmail
</span><span class='line'>tmpwatch
</span><span class='line'>vixie-cron
</span><span class='line'>which
</span><span class='line'>wget
</span><span class='line'>yum
</span><span class='line'>-biosdevname
</span><span class='line'>-postfix
</span><span class='line'>-prelink
</span><span class='line'>%end</span></code></pre></td></tr></table></div></figure>


<h3>Build And Output</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ packer  build second.json
</span><span class='line'>qemu output will be in this color.
</span><span class='line'>
</span><span class='line'>==&gt; qemu: Downloading or copying ISO
</span><span class='line'>    qemu: Downloading or copying:
</span><span class='line'>file:///media/opensuse/dash/iso/CentOS-6.6-x86_64-bin-DVD1.iso
</span><span class='line'>==&gt; qemu: Creating hard drive...
</span><span class='line'>==&gt; qemu: Starting HTTP server on port 10088
</span><span class='line'>==&gt; qemu: Found port for SSH: 2224.
</span><span class='line'>==&gt; qemu: Looking for available port between 5900 and 6000
</span><span class='line'>==&gt; qemu: Found available VNC port: 5947
</span><span class='line'>==&gt; qemu: Starting VM, booting from CD-ROM
</span><span class='line'>==&gt; qemu: Waiting 5s for boot...
</span><span class='line'>==&gt; qemu: Connecting to VM via VNC
</span><span class='line'>==&gt; qemu: Typing the boot command over VNC...
</span><span class='line'>==&gt; qemu: Waiting for SSH to become available...
</span><span class='line'>==&gt; qemu: Connected to SSH!
</span><span class='line'>==&gt; qemu: Gracefully halting virtual machine...
</span><span class='line'>Build 'qemu' finished.
</span><span class='line'>
</span><span class='line'>==&gt; Builds finished. The artifacts of successful builds are:
</span><span class='line'>--&gt; qemu: VM files in directory: output_centos_tdhtest
</span><span class='line'>$ ls
</span><span class='line'>output_centos_tdhtest  packer_cache  second.json
</span><span class='line'>$ ls -l output_centos_tdhtest 
</span><span class='line'>total 1411208
</span><span class='line'>-rw-r--r-- 1 dash dash 1445134336 Jul 27 16:11 tdhtest</span></code></pre></td></tr></table></div></figure>


<p>Next time we will investigate ubuntu installation.</p>

<h3>Ubuntu</h3>

<p>Ubuntu64.json:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>    "variables": {
</span><span class='line'>        "ssh_name": "kappataumu",
</span><span class='line'>        "ssh_pass": "kappataumu",
</span><span class='line'>        "hostname": "packer-test"
</span><span class='line'>    },
</span><span class='line'>
</span><span class='line'>    "builders": [{
</span><span class='line'>        "type": "virtualbox-iso",
</span><span class='line'>        "guest_os_type": "Ubuntu_64",
</span><span class='line'>
</span><span class='line'>        "vboxmanage": [
</span><span class='line'>            ["modifyvm", "", "--vram", "32"]
</span><span class='line'>        ],
</span><span class='line'>
</span><span class='line'>        "disk_size" : 10000,
</span><span class='line'>
</span><span class='line'>        "iso_url": "http://192.168.0.79/ubuntu-12.04.3-server-amd64.iso",
</span><span class='line'>        "iso_checksum": "2cbe868812a871242cdcdd8f2fd6feb9",
</span><span class='line'>        "iso_checksum_type": "md5",
</span><span class='line'>
</span><span class='line'>        "http_directory" : "ubuntu_64",
</span><span class='line'>        "http_port_min" : 9001,
</span><span class='line'>        "http_port_max" : 9001,
</span><span class='line'>
</span><span class='line'>        "ssh_username": "",
</span><span class='line'>        "ssh_password": "",
</span><span class='line'>        "ssh_wait_timeout": "20m",
</span><span class='line'>
</span><span class='line'>        "shutdown_command": "echo  | sudo -S shutdown -P now",
</span><span class='line'>
</span><span class='line'>        "boot_command" : [
</span><span class='line'>            "&lt;esc&gt;&lt;esc&gt;&lt;enter&gt;&lt;wait&gt;",
</span><span class='line'>            "/install/vmlinuz noapic ",
</span><span class='line'>            "preseed/url=http://192.168.0.79/ubuntu1204preseed.cfg ",
</span><span class='line'>            "debian-installer=en_US auto locale=en_US kbd-chooser/method=us ",
</span><span class='line'>            "hostname= ",
</span><span class='line'>            "fb=false debconf/frontend=noninteractive ",
</span><span class='line'>            "keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA ",
</span><span class='line'>            "keyboard-configuration/variant=USA console-setup/ask_detect=false ",
</span><span class='line'>            "initrd=/install/initrd.gz -- &lt;enter&gt;"
</span><span class='line'>        ]
</span><span class='line'>    }]
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>KVM Based:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>    "variables": {
</span><span class='line'>        "user": "adminubuntu",
</span><span class='line'>        "password": "adminubuntu"
</span><span class='line'>    },
</span><span class='line'>
</span><span class='line'>    "builders":
</span><span class='line'>    [
</span><span class='line'>        {
</span><span class='line'>            "name": "ubuntu-1404-server",
</span><span class='line'>
</span><span class='line'>            "type": "qemu",
</span><span class='line'>            "format": "qcow2",
</span><span class='line'>            "accelerator": "kvm",
</span><span class='line'>            "disk_size": 100000,
</span><span class='line'>
</span><span class='line'>            "iso_url": "http://192.168.0.79/ubuntu-14.04-server-amd64.iso",
</span><span class='line'>            "iso_checksum": "01545fa976c8367b4f0d59169ac4866c",
</span><span class='line'>            "iso_checksum_type": "md5",
</span><span class='line'>
</span><span class='line'>            "http_directory": "http",
</span><span class='line'>
</span><span class='line'>            "ssh_username": "",
</span><span class='line'>            "ssh_password": "",
</span><span class='line'>        "ssh_wait_timeout": "90m",
</span><span class='line'>            "shutdown_command": "echo ''|sudo -S shutdown -P now",
</span><span class='line'>
</span><span class='line'>            "boot_wait": "2s",
</span><span class='line'>            "boot_command": [
</span><span class='line'>                "&lt;esc&gt;&lt;esc&gt;&lt;enter&gt;&lt;wait&gt;",
</span><span class='line'>                "/install/vmlinuz url=http://192.168.0.79/TrustyPreseed.cfg ",
</span><span class='line'>                "debian-installer=en_US auto locale=en_US kbd-chooser/method=us ",
</span><span class='line'>                "hostname= ",
</span><span class='line'>
</span><span class='line'>                "keyboard-configuration/modelcode=SKIP ",
</span><span class='line'>                "keyboard-configuration/layout=USA ",
</span><span class='line'>                "keyboard-configuration/variant=USA ",
</span><span class='line'>
</span><span class='line'>                "passwd/user-fullname= ",
</span><span class='line'>                "passwd/user-password-again= ",
</span><span class='line'>                "passwd/user-password= ",
</span><span class='line'>                "passwd/username= ",
</span><span class='line'>
</span><span class='line'>                "initrd=/install/initrd.gz -- &lt;enter&gt;"
</span><span class='line'>            ]
</span><span class='line'>        }
</span><span class='line'>    ]
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>The Preseed File:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Some inspiration:
</span><span class='line'># *
</span><span class='line'>https://github.com/chrisroberts/vagrant-boxes/blob/master/definitions/precise-64/preseed.cfg
</span><span class='line'># * https://github.com/cal/vagrant-ubuntu-precise-64/blob/master/preseed.cfg
</span><span class='line'>
</span><span class='line'># English plx
</span><span class='line'>d-i debian-installer/language string en
</span><span class='line'>d-i debian-installer/locale string en_US.UTF-8
</span><span class='line'>d-i localechooser/preferred-locale string en_US.UTF-8
</span><span class='line'>d-i localechooser/supported-locales en_US.UTF-8
</span><span class='line'>
</span><span class='line'># Including keyboards
</span><span class='line'>d-i console-setup/ask_detect boolean false
</span><span class='line'>d-i keyboard-configuration/layout select USA
</span><span class='line'>d-i keyboard-configuration/variant select USA
</span><span class='line'>d-i keyboard-configuration/modelcode string pc105
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># Just roll with it
</span><span class='line'>d-i netcfg/get_hostname string this-host
</span><span class='line'>d-i netcfg/get_domain string this-host
</span><span class='line'>
</span><span class='line'>d-i time/zone string UTC
</span><span class='line'>d-i clock-setup/utc-auto boolean true
</span><span class='line'>d-i clock-setup/utc boolean true
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># Choices: Dialog, Readline, Gnome, Kde, Editor, Noninteractive
</span><span class='line'>d-i debconf debconf/frontend select Noninteractive
</span><span class='line'>
</span><span class='line'>d-i pkgsel/install-language-support boolean false
</span><span class='line'>tasksel tasksel/first multiselect standard, ubuntu-server
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># Stuck between a rock and a HDD place
</span><span class='line'>d-i partman-auto/method string lvm
</span><span class='line'>d-i partman-lvm/confirm boolean true
</span><span class='line'>d-i partman-lvm/device_remove_lvm boolean true
</span><span class='line'>d-i partman-auto/choose_recipe select atomic
</span><span class='line'>
</span><span class='line'>d-i partman/confirm_write_new_label boolean true
</span><span class='line'>d-i partman/confirm_nooverwrite boolean true
</span><span class='line'>d-i partman/choose_partition select finish
</span><span class='line'>d-i partman/confirm boolean true
</span><span class='line'>
</span><span class='line'># Write the changes to disks and configure LVM?
</span><span class='line'>d-i partman-lvm/confirm boolean true
</span><span class='line'>d-i partman-lvm/confirm_nooverwrite boolean true
</span><span class='line'>d-i partman-auto-lvm/guided_size string max
</span><span class='line'>
</span><span class='line'># No proxy, plx
</span><span class='line'>d-i mirror/http/proxy string
</span><span class='line'>
</span><span class='line'># Default user, change
</span><span class='line'>d-i passwd/user-fullname string adminubuntu
</span><span class='line'>d-i passwd/username string adminubuntu
</span><span class='line'>d-i passwd/user-password password adminubuntu
</span><span class='line'>d-i passwd/user-password-again password adminubuntu
</span><span class='line'>d-i user-setup/encrypt-home boolean false
</span><span class='line'>d-i user-setup/allow-password-weak boolean true
</span><span class='line'>
</span><span class='line'># No language support packages.
</span><span class='line'>d-i pkgsel/install-language-support boolean false
</span><span class='line'>
</span><span class='line'># Individual additional packages to install
</span><span class='line'>d-i pkgsel/include string build-essential ssh
</span><span class='line'>
</span><span class='line'>#For the update
</span><span class='line'>d-i pkgsel/update-policy select none
</span><span class='line'>
</span><span class='line'># Whether to upgrade packages after debootstrap.
</span><span class='line'># Allowed values: none, safe-upgrade, full-upgrade
</span><span class='line'>d-i pkgsel/upgrade select safe-upgrade
</span><span class='line'>
</span><span class='line'># Go grub, go!
</span><span class='line'>d-i grub-installer/only_debian boolean true
</span><span class='line'>
</span><span class='line'>d-i finish-install/reboot_in_progress note</span></code></pre></td></tr></table></div></figure>


<h3>Use Local Repository</h3>

<p>Add following in the kickstart file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Setup the installation source
</span><span class='line'>d-i mirror/country string manual
</span><span class='line'>d-i mirror/http/hostname string 192.168.0.79
</span><span class='line'>#d-i mirror/http/directory string $install_source_directory
</span><span class='line'># /var/www/cobbler/ks_mirror/Ubuntu-14.04-x86_64/ubuntu
</span><span class='line'>d-i mirror/http/directory string /ks_mirror/Ubuntu-14.04-x86_64/ubuntu
</span><span class='line'>d-i mirror/http/proxy string 
</span><span class='line'>d-i apt-setup/security_host string 192.168.0.79
</span><span class='line'>d-i apt-setup/security_path string /ks_mirror/Ubuntu-14.04-x86_64/ubuntu
</span><span class='line'>d-i apt-setup/services-select multiselect none
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chromebook Kernel Issue]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/25/chromebook-kernel-issue/"/>
    <updated>2015-07-25T11:34:48+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/25/chromebook-kernel-issue</id>
    <content type="html"><![CDATA[<h3>Issues</h3>

<p>Chromebook could not support: <br/>
* bluetooth LAN
* NFS  <br/>
* ETC</p>

<p>So I re-compile the Chromebook kernel for soving these issue.</p>

<h3>Kernel Version</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># uname -r
</span><span class='line'>3.10.18</span></code></pre></td></tr></table></div></figure>


<h3>Get The SourceCode</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># git clone --branch v3.10.18 https://chromium.googlesource.com/chromiumos/third_party/kernel</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Libvirtd Trouble-Shooting on CentOS7.1]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/22/libvirtd-trouble-shooting-on-centos7-dot-1/"/>
    <updated>2015-07-22T09:54:59+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/22/libvirtd-trouble-shooting-on-centos7-dot-1</id>
    <content type="html"><![CDATA[<h3>Problem Description</h3>

<p>When upgraded from CentOS6.6 to CentOS7, the libvirtd will encounter following error:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_22_09_54_37_355x184.jpg" alt="/images/2015_07_22_09_54_37_355x184.jpg" /></p>

<p>Simply remove:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># virsh edit nodename
</span><span class='line'>-     &lt;feature policy='require' name='invtsc'/&gt;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On Migration of KVM]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/19/on-migration-of-kvm/"/>
    <updated>2015-07-19T13:31:03+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/19/on-migration-of-kvm</id>
    <content type="html"><![CDATA[<h3>Migration</h3>

<p>First create the qemu based vm:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pwd
</span><span class='line'>/media/arch/home/juju/img/migration
</span><span class='line'>$ qemu-img create -f qcow2 ubuntu1504.qcow2 100G
</span><span class='line'>$ sudo qemu-system-x86_64 -enable-kvm -m 512 -smp 4 -name ubuntu1504 -monitor stdio -boot c -drive file=/media/arch/home/juju/img/migration/ubuntu1504.qcow2,if=none,id=drive-virtio-disk0,boot=on -device virtio-blk-pci,bus=pci.0,addr=0x4,drive=drive-virtio-disk0,id=virtio-disk0 -drive file=/media/arch/home/dash/iso/ubuntu-15.04-server-amd64.iso,if=none,media=cdrom,id=drive-ide0-1-0 -device ide-drive,bus=ide.1,unit=0,drive=drive-ide0-1-0,id=ide0-1-0 -device virtio-net-pci,vlan=0,id=net0,mac=52:54:00:13:08:96 -net tap -vnc 127.0.0.1:3</span></code></pre></td></tr></table></div></figure>


<p>After Installation, startup the vm via(didn&rsquo;t attach the file):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo qemu-system-x86_64 -enable-kvm -m 512 -smp 4 -name ubuntu1504 -monitor stdio -boot c -drive file=/media/arch/home/juju/img/migration/ubuntu1504.qcow2,if=none,id=drive-virtio-disk0,boot=on -device virtio-blk-pci,bus=pci.0,addr=0x4,drive=drive-virtio-disk0,id=virtio-disk0 -drive if=none,media=cdrom,id=drive-ide0-1-0 -device ide-drive,bus=ide.1,unit=0,drive=drive-ide0-1-0,id=ide0-1-0 -device virtio-net-pci,vlan=0,id=net0,mac=52:54:00:13:08:96 -net tap -vnc 127.0.0.1:3</span></code></pre></td></tr></table></div></figure>


<p>Use <code>top -d 1</code> for every second refreshed.</p>

<p>The same environment is set as the src machine.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ qemu-img create -f qcow2 dest.img 20G
</span><span class='line'>$ qemu-system-x86_64 -enable-kvm -m 512 -smp 4 -name ubuntu1504 -monitor stdio -boot c -drive file=/root/Code/dest.img,if=none,id=drive-virtio-disk0,boot=on -device virtio-blk-pci,bus=pci.0,addr=0x4,drive=drive-virtio-disk0,id=virtio-disk0 -drive if=none,media=cdrom,id=drive-ide0-1-0 -device ide-drive,bus=ide.1,unit=0,drive=drive-ide0-1-0,id=ide0-1-0 -device virtio-net-pci,vlan=0,id=net0,mac=52:54:00:13:08:96 -net tap -vnc 127.0.0.1:8
</span><span class='line'>(qemu) info status
</span><span class='line'>VM status: paused (inmigrate)</span></code></pre></td></tr></table></div></figure>


<p>Start migration in the src side via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(qemu) migrate -d -b tcp:192.168.1.18:8888
</span><span class='line'>(qemu) info migrate</span></code></pre></td></tr></table></div></figure>


<p>In destination machine, you can see the status of the migration.</p>

<p>After migration, the machine stays its top output to the terminal.</p>

<h3>Trouble Shooting On Newly Installed Arch</h3>

<h4>Bug1 virtual network start fail</h4>

<p>libvirt via virt-manager virtual network start failed.   <br/>
Change:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>--- libvirt-1.2.16.orig/src/util/virfirewall.c  2015-05-23 08:56:12.000000000 -0400
</span><span class='line'>+++ libvirt-1.2.16.new/src/util/virfirewall.c   2015-06-18 10:01:51.954157612 -0400
</span><span class='line'>@@ -932,14 +932,14 @@
</span><span class='line'> 
</span><span class='line'>     virMutexLock(&ruleLock);
</span><span class='line'> 
</span><span class='line'>-    if (currentBackend == VIR_FIREWALL_BACKEND_AUTOMATIC) {
</span><span class='line'>+//    if (currentBackend == VIR_FIREWALL_BACKEND_AUTOMATIC) {
</span><span class='line'>         /* a specific backend should have been set when the firewall
</span><span class='line'>          * object was created. If not, it means none was found.
</span><span class='line'>          */
</span><span class='line'>-        virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
</span><span class='line'>-                       _("Failed to initialize a valid firewall backend"));
</span><span class='line'>-        goto cleanup;
</span><span class='line'>-    }
</span><span class='line'>+//        virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
</span><span class='line'>+//                       _("Failed to initialize a valid firewall backend"));
</span><span class='line'>+//        goto cleanup;
</span><span class='line'>+//    }
</span><span class='line'>     if (!firewall || firewall-&gt;err == ENOMEM) {
</span><span class='line'>         virReportOOMError();
</span><span class='line'>         goto cleanup;</span></code></pre></td></tr></table></div></figure>


<p>For building the libvirt, do following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># pacman -S abs base-devel
</span><span class='line'># abs 
</span><span class='line'># cp /var/abs/community/libvirt ~/Code/
</span><span class='line'># cd ~/Code/libvirt
</span><span class='line'># makepkg</span></code></pre></td></tr></table></div></figure>


<p>After makepkg, change the code as in above, tar it again, makepkg with following command <code>makepkg --skipchecksums</code>, this time it will generate a new tar.xz file. Install it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># pacman -U libvirt-1.2.17-1-x86_64.pkg.tar.xz</span></code></pre></td></tr></table></div></figure>


<h4>starting network out of memory</h4>

<p>Solve it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># pacman -S ebtables vde2
</span><span class='line'># reboot</span></code></pre></td></tr></table></div></figure>


<p>Start again and this time is OK.</p>

<h4>Bridge Configuration</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@Arch network]# pwd
</span><span class='line'>/etc/systemd/network
</span><span class='line'>[root@Arch network]# cat MyBridge.netdev 
</span><span class='line'>[NetDev]
</span><span class='line'>Name=br0
</span><span class='line'>MACAddress=52:54:00:91:e8:11
</span><span class='line'>Kind=bridge
</span><span class='line'>[root@Arch network]# cat MyBridge.network 
</span><span class='line'>[Match]
</span><span class='line'>Name=br0
</span><span class='line'>
</span><span class='line'>[Network]
</span><span class='line'>DNS=180.76.76.76,114.114.114.114
</span><span class='line'>
</span><span class='line'>[Address]
</span><span class='line'>Address=192.168.1.18/24
</span><span class='line'>
</span><span class='line'>[Route]
</span><span class='line'>Gateway=192.168.1.1
</span><span class='line'>[root@Arch network]# cat MyEth.network 
</span><span class='line'>[Match]
</span><span class='line'>Name=eth0
</span><span class='line'>
</span><span class='line'>[Network]
</span><span class='line'>Bridge=br0</span></code></pre></td></tr></table></div></figure>


<p>Now enable and start the systemd&rsquo;s networkd service via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># systemctl enable systemd-networkd.service
</span><span class='line'># reboot</span></code></pre></td></tr></table></div></figure>


<p>By this you could enable systemd on ArchLinux.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ISCSI Installed Debian Jessie]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/17/iscsi-installed-debian-jessie/"/>
    <updated>2015-07-17T14:24:20+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/17/iscsi-installed-debian-jessie</id>
    <content type="html"><![CDATA[<h3>FreeNAS Installation And Configuration</h3>

<p>Install Procedure ignored, because it&rsquo;s simple.   <br/>
Following steps are used for adding iscsi partition.</p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_17_14_25_57_558x549.jpg" alt="/images/2015_07_17_14_25_57_558x549.jpg" />  <br/>
Manually setup the volumn and now you could add your volumn into the FreeNAS System.</p>

<p>Configure iscsi:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_33_57_530x370.jpg" alt="/images/2015_07_17_14_33_57_530x370.jpg" /> <br/>
Add the name of <code>iqn.onecloud.iscsi</code>, next we add portal:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_35_12_617x403.jpg" alt="/images/2015_07_17_14_35_12_617x403.jpg" />  <br/>
Add Authorized Access Now:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_37_03_491x195.jpg" alt="/images/2015_07_17_14_37_03_491x195.jpg" />  <br/>
Add Initator:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_39_25_498x234.jpg" alt="/images/2015_07_17_14_39_25_498x234.jpg" />  <br/>
Create target:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_40_30_460x487.jpg" alt="/images/2015_07_17_14_40_30_460x487.jpg" />  <br/>
Add extent: <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_41_55_559x613.jpg" alt="/images/2015_07_17_14_41_55_559x613.jpg" /> <br/>
LUM RPMs could also be spcified:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_42_51_386x351.jpg" alt="/images/2015_07_17_14_42_51_386x351.jpg" /> <br/>
Associate Targets:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_44_09_619x310.jpg" alt="/images/2015_07_17_14_44_09_619x310.jpg" /></p>

<p>Enable the iscsi service:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_45_04_366x302.jpg" alt="/images/2015_07_17_14_45_04_366x302.jpg" /></p>

<p>Better you change the IP Address into static IP address.</p>

<h3>Install Debian Jessie Onto ISCSI Disk:</h3>

<p>On a installed Ubuntu, I choose Ubuntu14.04, do following for connecting the exising created iscsi partition:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install -y open-iscsi gdisk
</span><span class='line'>[root:~]# iscsiadm -m discovery -t sendtargets -p 10.47.58.40
</span><span class='line'>10.47.58.40:3260,-1 iqn.onecloud.iscsi:iscsidisk1</span></code></pre></td></tr></table></div></figure>


<p>
Login and listed the device :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root:~]# iscsiadm -m node -T 'iqn.onecloud.iscsi:iscsidisk1' -p 10.47.58.40 -l
</span><span class='line'>Logging in to [iface: default, target: iqn.onecloud.iscsi:iscsidisk1, portal: 10.47.58.40,3260] (multiple)
</span><span class='line'>Login to [iface: default, target: iqn.onecloud.iscsi:iscsidisk1, portal: 10.47.58.40,3260] successful.
</span><span class='line'>[root:~]# ls -l /dev/disk/by-path
</span><span class='line'>total 0
</span><span class='line'>lrwxrwxrwx 1 root root 9 Jul 17 05:39 ip-10.47.58.40:3260-iscsi-iqn.onecloud.iscsi:iscsidisk1-lun-0 -&gt; ../../sda</span></code></pre></td></tr></table></div></figure>


<p>Use gdisk for partition the /dev/sda, and creating the filesystem on them:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># gdisk -l /dev/sda
</span><span class='line'>
</span><span class='line'>Number  Start (sector)    End (sector)  Size       Code  Name
</span><span class='line'>   1            2048            8191   3.0 MiB     EF02  BIOS boot partition
</span><span class='line'>   2            8192         1056767   512.0 MiB   8200  Linux swap
</span><span class='line'>   3         1056768        40959966   19.0 GiB    8300  Linux filesystem
</span><span class='line'># mkfs.ext4 /dev/sda3
</span><span class='line'># mkswap /dev/sda2 </span></code></pre></td></tr></table></div></figure>


<p>Now install system, first mount usable systems:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkdir /mnt/chroot
</span><span class='line'># mount /dev/sda3 /mnt/chroot
</span><span class='line'># debootstrap wheezy /mnt/chroot
</span><span class='line'># debootstrap jessie /mnt/chroot http://mirrors.aliyun.com/debian/ 
</span></code></pre></td></tr></table></div></figure>


<p>chroot into the newly install jessie:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@Ubuntu-14:~# mount -t proc none /mnt/chroot/proc
</span><span class='line'>root@Ubuntu-14:~# mount -t sysfs none /mnt/chroot/sys
</span><span class='line'>root@Ubuntu-14:~# mount --bind /dev /mnt/chroot/dev
</span><span class='line'>root@Ubuntu-14:~# chroot /mnt/chroot /bin/bash</span></code></pre></td></tr></table></div></figure>


<p>Disk configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@Ubuntu-14:/# cp /proc/mounts /etc/mtab
</span><span class='line'>root@Ubuntu-14:/# sed -i '\|^/dev/sda3|,$!d' /etc/mtab
</span><span class='line'>root@Ubuntu-14:/# blkid /dev/sda2 /dev/sda3
</span><span class='line'>/dev/sda2: UUID="0c570265-543a-41ec-9edb-65bc55d677cd" TYPE="swap" PARTLABEL="Linux swap" PARTUUID="bfb7c1b1-c6cd-4302-9cb4-d6c1de43a0ad"
</span><span class='line'>/dev/sda3: UUID="c1c5f995-e3f7-48c7-b5d5-4963a77d9b7b" TYPE="ext4" PARTLABEL="Linux filesystem" PARTUUID="00ccaf63-b3b3-46c4-92ab-1933d31cbcb7"
</span><span class='line'>root@Ubuntu-14:/# echo 'UUID=c1c5f995-e3f7-48c7-b5d5-4963a77d9b7b / ext4 errors=remount-ro 0 1' &gt;&gt; /etc/fstab
</span><span class='line'>root@Ubuntu-14:/# echo 'UUID=0c570265-543a-41ec-9edb-65bc55d677cd none swap sw 0 0' &gt;&gt; /etc/fstab
</span><span class='line'>root@Ubuntu-14:/# cat /etc/fstab
</span><span class='line'># UNCONFIGURED FSTAB FOR BASE SYSTEM
</span><span class='line'>UUID=c1c5f995-e3f7-48c7-b5d5-4963a77d9b7b / ext4 errors=remount-ro 0 1
</span><span class='line'>UUID=0c570265-543a-41ec-9edb-65bc55d677cd none swap sw 0 0</span></code></pre></td></tr></table></div></figure>


<p>Install some packages, be sure to make grub2 installed to /dev/sda:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install vim less openssh-server locales
</span><span class='line'># apt-get install linux-image-amd64 grub2 initramfs-tools</span></code></pre></td></tr></table></div></figure>


<p>Configure the Grub:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install open-iscsi
</span><span class='line'># vim /etc/default/grub
</span><span class='line'>GRUB_CMDLINE_LINUX_DEFAULT=""
</span><span class='line'>GRUB_CMDLINE_LINUX=""ISCSI_INITIATOR=iqn.onecloud.iscsi.client:client ISCSI_TARGET_NAME=iqn.onecloud.iscsi:iscsidisk1 ISCSI_TARGET_IP=10.47.58.40 ISCSI_TARGET_PORT=3260 root=UUID=c1c5f995-e3f7-48c7-b5d5-4963a77d9b7b ip=10.47.58.176::10.47.58.1:255.255.255.0:client:eth0:off""
</span><span class='line'># touch /etc/iscsi/iscsi.initramfs
</span><span class='line'># echo "InitiatorName=iqn.onecloud.iscsi.client:client" &gt; /etc/iscsi/initiatorname.iscsi
</span><span class='line'># update-grub
</span><span class='line'># update-initramfs -u
</span><span class='line'># passwd
</span></code></pre></td></tr></table></div></figure>


<p>Configure the network interfaces:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@Ubuntu-14:/etc/network# cat interfaces
</span><span class='line'># interfaces(5) file used by ifup(8) and ifdown(8)
</span><span class='line'># Include files from /etc/network/interfaces.d:
</span><span class='line'>#source-directory /etc/network/interfaces.d
</span><span class='line'># The loopback network interface
</span><span class='line'>auto lo
</span><span class='line'>iface lo inet loopback
</span><span class='line'>
</span><span class='line'># The primary network interface
</span><span class='line'>auto eth0
</span><span class='line'>iface eth0 inet static
</span><span class='line'>#iface eth0 inet manual
</span><span class='line'>address 10.47.58.176
</span><span class='line'>netmask 255.255.255.0
</span><span class='line'>gateway 10.47.58.1
</span><span class='line'>dns-nameservers 114.114.114.114</span></code></pre></td></tr></table></div></figure>


<p>Now exit and umount all of the mounted partitions.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># exit
</span><span class='line'># umount /mnt/chroot/{dev,proc,sys,}
</span><span class='line'>root@Ubuntu-14:~# iscsiadm -m node -T 'iqn.onecloud.iscsi:iscsidisk1' -p 10.47.58.40 -u
</span><span class='line'># echo "InitiatorName=iqn.onecloud.iscsi.client:client" &gt; /etc/iscsi/initiatorname.iscsi
</span><span class='line'>#!ipxe
</span><span class='line'>set initiator-iqn iqn.2007-08.com.example.client:client
</span><span class='line'>sanboot iscsi:san.example.com:6:3260:0:iqn.2007-08.com.example.san:rootp</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(12)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/14/wh-worktips-12/"/>
    <updated>2015-07-14T19:09:11+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/14/wh-worktips-12</id>
    <content type="html"><![CDATA[<h3>How to quickly get all packages</h3>

<p>First deploy a new system, Then:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cd /etc/yum.repos.d/
</span><span class='line'># mv CentOS-* /root/
</span><span class='line'># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo
</span><span class='line'># wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo</span></code></pre></td></tr></table></div></figure>


<p>If you previously downloaded the 4.5 packages, then put them under one web server&rsquo;s directory,  do following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@node161 yum.repos.d]# vim cloudstack.repo 
</span><span class='line'>[cloudstack]
</span><span class='line'>name=cloudstack
</span><span class='line'>baseurl=http://10.47.58.2/4.5/
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0</span></code></pre></td></tr></table></div></figure>


<p>Now install the yum-download plugin, and begin to create local repository:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y yum-plugin-downloadonly
</span><span class='line'># mkdir ~/Code
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(11)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/13/wh-worktips-11/"/>
    <updated>2015-07-13T21:12:14+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/13/wh-worktips-11</id>
    <content type="html"><![CDATA[<h3>CentOS7 Based</h3>

<p>Following modification need to be done:  <br/>
On Deployed node:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/hosts
</span><span class='line'>10.47.58.157  node157</span></code></pre></td></tr></table></div></figure>


<p>There will be iptables issue. for you have to install following packages:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y install iptables-utils iptables-services
</span><span class='line'># reboot</span></code></pre></td></tr></table></div></figure>


<p>Now begin to install again, and it will be ok.</p>

<p>Add the client, and make sure the &ldquo;COPY CPU configuration&rdquo; is selected in the menu.  <br/>
Or, your system vm won&rsquo;t startup.</p>

<p>Why at home my output becomes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@node157 network-scripts]# cat ifcfg-cloudbr0 
</span><span class='line'>
</span><span class='line'>DEVICE=cloudbr0
</span><span class='line'>
</span><span class='line'>ONBOOT=yes
</span><span class='line'>HWADDR=52:54:00:73:86:D2
</span><span class='line'>
</span><span class='line'>TYPE=Bridge
</span><span class='line'>BOOTPROTO=dhcp
</span><span class='line'>NM_CONTROLLED=no
</span><span class='line'>[root@node157 network-scripts]# cat ifcfg-eth0 
</span><span class='line'>DEVICE=eth0
</span><span class='line'>
</span><span class='line'>ONBOOT=yes
</span><span class='line'>HWADDR=52:54:00:73:86:D2
</span><span class='line'>TYPE=Ethernet
</span><span class='line'>BOOTPROTO=dhcp
</span><span class='line'>NM_CONTROLLED=no
</span><span class='line'>BRIDGE=cloudbr0
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(10)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/12/wh-worktips-10/"/>
    <updated>2015-07-12T10:57:15+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/12/wh-worktips-10</id>
    <content type="html"><![CDATA[<p>This chapter will cover the ansible playbook for deploying CloudStack Agent.  <br/>
First you should download the packages for the deployed node.</p>

<p>In a computer which have the internet connection, do following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y yum-plugin-downloadonly
</span><span class='line'># vi /etc/yum.repos.d/cloudstack.repo
</span><span class='line'>[cloudstack]
</span><span class='line'>name=cloudstack
</span><span class='line'>baseurl=http://cloudstack.apt-get.eu/centos7/4.5/
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0
</span><span class='line'># yum install --downloadonly --downloaddir=/root/Code/ cloud-agent</span></code></pre></td></tr></table></div></figure>


<p>Then under the folder of <code>/root/Code</code> you will have all of the cloud-agent related packages, create a repo using <code>createrepo .</code>, and set the apache/nginx&rsquo;s serving directory to here.</p>

<h3>Node Testing.</h3>

<p>Write a new playbook, this playbook&rsquo;s name is <code>CloudStackAgentCentOS7.yml</code>.  Notice you also have to change the repository definition file.</p>

<p>Configuration of cloudbr0:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0 
</span><span class='line'># Generated by parse-kickstart
</span><span class='line'>DEVICE=eth0
</span><span class='line'>TYPE=Ethernet
</span><span class='line'>ONBOOT=yes
</span><span class='line'>NM_CONTROLLED=yes
</span><span class='line'>BOOTPROTO=none
</span><span class='line'>BRIDGE=cloudbr0
</span><span class='line'>IPV6INIT=no
</span><span class='line'>[root@localhost ~]# cat /etc/sysconfig/network-scripts/ifcfg-cloudbr0 
</span><span class='line'>DEVICE=cloudbr0
</span><span class='line'>TYPE=Bridge
</span><span class='line'>BOOTPROTO=dhcp
</span><span class='line'>IPV6INIT=no 
</span><span class='line'>ONBOOT=yes
</span><span class='line'>DELAY=0</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(9)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/10/wh-worktips-9/"/>
    <updated>2015-07-10T20:21:13+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/10/wh-worktips-9</id>
    <content type="html"><![CDATA[<h3>Cobbler In Non-DHCP Server Networking</h3>

<p>Sometimes you want to deploy system with cobbler server,  in some restricted network which dhcp service is not allowed(considering broadcasting storm, security, etc.) Following are the steps of how-to:  <br/>
Change Cobbler server setting:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/cobbler/settings
</span><span class='line'>manage_dhcp: 0
</span><span class='line'>$ sudo cobbler sync
</span><span class='line'>$ sudo service dhcpd stop</span></code></pre></td></tr></table></div></figure>


<p>Add the node definition in cobbler(useless):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cobbler system add --name=node2 --profile=CentOS6.5-x86_64 --mac=52:54:00:71:59:64 --interface=eth0 --static=1 --ip-address=10.47.58.3 --dns-name=node2 --gateway=10.47.58.1</span></code></pre></td></tr></table></div></figure>


<p>Now bootup your newly added computer with PXE, hit <code>ctrl+B</code> once you see the bios hint.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iPXE&gt; config net0</span></code></pre></td></tr></table></div></figure>


<p>hit <code>ctrl+B</code> should be like in following image:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_31_15_761x354.jpg" alt="/images/2015_07_10_20_31_15_761x354.jpg" /></p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_10_20_26_29_656x381.jpg" alt="/images/2015_07_10_20_26_29_656x381.jpg" />  <br/>
Setting like following:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_33_15_676x453.jpg" alt="/images/2015_07_10_20_33_15_676x453.jpg" />  <br/>
Hit <code>Ctrl+x</code> for saving the settings and continue to set:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iPXE&gt; imgfetch -n img tftp://10.47.58.2/pxelinux.0
</span><span class='line'>iPXE&gt; imgload img
</span><span class='line'>iPXE&gt; boot</span></code></pre></td></tr></table></div></figure>


<p>Now begin to install, you will met nework configuration fail issue:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_39_30_580x240.jpg" alt="/images/2015_07_10_20_39_30_580x240.jpg" /></p>

<p>Hit Cancel, manually set up the network, first select installation method: <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_41_12_323x273.jpg" alt="/images/2015_07_10_20_41_12_323x273.jpg" /></p>

<p>Configure TCP/IP:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_42_14_430x286.jpg" alt="/images/2015_07_10_20_42_14_430x286.jpg" />  <br/>
Configure IP address/gateway/dns/netmask:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_43_08_600x280.jpg" alt="/images/2015_07_10_20_43_08_600x280.jpg" />  <br/>
Now configure the installation setting, you could find it in your own ks configuration file:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_44_22_585x334.jpg" alt="/images/2015_07_10_20_44_22_585x334.jpg" /></p>

<p>Continue to install, they are the same as you did before.</p>

<h3>Cobbler in the existing DHCP enabled Network</h3>

<p>Since the dhcp server is available in the network, simply press <code>ctrl+B</code> to enter the pxe boot menu and set the <code>next_server</code> to <code>10.47.58.2</code>, then:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iPXE&gt; imgfetch -n img tftp://10.47.58.2/pxelinux.0
</span><span class='line'>iPXE&gt; imgload img
</span><span class='line'>iPXE&gt; boot</span></code></pre></td></tr></table></div></figure>


<p>Now select whichever you want to deploy, your configuration will be deployed ASAP.</p>

<h3>Cobbler Server Image To New Network</h3>

<p>You have to change following items:  <br/>
1. IP address.  <br/>
2. dhcp templates
3. Next Server Name.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/cobbler/settings
</span><span class='line'>next_server: 172.16.10.2
</span><span class='line'>server: 172.16.10.2
</span><span class='line'>$ sudo vim /etc/cobbler/dhcp.templates
</span><span class='line'>subnet 172.16.10.0 netmask 255.255.255.0 {
</span><span class='line'>     option routers             172.16.10.1; 
</span><span class='line'>     range dynamic-bootp        172.16.10.3 172.16.10.254;
</span><span class='line'>     option domain-name-servers 114.114.114.114, 180.76.76.76;     
</span><span class='line'>     option subnet-mask         255.255.255.0;         
</span><span class='line'>     filename                   "/pxelinux.0";       
</span><span class='line'>     default-lease-time         21600;           
</span><span class='line'>     max-lease-time             43200;      
</span><span class='line'>     next-server                $next_server; 
</span><span class='line'>     class "pxeclients" {
</span><span class='line'>
</span><span class='line'>//..................</span></code></pre></td></tr></table></div></figure>


<p>Notice the IP address should be in the same ip address range.</p>

<p>After modification, simply use <code>cobbler sync</code> for syncing your changes, now restart the cobbler server, your operation should be the same as the above situations.</p>

<p>Also if you have playbooks of ansible which uses the static IP address, you also have to replace the IP related settings.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(8)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/09/wh-worktips-8/"/>
    <updated>2015-07-09T11:08:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/09/wh-worktips-8</id>
    <content type="html"><![CDATA[<p>After Cobbler import and deployment, simply install download plugins,
Create the repo, and edit the repo definition file in the deployed node:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@node164 ~]# cat /etc/yum.repos.d/cloudstack.repo 
</span><span class='line'>[cloudstack]
</span><span class='line'>name=cloudstack
</span><span class='line'>baseurl=http://10.47.58.2/4.5CentOS7/
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0</span></code></pre></td></tr></table></div></figure>


<p>Steps for installing the cloudstack on CentOS7:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y ntp
</span><span class='line'>[root@node164 ~]# cat /etc/hosts
</span><span class='line'>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
</span><span class='line'>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
</span><span class='line'>10.47.58.164    node164
</span><span class='line'>[root@node164 ~]# vim /etc/selinux/config 
</span><span class='line'>SELINUX=permissive
</span><span class='line'>SELINUXTYPE=targeted
</span><span class='line'>[root@node164 ~]# yum install libselinux-python
</span><span class='line'># yum install -y wget 
</span><span class='line'># wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo
</span><span class='line'># yum install -y python-pip
</span><span class='line'># yum install -y mysql
</span><span class='line'>
</span><span class='line'>[root@node164 ~]# sudo rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm
</span><span class='line'>[root@node164 ~]# sudo yum -y install mysql-community-server
</span><span class='line'>[root@node164 ~]# yum install -y MySQL-python
</span><span class='line'># vim /etc/my.cnf
</span><span class='line'>    # CloudStack MySQL settings
</span><span class='line'>    innodb_rollback_on_timeout=1
</span><span class='line'>    innodb_lock_wait_timeout=600
</span><span class='line'>    max_connections=700
</span><span class='line'>    log-bin=mysql-bin
</span><span class='line'>    binlog-format = 'ROW'
</span><span class='line'>    bind-address=0.0.0.0
</span><span class='line'>    
</span><span class='line'>    [mysqld_safe]
</span><span class='line'>    log-error=/var/log/mariadb/mariadb.log
</span><span class='line'>[root@node164 ~]# service mysqld start
</span></code></pre></td></tr></table></div></figure>


<h3>Specify Static IP</h3>

<p>The static IP should be specified via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer ~]# cobbler system add --name=node166 --profile=CentOS-6.5-x86_64 --mac=52:54:00:73:f9:9f --interface=eth0 --ip-address=10.47.58.166 --hostname=node166 --gateway=10.47.58.1 --dns-name=node166 --static=1 --ip-address=10.47.58.166 --subnet=255.255.255.0
</span><span class='line'>[root@z_WHServer ~]# cobbler system add --name=node167 --profile=CentOS-6.5-x86_64 --mac=52:54:00:8b:c2:15 --interface=eth0 --ip-address=10.47.58.167 --hostname=node167 --gateway=10.47.58.1 --dns-name=node167 --static=1 --ip-address=10.47.58.167 --subnet=255.255.255.0 --name-servers="114.114.114.114 180.76.76.76"
</span><span class='line'>[root@z_WHServer ~]# cobbler system add --name=node2 --profile=CentOS-6.5-x86_64 --mac=52:54:00:7f:c5:16 --interface=eth0 --static=1 --ip-address=10.49.49.2 --subnet=255.255.255.0 --name-servers="114.114.114.114 180.76.76.76" --gateway=10.49.49.1
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(7)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/07/wh-worktips-7/"/>
    <updated>2015-07-07T15:22:23+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/07/wh-worktips-7</id>
    <content type="html"><![CDATA[<h3>Cloudstack Agent Repository</h3>

<p>Setup the CloudStack Agent Repository via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install yum-plugin-downloadonly
</span><span class='line'># vim /etc/yum.repos.d/cloudstack.repo
</span><span class='line'>[cloudstack]
</span><span class='line'>name=cloudstack
</span><span class='line'>baseurl=http://cloudstack.apt-get.eu/rhel/4.3/
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0
</span><span class='line'># mkdir Code
</span><span class='line'># yum install --downloadonly --downloaddir=/root/Code/ cloud-agent</span></code></pre></td></tr></table></div></figure>


<p>Now all of the installation rpm packages has been downloaded to directory, simply upload them to a server, use <code>createrepo .</code> to generate the repository, and link them to nginx&rsquo;s root directory.  <br/>
Mine is under:  <br/>
<a href="http://192.168.0.79/4.4.3CloudStackAgent/">http://192.168.0.79/4.4.3CloudStackAgent/</a></p>

<h3>Agent Installation Steps</h3>

<p>In a new deployed machine:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mv CentOS-* /root/
</span><span class='line'>[root@node161 yum.repos.d]# cat cloudstack.repo 
</span><span class='line'>[cloudstack]
</span><span class='line'>name=cloudstack
</span><span class='line'>baseurl=http://192.168.0.79/4.4.3CloudStackAgent/
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0
</span><span class='line'># yum install -y cloud-agent</span></code></pre></td></tr></table></div></figure>


<p>Configure qemu and libvirt:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@node161 yum.repos.d]# cp /etc/libvirt/qemu.conf /etc/libvirt/qemu.conf.orig
</span><span class='line'>[root@node161 yum.repos.d]# sed -i '/#vnc_listen = "0.0.0.0"/ a vnc_listen = "0.0.0.0"' /etc/libvirt/qemu.conf
</span><span class='line'>[root@node161 yum.repos.d]# diff -du /etc/libvirt/qemu.conf.orig /etc/libvirt/qemu.conf
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># cp /etc/libvirt/libvirtd.conf /etc/libvirt/libvirtd.conf.orig
</span><span class='line'># sed -i '/#listen_tls = 0/ a listen_tls = 0' /etc/libvirt/libvirtd.conf
</span><span class='line'># sed -i '/#listen_tcp = 1/ a listen_tcp = 1' /etc/libvirt/libvirtd.conf
</span><span class='line'># sed -i '/#tcp_port = "16509"/ a tcp_port = "16509"' /etc/libvirt/libvirtd.conf
</span><span class='line'># sed -i '/#auth_tcp = "sasl"/ a auth_tcp = "none"' /etc/libvirt/libvirtd.conf
</span><span class='line'># sed -i '/#mdns_adv = 1/ a mdns_adv = 0' /etc/libvirt/libvirtd.conf
</span><span class='line'># diff -du /etc/libvirt/libvirtd.conf.orig  /etc/libvirt/libvirtd.conf
</span><span class='line'>
</span><span class='line'>[root@node161 yum.repos.d]# cp /etc/sysconfig/libvirtd /etc/sysconfig/libvirtd.orig
</span><span class='line'>[root@node161 yum.repos.d]# sed -i '/#LIBVIRTD_ARGS="--listen"/ a LIBVIRTD_ARGS="--listen"' /etc/sysconfig/libvirtd
</span><span class='line'>[root@node161 yum.repos.d]# diff -du /etc/sysconfig/libvirtd.orig  /etc/sysconfig/libvirtd
</span><span class='line'>[root@node161 yum.repos.d]# rm -f /etc/libvirt/libvirtd.conf.orig 
</span><span class='line'>
</span><span class='line'># cat /etc/hosts
</span><span class='line'>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
</span><span class='line'>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
</span><span class='line'>127.0.0.1       node161</span></code></pre></td></tr></table></div></figure>


<p>Now you could add the host into the cloudstack management interface.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add Private NAT Networking in XenServer]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/06/add-private-nat-networking-in-xenserver/"/>
    <updated>2015-07-06T11:42:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/06/add-private-nat-networking-in-xenserver</id>
    <content type="html"><![CDATA[<h3>Create Networking In XenCenter</h3>

<p>Create the networking under the XenCenter UI&rsquo;s tab &ldquo;Networking&rdquo;.</p>

<h3>Networking Setting</h3>

<p>Enable the ip forward:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/sysctl.conf
</span><span class='line'>net.ipv4.ip_forward = 1
</span><span class='line'># sysctl -p 
</span><span class='line'># cat /proc/sys/net/ipv4/ip_forward 
</span><span class='line'>1</span></code></pre></td></tr></table></div></figure>


<p>Use iptables for forwarding the network flow:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># iptables -A FORWARD --in-interface xapi0 -j ACCEPT
</span><span class='line'># iptables --table nat -A POSTROUTING --out-interface eth0 -j MASQUERADE</span></code></pre></td></tr></table></div></figure>


<p>But this didn&rsquo;t bring up the internal networking, after discussing with college, edit the file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@xenserver-WolfHunter ~]# cat /etc/sysconfig/iptables
</span><span class='line'>+++++  *nat
</span><span class='line'>+++++  :PREROUTING ACCEPT [7019:539216]
</span><span class='line'>+++++  :INPUT ACCEPT [77:3825]
</span><span class='line'>+++++  :OUTPUT ACCEPT [104:6495]
</span><span class='line'>+++++  :POSTROUTING ACCEPT [53:3228]
</span><span class='line'>+++++  -A POSTROUTING -o xenbr0 -j MASQUERADE
</span><span class='line'>+++++  COMMIT
</span><span class='line'>*filter
</span><span class='line'>:INPUT ACCEPT [0:0]
</span><span class='line'>:FORWARD ACCEPT [0:0]
</span><span class='line'>:OUTPUT ACCEPT [0:0]
</span><span class='line'>:RH-Firewall-1-INPUT - [0:0]
</span><span class='line'>-A INPUT -j RH-Firewall-1-INPUT
</span><span class='line'>++++ -A FORWARD -i xapi0 -j ACCEPT
</span><span class='line'>-A FORWARD -j RH-Firewall-1-INPUT
</span><span class='line'>-A RH-Firewall-1-INPUT -i lo -j ACCEPT
</span><span class='line'>-A RH-Firewall-1-INPUT -p icmp --icmp-type any -j ACCEPT
</span><span class='line'># DHCP for host internal networks (CA-6996)
</span><span class='line'>-A RH-Firewall-1-INPUT -p udp -m udp --dport 67 --in-interface xenapi -j ACCEPT
</span><span class='line'>-A RH-Firewall-1-INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
</span><span class='line'># Linux HA hearbeat (CA-9394)
</span><span class='line'>-A RH-Firewall-1-INPUT -m conntrack --ctstate NEW -m udp -p udp --dport 694 -j ACCEPT
</span><span class='line'>-A RH-Firewall-1-INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport 22 -j ACCEPT
</span><span class='line'>-A RH-Firewall-1-INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport 80 -j ACCEPT
</span><span class='line'>-A RH-Firewall-1-INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport 443 -j ACCEPT
</span><span class='line'>-A RH-Firewall-1-INPUT -j REJECT --reject-with icmp-host-prohibited
</span><span class='line'>COMMIT
</span></code></pre></td></tr></table></div></figure>


<p>Restart XenServer and waiting for verification.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install CloudStack All-In-One on Ubuntu14.04]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/05/install-cloudstack-all-in-one-on-ubuntu14-dot-04/"/>
    <updated>2015-07-05T16:08:59+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/05/install-cloudstack-all-in-one-on-ubuntu14-dot-04</id>
    <content type="html"><![CDATA[<p>Refers to:   <br/>
<a href="http://www.greenhills.co.uk/2015/02/23/cloudstack-4.4-single-server-on-ubuntu-14.04.1-with-kvm.html">http://www.greenhills.co.uk/2015/02/23/cloudstack-4.4-single-server-on-ubuntu-14.04.1-with-kvm.html</a></p>

<h3>Preparation For Packages</h3>

<p>Install reprepro:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install -y reprepro</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkdir -p /srv/reprepro
</span><span class='line'>root@DebServer:/srv/reprepro# ls
</span><span class='line'>conf  db  dists  incoming  indices  lists  logs  pool  project  tmp
</span><span class='line'>root@DebServer:/srv/reprepro# ls conf/
</span><span class='line'>distributions  incomming  updates  uploaders
</span><span class='line'>root@DebServer:/srv/reprepro# cat conf/distributions 
</span><span class='line'>Origin: Alveonet
</span><span class='line'>Label: Alveonet
</span><span class='line'>Suite: trusty
</span><span class='line'>Codename: trusty
</span><span class='line'>Version: 14.04
</span><span class='line'>Architectures: i386 amd64 source
</span><span class='line'>Components: main cloudstack43 cloudstack44 cloudstack45 cloudstack
</span><span class='line'>Description: Alveonet specific (or backported) packages
</span><span class='line'>#SignWith: dash1982
</span><span class='line'>DebOverride: ../indices/override.trusty.main
</span><span class='line'>UDebOverride: ../indices/override.tursy.main.debian-installer
</span><span class='line'>DscOverride: ../indices/override.trusty.main.src
</span><span class='line'>DebIndices: Packages Release . .gz .bz2
</span><span class='line'>UDebIndices: Packages . .gz .bz2
</span><span class='line'>DscIndices: Sources Release .gz .bz2
</span><span class='line'>Contents: . .gz .bz2
</span><span class='line'>Update: - cloudstack45 cloudstack43 cloudstack44
</span><span class='line'>Log: packages.alveonet.org.log
</span><span class='line'>root@DebServer:/srv/reprepro# cat conf/incomming 
</span><span class='line'>Name: default
</span><span class='line'>IncomingDir: incoming
</span><span class='line'>TempDir: tmp
</span><span class='line'>Allow: trusty trusty-backports
</span><span class='line'>Cleanup: on_deny on_error
</span><span class='line'>root@DebServer:/srv/reprepro# cat conf/updates 
</span><span class='line'>Name: cloudstack44
</span><span class='line'>Method: http://cloudstack.apt-get.eu/ubuntu
</span><span class='line'>#VerifyRelease: 86C278E3
</span><span class='line'>Suite: trusty
</span><span class='line'>Architectures: amd64
</span><span class='line'>GetInRelease: no
</span><span class='line'>#Components: 4.3&gt;main
</span><span class='line'>Components: 4.4&gt;cloudstack44
</span><span class='line'>
</span><span class='line'># Name: cloudstack44
</span><span class='line'># Method: http://cloudstack.apt-get.eu/ubuntu
</span><span class='line'># #VerifyRelease: 86C278E3
</span><span class='line'># Suite: trusty
</span><span class='line'># Architectures: amd64
</span><span class='line'># GetInRelease: no
</span><span class='line'># #Components: 4.3&gt;main
</span><span class='line'># Components: 4.4&gt;main
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Name: cloudstack45
</span><span class='line'>Method: http://cloudstack.apt-get.eu/ubuntu
</span><span class='line'>#VerifyRelease: 86C278E3
</span><span class='line'>Suite: trusty
</span><span class='line'>Architectures: amd64
</span><span class='line'>GetInRelease: no
</span><span class='line'>#Components: 4.3&gt;main
</span><span class='line'>Components: 4.5&gt;cloudstack45
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Name: cloudstack43
</span><span class='line'>Method: http://cloudstack.apt-get.eu/ubuntu
</span><span class='line'>#VerifyRelease: 86C278E3
</span><span class='line'>Suite: trusty
</span><span class='line'>Architectures: amd64
</span><span class='line'>GetInRelease: no
</span><span class='line'>#Components: 4.3&gt;main
</span><span class='line'>Components: 4.3&gt;cloudstack43
</span><span class='line'>root@DebServer:/srv/reprepro# cat conf/uploaders 
</span><span class='line'>allow * by unsigned
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># reprepro -Vb /srv/reprepro export
</span><span class='line'># reprepro update
</span></code></pre></td></tr></table></div></figure>


<p>By doing this you could make a local reprepro created repository.</p>

<p>TBD</p>

<h3>Installation Steps</h3>

<h4>System Preparation</h4>

<p>First install Ubuntu14.04, I use Cobbler Server&rsquo;s PXE Installation.</p>

<p>Change the Root Permit login under <code>/etc/ssh/sshd_config</code> and restart the ssh service.</p>

<p>Change the IP Address to 10.10.10.2 via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@Ubuntu-14:~# cat /etc/network/interfaces
</span><span class='line'># The loopback network interface
</span><span class='line'>auto lo
</span><span class='line'>iface lo inet loopback
</span><span class='line'>
</span><span class='line'># The primary network interface
</span><span class='line'>auto eth0
</span><span class='line'>iface eth0 inet static
</span><span class='line'>address 10.10.10.2
</span><span class='line'>netmask 255.255.255.0
</span><span class='line'>gateway 10.10.10.1
</span><span class='line'>dns-nameservers 180.76.76.76</span></code></pre></td></tr></table></div></figure>


<p>Relogin to the system, and begin to install the packages.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vi /etc/apt/source.list
</span><span class='line'>deb http://192.168.1.111 amd64/
</span><span class='line'>deb http://192.168.1.111/reprepro/      trusty  cloudstack44
</span><span class='line'># apt-get update && apt-get install vim</span></code></pre></td></tr></table></div></figure>


<p>I use 192.168.1.111 because I cached all of the required packages in this server, thus it could speed-up the deployment.</p>

<h4>Server Configuration</h4>

<p>Configure the Server&rsquo;s hostname:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@Ubuntu-14:~# cat /etc/hostname 
</span><span class='line'>CS
</span><span class='line'>root@Ubuntu-14:~# cat /etc/hosts
</span><span class='line'>127.0.0.1       localhost
</span><span class='line'>10.10.0.2       CS
</span><span class='line'>127.0.1.1       CS.CSDomain     CS
</span><span class='line'>
</span><span class='line'>root@Ubuntu-14:~# reboot
</span><span class='line'># hostname --fqdn
</span><span class='line'>CS</span></code></pre></td></tr></table></div></figure>


<p>Now configure the NTP via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get purge ntp
</span><span class='line'># apt-get install openntpd</span></code></pre></td></tr></table></div></figure>


<p>Configure the Network:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install bridge-utils
</span><span class='line'># cat /etc/network/interfaces
</span><span class='line'>    
</span><span class='line'>    # The loopback network interface
</span><span class='line'>    auto lo
</span><span class='line'>    iface lo inet loopback
</span><span class='line'>    
</span><span class='line'>    # The primary network interface
</span><span class='line'>    auto eth0
</span><span class='line'>    iface eth0 inet manual
</span><span class='line'>    
</span><span class='line'>    
</span><span class='line'>    auto cloudbr0
</span><span class='line'>    iface cloudbr0 inet static
</span><span class='line'>            address 10.10.10.2
</span><span class='line'>            netmask 255.255.255.0
</span><span class='line'>            gateway 10.10.10.1
</span><span class='line'>            dns-nameservers 180.76.76.76
</span><span class='line'>            bridge-ports eth0
</span><span class='line'>            bridge_fd 5
</span><span class='line'>            bridge_stp off
</span><span class='line'>            bridge_maxwait 1
</span><span class='line'>    
</span><span class='line'>    # Private network
</span><span class='line'>    auto cloudbr1
</span><span class='line'>    iface cloudbr1 inet manual
</span><span class='line'>            bridge_ports none
</span><span class='line'>            bridge_fd 5
</span><span class='line'>            bridge_stp off
</span><span class='line'>            bridge_maxwait 1
</span><span class='line'># reboot</span></code></pre></td></tr></table></div></figure>


<p>Now the Network Bridge is configured.</p>

<h4>CloudStack Installation</h4>

<p>Since all of the packages are cached into LAN environment, simply type following command for installing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install cloudstack-management</span></code></pre></td></tr></table></div></figure>


<p>Then Install the database server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install mysql-server
</span><span class='line'># vim /etc/mysql/conf.d/cloudstack.cnf
</span><span class='line'>[mysqld]
</span><span class='line'>innodb_rollback_on_timeout=1
</span><span class='line'>innodb_lock_wait_timeout=600
</span><span class='line'>max_connections=350
</span><span class='line'>log-bin=mysql-bin
</span><span class='line'>binlog-format = 'ROW'
</span><span class='line'>root@CS:~# service mysql restart
</span><span class='line'>root@CS:~# cloudstack-setup-databases cloud:engine@localhost --deploy-as=root:engine -e file -m mymskey44 -k mydbkey00</span></code></pre></td></tr></table></div></figure>


<h4>NFS Storage Preparation</h4>

<p>Add export directory:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkdir -p /export/primary /export/secondary
</span><span class='line'># apt-get install nfs-kernel-server
</span><span class='line'># vim /etc/exports
</span><span class='line'>/export  *(rw,async,no_root_squash,no_subtree_check)
</span><span class='line'># cp /etc/default/nfs-common /etc/default/nfs-common.orig
</span><span class='line'># sed -i '/NEED_STATD=/ a NEED_STATD=yes' /etc/default/nfs-common
</span><span class='line'># sed -i '/STATDOPTS=/ a STATDOPTS="--port 662 --outgoing-port 2020"' /etc/default/nfs-common
</span><span class='line'># diff -du /etc/default/nfs-common.orig /etc/default/nfs-common
</span><span class='line'>
</span><span class='line'>root@CS:~# cat /etc/modprobe.d/lockd.conf 
</span><span class='line'>options lockd nlm_udpport=32769 nlm_tcpport=32803
</span><span class='line'>root@CS:~# service nfs-kernel-server restart
</span><span class='line'>root@CS:~# showmount -e 127.0.0.1
</span><span class='line'>Export list for 127.0.0.1:
</span><span class='line'>/export *</span></code></pre></td></tr></table></div></figure>


<p>Mount it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@CS:~# mkdir -p /mnt/primary /mnt/secondary
</span><span class='line'>root@CS:~# tail -2 /etc/fstab
</span><span class='line'>10.10.10.2:/export/primary   /mnt/primary    nfs rsize=8192,wsize=8192,timeo=14,intr,vers=3,noauto  0   2
</span><span class='line'>10.10.10.2:/export/secondary /mnt/secondary  nfs rsize=8192,wsize=8192,timeo=14,intr,vers=3,noauto  0   2
</span><span class='line'>root@CS:~# mount /mnt/primary/
</span><span class='line'>root@CS:~# mount /mnt/secondary/
</span><span class='line'>root@CS:~# mount | tail -2
</span><span class='line'>10.10.10.2:/export/primary on /mnt/primary type nfs (rw,rsize=8192,wsize=8192,timeo=14,intr,vers=3,addr=10.10.10.2)
</span><span class='line'>10.10.10.2:/export/secondary on /mnt/secondary type nfs (rw,rsize=8192,wsize=8192,timeo=14,intr,vers=3,addr=10.10.10.2)</span></code></pre></td></tr></table></div></figure>


<h4>Cloudstack Agent Installation</h4>

<p>Install it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@CS:~# apt-get install cloudstack-agent
</span><span class='line'>root@CS:~# cp /etc/libvirt/libvirtd.conf /etc/libvirt/libvirtd.conf.orig
</span><span class='line'>root@CS:~# sed -i '/#listen_tls = 0/ a listen_tls = 0' /etc/libvirt/libvirtd.conf
</span><span class='line'>root@CS:~# sed -i '/#listen_tcp = 1/ a listen_tcp = 1' /etc/libvirt/libvirtd.conf
</span><span class='line'>root@CS:~# sed -i '/#tcp_port = "16509"/ a tcp_port = "16509"' /etc/libvirt/libvirtd.conf
</span><span class='line'>root@CS:~# sed -i '/#auth_tcp = "sasl"/ a auth_tcp = "none"' /etc/libvirt/libvirtd.conf
</span><span class='line'>root@CS:~# diff -du /etc/libvirt/libvirtd.conf.orig /etc/libvirt/libvirtd.conf
</span><span class='line'>root@CS:~# cp /etc/default/libvirt-bin /etc/default/libvirt-bin.orig
</span><span class='line'>root@CS:~# sed -i -e 's/libvirtd_opts="-d"/libvirtd_opts="-d -l"/' /etc/default/libvirt-bin
</span><span class='line'>root@CS:~# service libvirt-bin restart
</span><span class='line'>root@CS:~# cp /etc/libvirt/qemu.conf /etc/libvirt/qemu.conf.orig
</span><span class='line'>root@CS:~# sed -i '/#vnc_listen = "0.0.0.0"/ a vnc_listen = "0.0.0.0"' /etc/libvirt/qemu.conf
</span><span class='line'>root@CS:~# diff -du /etc/libvirt/qemu.conf.orig /etc/libvirt/qemu.conf
</span><span class='line'>root@CS:~# service libvirt-bin restart
</span><span class='line'>root@CS:~# ln -s /etc/apparmor.d/usr.sbin.libvirtd /etc/apparmor.d/disable/
</span><span class='line'>root@CS:~# ln -s /etc/apparmor.d/usr.lib.libvirt.virt-aa-helper /etc/apparmor.d/disable/
</span><span class='line'>root@CS:~# apparmor_parser -R /etc/apparmor.d/usr.sbin.libvirtd
</span><span class='line'>root@CS:~# apparmor_parser -R /etc/apparmor.d/usr.lib.libvirt.virt-aa-helper
</span><span class='line'>root@CS:~# service libvirt-bin restart</span></code></pre></td></tr></table></div></figure>


<h4>Configure FireWall</h4>

<p>Open the following ports:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@CS:~# ufw allow proto tcp from any to any port 22
</span><span class='line'>Rules updated
</span><span class='line'>Rules updated (v6)
</span><span class='line'>root@CS:~# ufw allow proto tcp from any to any port 1798
</span><span class='line'>Rules updated
</span><span class='line'>Rules updated (v6)
</span><span class='line'>root@CS:~# ufw allow proto tcp from any to any port 16509
</span><span class='line'>Rules updated
</span><span class='line'>Rules updated (v6)
</span><span class='line'>root@CS:~# ufw allow proto tcp from any to any port 5900:6100
</span><span class='line'>Rules updated
</span><span class='line'>Rules updated (v6)
</span><span class='line'>root@CS:~# ufw allow proto tcp from any to any port 49152:49216
</span><span class='line'>Rules updated
</span><span class='line'>Rules updated (v6)</span></code></pre></td></tr></table></div></figure>


<p>Now restart and verify the NFS working.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@CS:~# rpcinfo -u 10.10.10.2 mount
</span><span class='line'>program 100005 version 1 ready and waiting
</span><span class='line'>program 100005 version 2 ready and waiting
</span><span class='line'>program 100005 version 3 ready and waiting
</span><span class='line'>root@CS:~# showmount -e 10.10.10.2
</span><span class='line'>Export list for 10.10.10.2:
</span><span class='line'>/export *
</span><span class='line'>root@CS:~# mount /mnt/primary/
</span><span class='line'>root@CS:~# mount /mnt/secondary/</span></code></pre></td></tr></table></div></figure>


<p>Added the System Template:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@CS:~# /usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m /mnt/secondary -u http://192.168.1.111/systemvm64template-4.4.1-7-kvm.qcow2.bz2  -h kvm -F
</span><span class='line'>......
</span><span class='line'>Successfully installed system VM template  to /mnt/secondary/template/tmpl/1/3/</span></code></pre></td></tr></table></div></figure>


<h3>Cloudstack</h3>

<p>First manually start the services:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service cloudstack-management status
</span><span class='line'>service cloudstack-agent status
</span><span class='line'>service tomcat6 status
</span><span class='line'>
</span><span class='line'>service cloudstack-management stop
</span><span class='line'>service tomcat6 stop
</span><span class='line'>service cloudstack-agent stop
</span><span class='line'>ps -efl | grep java
</span><span class='line'>
</span><span class='line'>service cloudstack-management start
</span><span class='line'>service cloudstack-management status
</span><span class='line'>service cloudstack-agent start
</span><span class='line'>service cloudstack-agent status</span></code></pre></td></tr></table></div></figure>


<p>Now setup the UI via visiting <code>http://10.10.10.2:8080/client</code>, usename/password: admin/password:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Choose "Continue with basic installation". This will start a wizard that will walk through the configuration. You will need to adjust the network values for your environment, and make sure you use appropiate, free, ranges.
</span><span class='line'>
</span><span class='line'>Add a new zone named "zone1", DNS1 10.10.10.1 and Internal DNS 10.10.10.1.
</span><span class='line'>Add a new pod named "pod1", gateway 10.10.10.1, netmask 255.255.255.0, IP range 10.10.10.160-10.10.10.169.
</span><span class='line'>Add a guest network, gateway 10.10.10.1, netmask 255.255.255.0, IP range 10.10.10.170-192.168.77.230.
</span><span class='line'>Add a cluster named cluster1, Hypervisor KVM.
</span><span class='line'>Add a host. Host Name "CS", user root, passsword for the root linux user.
</span><span class='line'>Add primary storage: name primary1, protocol NFS, Scope Cluster, server 10.10.10.10, path /export/primary.
</span><span class='line'>Add secondary storage: NFS server 10.10.10.10, path /export/secondary.
</span><span class='line'>Hit Launch and pray.
</span><span class='line'>This should go through a sequence of setup.</span></code></pre></td></tr></table></div></figure>


<p>Now you could enjoy the cloudstack all-in-one</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Preseed File for Ubuntu1404 in CobblerServer]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/04/preseed-file-for-ubuntu1404-in-cobblerserver/"/>
    <updated>2015-07-04T14:57:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/04/preseed-file-for-ubuntu1404-in-cobblerserver</id>
    <content type="html"><![CDATA[<h3>Proseed File</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>d-i time/zone string Asia/Shanghai
</span><span class='line'>
</span><span class='line'># Setup the installation source
</span><span class='line'>d-i mirror/country string manual
</span><span class='line'>d-i mirror/http/hostname string $http_server
</span><span class='line'>#d-i mirror/http/directory string $install_source_directory
</span><span class='line'>d-i mirror/http/directory string /cobbler/ks_mirror/Ubuntu-14.04-x86_64/ubuntu
</span><span class='line'>d-i mirror/http/proxy string
</span><span class='line'>d-i apt-setup/security_host string $http_server
</span><span class='line'>d-i apt-setup/security_path string /cobbler/ks_mirror/Ubuntu-14.04-x86_64/ubuntu</span></code></pre></td></tr></table></div></figure>


<h3>Local Repository</h3>

<p>In one installed machine, do following for getting the repository of all of the installed packages:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install dselect
</span><span class='line'>$ dpkg --get-selections | grep -v deinstall&gt;InstalledPackage.txt
</span><span class='line'>$ awk {'print $1'} InstalledPackage.txt | xargs apt-get download</span></code></pre></td></tr></table></div></figure>


<p>Use nginx for sharing the repository:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install -y nginx
</span><span class='line'>$ sudo vim /etc/nginx/site-enabled/default
</span><span class='line'>server {
</span><span class='line'>        listen 80 default_server;
</span><span class='line'>        listen [::]:80 default_server ipv6only=on;
</span><span class='line'>
</span><span class='line'>        root /var/www/html;
</span><span class='line'>        index index.html index.htm;
</span><span class='line'>
</span><span class='line'>        # Make site accessible from http://localhost/
</span><span class='line'>        server_name localhost;
</span><span class='line'>
</span><span class='line'>        location / {
</span><span class='line'>                # First attempt to serve request as file, then
</span><span class='line'>                # as directory, then fall back to displaying a 404.
</span><span class='line'>                try_files $uri $uri/ =404;
</span><span class='line'>                autoindex on;
</span><span class='line'>                # Uncomment to enable naxsi on this location
</span><span class='line'>$ sudo service nginx restart</span></code></pre></td></tr></table></div></figure>


<p>Now generate the repository server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir -p /var/www/html/amd64
</span><span class='line'>$ mv /root/Code/*.deb /var/www/html/amd64
</span><span class='line'>$ cd /var/www/html/
</span><span class='line'>$ dpkg-scanpackages amd64/ | gzip -9c &gt; amd64/Packages.gz
</span><span class='line'>$ mv /root/Code/InstalledPackage.txt /var/www/html</span></code></pre></td></tr></table></div></figure>


<h3>Use Local Repository</h3>

<p>Change the repoisoty setting:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@Ubuntu-14:~# cat /etc/apt/sources.list
</span><span class='line'>deb http://192.168.1.111 amd64/
</span><span class='line'>root@Ubuntu-14:~# apt-get update &&  apt-get install -y dselect
</span><span class='line'>root@Ubuntu-14:~# dselect update
</span><span class='line'>root@Ubuntu-14:~# wget http://192.168.1.11/InstalledPackage.txt
</span><span class='line'>root@Ubuntu-14:~# dpkg --set-selections &lt; InstalledPackage.txt && apt-get -u dselect-upgrade </span></code></pre></td></tr></table></div></figure>


<p>After updating, you have the same system as your server.</p>
]]></content>
  </entry>
  
</feed>
