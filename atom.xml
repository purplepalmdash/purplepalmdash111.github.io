<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dash]]></title>
  <link href="http://purplepalmdash.github.io/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-07-19T14:31:02+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[On Migration of KVM]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/19/on-migration-of-kvm/"/>
    <updated>2015-07-19T13:31:03+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/19/on-migration-of-kvm</id>
    <content type="html"><![CDATA[<h3>Migration</h3>

<p>First create the qemu based vm:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pwd
</span><span class='line'>/media/arch/home/juju/img/migration
</span><span class='line'>$ qemu-img create -f qcow2 ubuntu1504.qcow2 100G
</span><span class='line'>$ sudo qemu-system-x86_64 -enable-kvm -m 512 -smp 4 -name ubuntu1504 -monitor stdio -boot c -drive file=/media/arch/home/juju/img/migration/ubuntu1504.qcow2,if=none,id=drive-virtio-disk0,boot=on -device virtio-blk-pci,bus=pci.0,addr=0x4,drive=drive-virtio-disk0,id=virtio-disk0 -drive file=/media/arch/home/dash/iso/ubuntu-15.04-server-amd64.iso,if=none,media=cdrom,id=drive-ide0-1-0 -device ide-drive,bus=ide.1,unit=0,drive=drive-ide0-1-0,id=ide0-1-0 -device virtio-net-pci,vlan=0,id=net0,mac=52:54:00:13:08:96 -net tap -vnc 127.0.0.1:3</span></code></pre></td></tr></table></div></figure>


<p>After Installation, startup the vm via(didn&rsquo;t attach the file):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo qemu-system-x86_64 -enable-kvm -m 512 -smp 4 -name ubuntu1504 -monitor stdio -boot c -drive file=/media/arch/home/juju/img/migration/ubuntu1504.qcow2,if=none,id=drive-virtio-disk0,boot=on -device virtio-blk-pci,bus=pci.0,addr=0x4,drive=drive-virtio-disk0,id=virtio-disk0 -drive if=none,media=cdrom,id=drive-ide0-1-0 -device ide-drive,bus=ide.1,unit=0,drive=drive-ide0-1-0,id=ide0-1-0 -device virtio-net-pci,vlan=0,id=net0,mac=52:54:00:13:08:96 -net tap -vnc 127.0.0.1:3</span></code></pre></td></tr></table></div></figure>


<p>Use <code>top -d 1</code> for every second refreshed.</p>

<p>The same environment is set as the src machine.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ qemu-img create -f qcow2 dest.img 20G
</span><span class='line'>$ qemu-system-x86_64 -enable-kvm -m 512 -smp 4 -name ubuntu1504 -monitor stdio -boot c -drive file=/root/Code/dest.img,if=none,id=drive-virtio-disk0,boot=on -device virtio-blk-pci,bus=pci.0,addr=0x4,drive=drive-virtio-disk0,id=virtio-disk0 -drive if=none,media=cdrom,id=drive-ide0-1-0 -device ide-drive,bus=ide.1,unit=0,drive=drive-ide0-1-0,id=ide0-1-0 -device virtio-net-pci,vlan=0,id=net0,mac=52:54:00:13:08:96 -net tap -vnc 127.0.0.1:8
</span><span class='line'>(qemu) info status
</span><span class='line'>VM status: paused (inmigrate)</span></code></pre></td></tr></table></div></figure>


<p>Start migration in the src side via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(qemu) migrate -d -b tcp:192.168.1.18:8888
</span><span class='line'>(qemu) info migrate</span></code></pre></td></tr></table></div></figure>


<p>In destination machine, you can see the status of the migration.</p>

<p>After migration, the machine stays its top output to the terminal.</p>

<h3>Trouble Shooting On Newly Installed Arch</h3>

<h4>Bug1 virtual network start fail</h4>

<p>libvirt via virt-manager virtual network start failed.   <br/>
Change:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>--- libvirt-1.2.16.orig/src/util/virfirewall.c  2015-05-23 08:56:12.000000000 -0400
</span><span class='line'>+++ libvirt-1.2.16.new/src/util/virfirewall.c   2015-06-18 10:01:51.954157612 -0400
</span><span class='line'>@@ -932,14 +932,14 @@
</span><span class='line'> 
</span><span class='line'>     virMutexLock(&ruleLock);
</span><span class='line'> 
</span><span class='line'>-    if (currentBackend == VIR_FIREWALL_BACKEND_AUTOMATIC) {
</span><span class='line'>+//    if (currentBackend == VIR_FIREWALL_BACKEND_AUTOMATIC) {
</span><span class='line'>         /* a specific backend should have been set when the firewall
</span><span class='line'>          * object was created. If not, it means none was found.
</span><span class='line'>          */
</span><span class='line'>-        virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
</span><span class='line'>-                       _("Failed to initialize a valid firewall backend"));
</span><span class='line'>-        goto cleanup;
</span><span class='line'>-    }
</span><span class='line'>+//        virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
</span><span class='line'>+//                       _("Failed to initialize a valid firewall backend"));
</span><span class='line'>+//        goto cleanup;
</span><span class='line'>+//    }
</span><span class='line'>     if (!firewall || firewall-&gt;err == ENOMEM) {
</span><span class='line'>         virReportOOMError();
</span><span class='line'>         goto cleanup;</span></code></pre></td></tr></table></div></figure>


<p>For building the libvirt, do following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># pacman -S abs base-devel
</span><span class='line'># abs 
</span><span class='line'># cp /var/abs/community/libvirt ~/Code/
</span><span class='line'># cd ~/Code/libvirt
</span><span class='line'># makepkg</span></code></pre></td></tr></table></div></figure>


<p>After makepkg, change the code as in above, tar it again, makepkg with following command <code>makepkg --skipchecksums</code>, this time it will generate a new tar.xz file. Install it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># pacman -U libvirt-1.2.17-1-x86_64.pkg.tar.xz</span></code></pre></td></tr></table></div></figure>


<h4>starting network out of memory</h4>

<p>Solve it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># pacman -S ebtables vde2
</span><span class='line'># reboot</span></code></pre></td></tr></table></div></figure>


<p>Start again and this time is OK.</p>

<h4>Bridge Configuration</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@Arch network]# pwd
</span><span class='line'>/etc/systemd/network
</span><span class='line'>[root@Arch network]# cat MyBridge.netdev 
</span><span class='line'>[NetDev]
</span><span class='line'>Name=br0
</span><span class='line'>MACAddress=52:54:00:91:e8:11
</span><span class='line'>Kind=bridge
</span><span class='line'>[root@Arch network]# cat MyBridge.network 
</span><span class='line'>[Match]
</span><span class='line'>Name=br0
</span><span class='line'>
</span><span class='line'>[Network]
</span><span class='line'>DNS=180.76.76.76,114.114.114.114
</span><span class='line'>
</span><span class='line'>[Address]
</span><span class='line'>Address=192.168.1.18/24
</span><span class='line'>
</span><span class='line'>[Route]
</span><span class='line'>Gateway=192.168.1.1
</span><span class='line'>[root@Arch network]# cat MyEth.network 
</span><span class='line'>[Match]
</span><span class='line'>Name=eth0
</span><span class='line'>
</span><span class='line'>[Network]
</span><span class='line'>Bridge=br0</span></code></pre></td></tr></table></div></figure>


<p>Now enable and start the systemd&rsquo;s networkd service via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># systemctl enable systemd-networkd.service
</span><span class='line'># reboot</span></code></pre></td></tr></table></div></figure>


<p>By this you could enable systemd on ArchLinux.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ISCSI Installed Debian Jessie]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/17/iscsi-installed-debian-jessie/"/>
    <updated>2015-07-17T14:24:20+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/17/iscsi-installed-debian-jessie</id>
    <content type="html"><![CDATA[<h3>FreeNAS Installation And Configuration</h3>

<p>Install Procedure ignored, because it&rsquo;s simple.   <br/>
Following steps are used for adding iscsi partition.</p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_17_14_25_57_558x549.jpg" alt="/images/2015_07_17_14_25_57_558x549.jpg" />  <br/>
Manually setup the volumn and now you could add your volumn into the FreeNAS System.</p>

<p>Configure iscsi:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_33_57_530x370.jpg" alt="/images/2015_07_17_14_33_57_530x370.jpg" /> <br/>
Add the name of <code>iqn.onecloud.iscsi</code>, next we add portal:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_35_12_617x403.jpg" alt="/images/2015_07_17_14_35_12_617x403.jpg" />  <br/>
Add Authorized Access Now:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_37_03_491x195.jpg" alt="/images/2015_07_17_14_37_03_491x195.jpg" />  <br/>
Add Initator:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_39_25_498x234.jpg" alt="/images/2015_07_17_14_39_25_498x234.jpg" />  <br/>
Create target:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_40_30_460x487.jpg" alt="/images/2015_07_17_14_40_30_460x487.jpg" />  <br/>
Add extent: <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_41_55_559x613.jpg" alt="/images/2015_07_17_14_41_55_559x613.jpg" /> <br/>
LUM RPMs could also be spcified:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_42_51_386x351.jpg" alt="/images/2015_07_17_14_42_51_386x351.jpg" /> <br/>
Associate Targets:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_44_09_619x310.jpg" alt="/images/2015_07_17_14_44_09_619x310.jpg" /></p>

<p>Enable the iscsi service:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_17_14_45_04_366x302.jpg" alt="/images/2015_07_17_14_45_04_366x302.jpg" /></p>

<p>Better you change the IP Address into static IP address.</p>

<h3>Install Debian Jessie Onto ISCSI Disk:</h3>

<p>On a installed Ubuntu, I choose Ubuntu14.04, do following for connecting the exising created iscsi partition:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install -y open-iscsi gdisk
</span><span class='line'>[root:~]# iscsiadm -m discovery -t sendtargets -p 10.47.58.40
</span><span class='line'>10.47.58.40:3260,-1 iqn.onecloud.iscsi:iscsidisk1</span></code></pre></td></tr></table></div></figure>


<p>
Login and listed the device :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root:~]# iscsiadm -m node -T 'iqn.onecloud.iscsi:iscsidisk1' -p 10.47.58.40 -l
</span><span class='line'>Logging in to [iface: default, target: iqn.onecloud.iscsi:iscsidisk1, portal: 10.47.58.40,3260] (multiple)
</span><span class='line'>Login to [iface: default, target: iqn.onecloud.iscsi:iscsidisk1, portal: 10.47.58.40,3260] successful.
</span><span class='line'>[root:~]# ls -l /dev/disk/by-path
</span><span class='line'>total 0
</span><span class='line'>lrwxrwxrwx 1 root root 9 Jul 17 05:39 ip-10.47.58.40:3260-iscsi-iqn.onecloud.iscsi:iscsidisk1-lun-0 -&gt; ../../sda</span></code></pre></td></tr></table></div></figure>


<p>Use gdisk for partition the /dev/sda, and creating the filesystem on them:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># gdisk -l /dev/sda
</span><span class='line'>
</span><span class='line'>Number  Start (sector)    End (sector)  Size       Code  Name
</span><span class='line'>   1            2048            8191   3.0 MiB     EF02  BIOS boot partition
</span><span class='line'>   2            8192         1056767   512.0 MiB   8200  Linux swap
</span><span class='line'>   3         1056768        40959966   19.0 GiB    8300  Linux filesystem
</span><span class='line'># mkfs.ext4 /dev/sda3
</span><span class='line'># mkswap /dev/sda2 </span></code></pre></td></tr></table></div></figure>


<p>Now install system, first mount usable systems:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkdir /mnt/chroot
</span><span class='line'># mount /dev/sda3 /mnt/chroot
</span><span class='line'># debootstrap wheezy /mnt/chroot
</span><span class='line'># debootstrap jessie /mnt/chroot http://mirrors.aliyun.com/debian/ 
</span></code></pre></td></tr></table></div></figure>


<p>chroot into the newly install jessie:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@Ubuntu-14:~# mount -t proc none /mnt/chroot/proc
</span><span class='line'>root@Ubuntu-14:~# mount -t sysfs none /mnt/chroot/sys
</span><span class='line'>root@Ubuntu-14:~# mount --bind /dev /mnt/chroot/dev
</span><span class='line'>root@Ubuntu-14:~# chroot /mnt/chroot /bin/bash</span></code></pre></td></tr></table></div></figure>


<p>Disk configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@Ubuntu-14:/# cp /proc/mounts /etc/mtab
</span><span class='line'>root@Ubuntu-14:/# sed -i '\|^/dev/sda3|,$!d' /etc/mtab
</span><span class='line'>root@Ubuntu-14:/# blkid /dev/sda2 /dev/sda3
</span><span class='line'>/dev/sda2: UUID="0c570265-543a-41ec-9edb-65bc55d677cd" TYPE="swap" PARTLABEL="Linux swap" PARTUUID="bfb7c1b1-c6cd-4302-9cb4-d6c1de43a0ad"
</span><span class='line'>/dev/sda3: UUID="c1c5f995-e3f7-48c7-b5d5-4963a77d9b7b" TYPE="ext4" PARTLABEL="Linux filesystem" PARTUUID="00ccaf63-b3b3-46c4-92ab-1933d31cbcb7"
</span><span class='line'>root@Ubuntu-14:/# echo 'UUID=c1c5f995-e3f7-48c7-b5d5-4963a77d9b7b / ext4 errors=remount-ro 0 1' &gt;&gt; /etc/fstab
</span><span class='line'>root@Ubuntu-14:/# echo 'UUID=0c570265-543a-41ec-9edb-65bc55d677cd none swap sw 0 0' &gt;&gt; /etc/fstab
</span><span class='line'>root@Ubuntu-14:/# cat /etc/fstab
</span><span class='line'># UNCONFIGURED FSTAB FOR BASE SYSTEM
</span><span class='line'>UUID=c1c5f995-e3f7-48c7-b5d5-4963a77d9b7b / ext4 errors=remount-ro 0 1
</span><span class='line'>UUID=0c570265-543a-41ec-9edb-65bc55d677cd none swap sw 0 0</span></code></pre></td></tr></table></div></figure>


<p>Install some packages, be sure to make grub2 installed to /dev/sda:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install vim less openssh-server locales
</span><span class='line'># apt-get install linux-image-amd64 grub2 initramfs-tools</span></code></pre></td></tr></table></div></figure>


<p>Configure the Grub:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install open-iscsi
</span><span class='line'># vim /etc/default/grub
</span><span class='line'>GRUB_CMDLINE_LINUX_DEFAULT=""
</span><span class='line'>GRUB_CMDLINE_LINUX=""ISCSI_INITIATOR=iqn.onecloud.iscsi.client:client ISCSI_TARGET_NAME=iqn.onecloud.iscsi:iscsidisk1 ISCSI_TARGET_IP=10.47.58.40 ISCSI_TARGET_PORT=3260 root=UUID=c1c5f995-e3f7-48c7-b5d5-4963a77d9b7b ip=10.47.58.176::10.47.58.1:255.255.255.0:client:eth0:off""
</span><span class='line'># touch /etc/iscsi/iscsi.initramfs
</span><span class='line'># echo "InitiatorName=iqn.onecloud.iscsi.client:client" &gt; /etc/iscsi/initiatorname.iscsi
</span><span class='line'># update-grub
</span><span class='line'># update-initramfs -u
</span><span class='line'># passwd
</span></code></pre></td></tr></table></div></figure>


<p>Configure the network interfaces:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@Ubuntu-14:/etc/network# cat interfaces
</span><span class='line'># interfaces(5) file used by ifup(8) and ifdown(8)
</span><span class='line'># Include files from /etc/network/interfaces.d:
</span><span class='line'>#source-directory /etc/network/interfaces.d
</span><span class='line'># The loopback network interface
</span><span class='line'>auto lo
</span><span class='line'>iface lo inet loopback
</span><span class='line'>
</span><span class='line'># The primary network interface
</span><span class='line'>auto eth0
</span><span class='line'>iface eth0 inet static
</span><span class='line'>#iface eth0 inet manual
</span><span class='line'>address 10.47.58.176
</span><span class='line'>netmask 255.255.255.0
</span><span class='line'>gateway 10.47.58.1
</span><span class='line'>dns-nameservers 114.114.114.114</span></code></pre></td></tr></table></div></figure>


<p>Now exit and umount all of the mounted partitions.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># exit
</span><span class='line'># umount /mnt/chroot/{dev,proc,sys,}
</span><span class='line'>root@Ubuntu-14:~# iscsiadm -m node -T 'iqn.onecloud.iscsi:iscsidisk1' -p 10.47.58.40 -u
</span><span class='line'># echo "InitiatorName=iqn.onecloud.iscsi.client:client" &gt; /etc/iscsi/initiatorname.iscsi
</span><span class='line'>#!ipxe
</span><span class='line'>set initiator-iqn iqn.2007-08.com.example.client:client
</span><span class='line'>sanboot iscsi:san.example.com:6:3260:0:iqn.2007-08.com.example.san:rootp</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(12)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/14/wh-worktips-12/"/>
    <updated>2015-07-14T19:09:11+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/14/wh-worktips-12</id>
    <content type="html"><![CDATA[<h3>How to quickly get all packages</h3>

<p>First deploy a new system, Then:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cd /etc/yum.repos.d/
</span><span class='line'># mv CentOS-* /root/
</span><span class='line'># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo
</span><span class='line'># wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo</span></code></pre></td></tr></table></div></figure>


<p>If you previously downloaded the 4.5 packages, then put them under one web server&rsquo;s directory,  do following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@node161 yum.repos.d]# vim cloudstack.repo 
</span><span class='line'>[cloudstack]
</span><span class='line'>name=cloudstack
</span><span class='line'>baseurl=http://10.47.58.2/4.5/
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0</span></code></pre></td></tr></table></div></figure>


<p>Now install the yum-download plugin, and begin to create local repository:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y yum-plugin-downloadonly
</span><span class='line'># mkdir ~/Code
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(11)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/13/wh-worktips-11/"/>
    <updated>2015-07-13T21:12:14+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/13/wh-worktips-11</id>
    <content type="html"><![CDATA[<h3>CentOS7 Based</h3>

<p>Following modification need to be done:  <br/>
On Deployed node:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/hosts
</span><span class='line'>10.47.58.157  node157</span></code></pre></td></tr></table></div></figure>


<p>There will be iptables issue. for you have to install following packages:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y install iptables-utils iptables-services
</span><span class='line'># reboot</span></code></pre></td></tr></table></div></figure>


<p>Now begin to install again, and it will be ok.</p>

<p>Add the client, and make sure the &ldquo;COPY CPU configuration&rdquo; is selected in the menu.  <br/>
Or, your system vm won&rsquo;t startup.</p>

<p>Why at home my output becomes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@node157 network-scripts]# cat ifcfg-cloudbr0 
</span><span class='line'>
</span><span class='line'>DEVICE=cloudbr0
</span><span class='line'>
</span><span class='line'>ONBOOT=yes
</span><span class='line'>HWADDR=52:54:00:73:86:D2
</span><span class='line'>
</span><span class='line'>TYPE=Bridge
</span><span class='line'>BOOTPROTO=dhcp
</span><span class='line'>NM_CONTROLLED=no
</span><span class='line'>[root@node157 network-scripts]# cat ifcfg-eth0 
</span><span class='line'>DEVICE=eth0
</span><span class='line'>
</span><span class='line'>ONBOOT=yes
</span><span class='line'>HWADDR=52:54:00:73:86:D2
</span><span class='line'>TYPE=Ethernet
</span><span class='line'>BOOTPROTO=dhcp
</span><span class='line'>NM_CONTROLLED=no
</span><span class='line'>BRIDGE=cloudbr0
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(10)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/12/wh-worktips-10/"/>
    <updated>2015-07-12T10:57:15+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/12/wh-worktips-10</id>
    <content type="html"><![CDATA[<p>This chapter will cover the ansible playbook for deploying CloudStack Agent.  <br/>
First you should download the packages for the deployed node.</p>

<p>In a computer which have the internet connection, do following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y yum-plugin-downloadonly
</span><span class='line'># vi /etc/yum.repos.d/cloudstack.repo
</span><span class='line'>[cloudstack]
</span><span class='line'>name=cloudstack
</span><span class='line'>baseurl=http://cloudstack.apt-get.eu/centos7/4.5/
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0
</span><span class='line'># yum install --downloadonly --downloaddir=/root/Code/ cloud-agent</span></code></pre></td></tr></table></div></figure>


<p>Then under the folder of <code>/root/Code</code> you will have all of the cloud-agent related packages, create a repo using <code>createrepo .</code>, and set the apache/nginx&rsquo;s serving directory to here.</p>

<h3>Node Testing.</h3>

<p>Write a new playbook, this playbook&rsquo;s name is <code>CloudStackAgentCentOS7.yml</code>.  Notice you also have to change the repository definition file.</p>

<p>Configuration of cloudbr0:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0 
</span><span class='line'># Generated by parse-kickstart
</span><span class='line'>DEVICE=eth0
</span><span class='line'>TYPE=Ethernet
</span><span class='line'>ONBOOT=yes
</span><span class='line'>NM_CONTROLLED=yes
</span><span class='line'>BOOTPROTO=none
</span><span class='line'>BRIDGE=cloudbr0
</span><span class='line'>IPV6INIT=no
</span><span class='line'>[root@localhost ~]# cat /etc/sysconfig/network-scripts/ifcfg-cloudbr0 
</span><span class='line'>DEVICE=cloudbr0
</span><span class='line'>TYPE=Bridge
</span><span class='line'>BOOTPROTO=dhcp
</span><span class='line'>IPV6INIT=no 
</span><span class='line'>ONBOOT=yes
</span><span class='line'>DELAY=0</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(9)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/10/wh-worktips-9/"/>
    <updated>2015-07-10T20:21:13+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/10/wh-worktips-9</id>
    <content type="html"><![CDATA[<h3>Cobbler In Non-DHCP Server Networking</h3>

<p>Sometimes you want to deploy system with cobbler server,  in some restricted network which dhcp service is not allowed(considering broadcasting storm, security, etc.) Following are the steps of how-to:  <br/>
Change Cobbler server setting:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/cobbler/settings
</span><span class='line'>manage_dhcp: 0
</span><span class='line'>$ sudo cobbler sync
</span><span class='line'>$ sudo service dhcpd stop</span></code></pre></td></tr></table></div></figure>


<p>Add the node definition in cobbler(useless):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cobbler system add --name=node2 --profile=CentOS6.5-x86_64 --mac=52:54:00:71:59:64 --interface=eth0 --static=1 --ip-address=10.47.58.3 --dns-name=node2 --gateway=10.47.58.1</span></code></pre></td></tr></table></div></figure>


<p>Now bootup your newly added computer with PXE, hit <code>ctrl+B</code> once you see the bios hint.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iPXE&gt; config net0</span></code></pre></td></tr></table></div></figure>


<p>hit <code>ctrl+B</code> should be like in following image:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_31_15_761x354.jpg" alt="/images/2015_07_10_20_31_15_761x354.jpg" /></p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_10_20_26_29_656x381.jpg" alt="/images/2015_07_10_20_26_29_656x381.jpg" />  <br/>
Setting like following:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_33_15_676x453.jpg" alt="/images/2015_07_10_20_33_15_676x453.jpg" />  <br/>
Hit <code>Ctrl+x</code> for saving the settings and continue to set:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iPXE&gt; imgfetch -n img tftp://10.47.58.2/pxelinux.0
</span><span class='line'>iPXE&gt; imgload img
</span><span class='line'>iPXE&gt; boot</span></code></pre></td></tr></table></div></figure>


<p>Now begin to install, you will met nework configuration fail issue:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_39_30_580x240.jpg" alt="/images/2015_07_10_20_39_30_580x240.jpg" /></p>

<p>Hit Cancel, manually set up the network, first select installation method: <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_41_12_323x273.jpg" alt="/images/2015_07_10_20_41_12_323x273.jpg" /></p>

<p>Configure TCP/IP:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_42_14_430x286.jpg" alt="/images/2015_07_10_20_42_14_430x286.jpg" />  <br/>
Configure IP address/gateway/dns/netmask:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_43_08_600x280.jpg" alt="/images/2015_07_10_20_43_08_600x280.jpg" />  <br/>
Now configure the installation setting, you could find it in your own ks configuration file:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_10_20_44_22_585x334.jpg" alt="/images/2015_07_10_20_44_22_585x334.jpg" /></p>

<p>Continue to install, they are the same as you did before.</p>

<h3>Cobbler in the existing DHCP enabled Network</h3>

<p>Since the dhcp server is available in the network, simply press <code>ctrl+B</code> to enter the pxe boot menu and set the <code>next_server</code> to <code>10.47.58.2</code>, then:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iPXE&gt; imgfetch -n img tftp://10.47.58.2/pxelinux.0
</span><span class='line'>iPXE&gt; imgload img
</span><span class='line'>iPXE&gt; boot</span></code></pre></td></tr></table></div></figure>


<p>Now select whichever you want to deploy, your configuration will be deployed ASAP.</p>

<h3>Cobbler Server Image To New Network</h3>

<p>You have to change following items:  <br/>
1. IP address.  <br/>
2. dhcp templates
3. Next Server Name.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/cobbler/settings
</span><span class='line'>next_server: 172.16.10.2
</span><span class='line'>server: 172.16.10.2
</span><span class='line'>$ sudo vim /etc/cobbler/dhcp.templates
</span><span class='line'>subnet 172.16.10.0 netmask 255.255.255.0 {
</span><span class='line'>     option routers             172.16.10.1; 
</span><span class='line'>     range dynamic-bootp        172.16.10.3 172.16.10.254;
</span><span class='line'>     option domain-name-servers 114.114.114.114, 180.76.76.76;     
</span><span class='line'>     option subnet-mask         255.255.255.0;         
</span><span class='line'>     filename                   "/pxelinux.0";       
</span><span class='line'>     default-lease-time         21600;           
</span><span class='line'>     max-lease-time             43200;      
</span><span class='line'>     next-server                $next_server; 
</span><span class='line'>     class "pxeclients" {
</span><span class='line'>
</span><span class='line'>//..................</span></code></pre></td></tr></table></div></figure>


<p>Notice the IP address should be in the same ip address range.</p>

<p>After modification, simply use <code>cobbler sync</code> for syncing your changes, now restart the cobbler server, your operation should be the same as the above situations.</p>

<p>Also if you have playbooks of ansible which uses the static IP address, you also have to replace the IP related settings.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(8)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/09/wh-worktips-8/"/>
    <updated>2015-07-09T11:08:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/09/wh-worktips-8</id>
    <content type="html"><![CDATA[<p>After Cobbler import and deployment, simply install download plugins,
Create the repo, and edit the repo definition file in the deployed node:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@node164 ~]# cat /etc/yum.repos.d/cloudstack.repo 
</span><span class='line'>[cloudstack]
</span><span class='line'>name=cloudstack
</span><span class='line'>baseurl=http://10.47.58.2/4.5CentOS7/
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0</span></code></pre></td></tr></table></div></figure>


<p>Steps for installing the cloudstack on CentOS7:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y ntp
</span><span class='line'>[root@node164 ~]# cat /etc/hosts
</span><span class='line'>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
</span><span class='line'>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
</span><span class='line'>10.47.58.164    node164
</span><span class='line'>[root@node164 ~]# vim /etc/selinux/config 
</span><span class='line'>SELINUX=permissive
</span><span class='line'>SELINUXTYPE=targeted
</span><span class='line'>[root@node164 ~]# yum install libselinux-python
</span><span class='line'># yum install -y wget 
</span><span class='line'># wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo
</span><span class='line'># yum install -y python-pip
</span><span class='line'># yum install -y mysql
</span><span class='line'>
</span><span class='line'>[root@node164 ~]# sudo rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm
</span><span class='line'>[root@node164 ~]# sudo yum -y install mysql-community-server
</span><span class='line'>[root@node164 ~]# yum install -y MySQL-python
</span><span class='line'># vim /etc/my.cnf
</span><span class='line'>    # CloudStack MySQL settings
</span><span class='line'>    innodb_rollback_on_timeout=1
</span><span class='line'>    innodb_lock_wait_timeout=600
</span><span class='line'>    max_connections=700
</span><span class='line'>    log-bin=mysql-bin
</span><span class='line'>    binlog-format = 'ROW'
</span><span class='line'>    bind-address=0.0.0.0
</span><span class='line'>    
</span><span class='line'>    [mysqld_safe]
</span><span class='line'>    log-error=/var/log/mariadb/mariadb.log
</span><span class='line'>[root@node164 ~]# service mysqld start
</span></code></pre></td></tr></table></div></figure>


<h3>Specify Static IP</h3>

<p>The static IP should be specified via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer ~]# cobbler system add --name=node166 --profile=CentOS-6.5-x86_64 --mac=52:54:00:73:f9:9f --interface=eth0 --ip-address=10.47.58.166 --hostname=node166 --gateway=10.47.58.1 --dns-name=node166 --static=1 --ip-address=10.47.58.166 --subnet=255.255.255.0
</span><span class='line'>[root@z_WHServer ~]# cobbler system add --name=node167 --profile=CentOS-6.5-x86_64 --mac=52:54:00:8b:c2:15 --interface=eth0 --ip-address=10.47.58.167 --hostname=node167 --gateway=10.47.58.1 --dns-name=node167 --static=1 --ip-address=10.47.58.167 --subnet=255.255.255.0 --name-servers="114.114.114.114 180.76.76.76"
</span><span class='line'>[root@z_WHServer ~]# cobbler system add --name=node2 --profile=CentOS-6.5-x86_64 --mac=52:54:00:7f:c5:16 --interface=eth0 --static=1 --ip-address=10.49.49.2 --subnet=255.255.255.0 --name-servers="114.114.114.114 180.76.76.76" --gateway=10.49.49.1
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(7)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/07/wh-worktips-7/"/>
    <updated>2015-07-07T15:22:23+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/07/wh-worktips-7</id>
    <content type="html"><![CDATA[<h3>Cloudstack Agent Repository</h3>

<p>Setup the CloudStack Agent Repository via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install yum-plugin-downloadonly
</span><span class='line'># vim /etc/yum.repos.d/cloudstack.repo
</span><span class='line'>[cloudstack]
</span><span class='line'>name=cloudstack
</span><span class='line'>baseurl=http://cloudstack.apt-get.eu/rhel/4.3/
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0
</span><span class='line'># mkdir Code
</span><span class='line'># yum install --downloadonly --downloaddir=/root/Code/ cloud-agent</span></code></pre></td></tr></table></div></figure>


<p>Now all of the installation rpm packages has been downloaded to directory, simply upload them to a server, use <code>createrepo .</code> to generate the repository, and link them to nginx&rsquo;s root directory.  <br/>
Mine is under:  <br/>
<a href="http://192.168.0.79/4.4.3CloudStackAgent/">http://192.168.0.79/4.4.3CloudStackAgent/</a></p>

<h3>Agent Installation Steps</h3>

<p>In a new deployed machine:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mv CentOS-* /root/
</span><span class='line'>[root@node161 yum.repos.d]# cat cloudstack.repo 
</span><span class='line'>[cloudstack]
</span><span class='line'>name=cloudstack
</span><span class='line'>baseurl=http://192.168.0.79/4.4.3CloudStackAgent/
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0
</span><span class='line'># yum install -y cloud-agent</span></code></pre></td></tr></table></div></figure>


<p>Configure qemu and libvirt:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@node161 yum.repos.d]# cp /etc/libvirt/qemu.conf /etc/libvirt/qemu.conf.orig
</span><span class='line'>[root@node161 yum.repos.d]# sed -i '/#vnc_listen = "0.0.0.0"/ a vnc_listen = "0.0.0.0"' /etc/libvirt/qemu.conf
</span><span class='line'>[root@node161 yum.repos.d]# diff -du /etc/libvirt/qemu.conf.orig /etc/libvirt/qemu.conf
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># cp /etc/libvirt/libvirtd.conf /etc/libvirt/libvirtd.conf.orig
</span><span class='line'># sed -i '/#listen_tls = 0/ a listen_tls = 0' /etc/libvirt/libvirtd.conf
</span><span class='line'># sed -i '/#listen_tcp = 1/ a listen_tcp = 1' /etc/libvirt/libvirtd.conf
</span><span class='line'># sed -i '/#tcp_port = "16509"/ a tcp_port = "16509"' /etc/libvirt/libvirtd.conf
</span><span class='line'># sed -i '/#auth_tcp = "sasl"/ a auth_tcp = "none"' /etc/libvirt/libvirtd.conf
</span><span class='line'># sed -i '/#mdns_adv = 1/ a mdns_adv = 0' /etc/libvirt/libvirtd.conf
</span><span class='line'># diff -du /etc/libvirt/libvirtd.conf.orig  /etc/libvirt/libvirtd.conf
</span><span class='line'>
</span><span class='line'>[root@node161 yum.repos.d]# cp /etc/sysconfig/libvirtd /etc/sysconfig/libvirtd.orig
</span><span class='line'>[root@node161 yum.repos.d]# sed -i '/#LIBVIRTD_ARGS="--listen"/ a LIBVIRTD_ARGS="--listen"' /etc/sysconfig/libvirtd
</span><span class='line'>[root@node161 yum.repos.d]# diff -du /etc/sysconfig/libvirtd.orig  /etc/sysconfig/libvirtd
</span><span class='line'>[root@node161 yum.repos.d]# rm -f /etc/libvirt/libvirtd.conf.orig 
</span><span class='line'>
</span><span class='line'># cat /etc/hosts
</span><span class='line'>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
</span><span class='line'>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
</span><span class='line'>127.0.0.1       node161</span></code></pre></td></tr></table></div></figure>


<p>Now you could add the host into the cloudstack management interface.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add Private NAT Networking in XenServer]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/06/add-private-nat-networking-in-xenserver/"/>
    <updated>2015-07-06T11:42:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/06/add-private-nat-networking-in-xenserver</id>
    <content type="html"><![CDATA[<h3>Create Networking In XenCenter</h3>

<p>Create the networking under the XenCenter UI&rsquo;s tab &ldquo;Networking&rdquo;.</p>

<h3>Networking Setting</h3>

<p>Enable the ip forward:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/sysctl.conf
</span><span class='line'>net.ipv4.ip_forward = 1
</span><span class='line'># sysctl -p 
</span><span class='line'># cat /proc/sys/net/ipv4/ip_forward 
</span><span class='line'>1</span></code></pre></td></tr></table></div></figure>


<p>Use iptables for forwarding the network flow:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># iptables -A FORWARD --in-interface xapi0 -j ACCEPT
</span><span class='line'># iptables --table nat -A POSTROUTING --out-interface eth0 -j MASQUERADE</span></code></pre></td></tr></table></div></figure>


<p>But this didn&rsquo;t bring up the internal networking, after discussing with college, edit the file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@xenserver-WolfHunter ~]# cat /etc/sysconfig/iptables
</span><span class='line'>+++++  *nat
</span><span class='line'>+++++  :PREROUTING ACCEPT [7019:539216]
</span><span class='line'>+++++  :INPUT ACCEPT [77:3825]
</span><span class='line'>+++++  :OUTPUT ACCEPT [104:6495]
</span><span class='line'>+++++  :POSTROUTING ACCEPT [53:3228]
</span><span class='line'>+++++  -A POSTROUTING -o xenbr0 -j MASQUERADE
</span><span class='line'>+++++  COMMIT
</span><span class='line'>*filter
</span><span class='line'>:INPUT ACCEPT [0:0]
</span><span class='line'>:FORWARD ACCEPT [0:0]
</span><span class='line'>:OUTPUT ACCEPT [0:0]
</span><span class='line'>:RH-Firewall-1-INPUT - [0:0]
</span><span class='line'>-A INPUT -j RH-Firewall-1-INPUT
</span><span class='line'>++++ -A FORWARD -i xapi0 -j ACCEPT
</span><span class='line'>-A FORWARD -j RH-Firewall-1-INPUT
</span><span class='line'>-A RH-Firewall-1-INPUT -i lo -j ACCEPT
</span><span class='line'>-A RH-Firewall-1-INPUT -p icmp --icmp-type any -j ACCEPT
</span><span class='line'># DHCP for host internal networks (CA-6996)
</span><span class='line'>-A RH-Firewall-1-INPUT -p udp -m udp --dport 67 --in-interface xenapi -j ACCEPT
</span><span class='line'>-A RH-Firewall-1-INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
</span><span class='line'># Linux HA hearbeat (CA-9394)
</span><span class='line'>-A RH-Firewall-1-INPUT -m conntrack --ctstate NEW -m udp -p udp --dport 694 -j ACCEPT
</span><span class='line'>-A RH-Firewall-1-INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport 22 -j ACCEPT
</span><span class='line'>-A RH-Firewall-1-INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport 80 -j ACCEPT
</span><span class='line'>-A RH-Firewall-1-INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport 443 -j ACCEPT
</span><span class='line'>-A RH-Firewall-1-INPUT -j REJECT --reject-with icmp-host-prohibited
</span><span class='line'>COMMIT
</span></code></pre></td></tr></table></div></figure>


<p>Restart XenServer and waiting for verification.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install CloudStack All-In-One on Ubuntu14.04]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/05/install-cloudstack-all-in-one-on-ubuntu14-dot-04/"/>
    <updated>2015-07-05T16:08:59+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/05/install-cloudstack-all-in-one-on-ubuntu14-dot-04</id>
    <content type="html"><![CDATA[<p>Refers to:   <br/>
<a href="http://www.greenhills.co.uk/2015/02/23/cloudstack-4.4-single-server-on-ubuntu-14.04.1-with-kvm.html">http://www.greenhills.co.uk/2015/02/23/cloudstack-4.4-single-server-on-ubuntu-14.04.1-with-kvm.html</a></p>

<h3>Preparation For Packages</h3>

<p>Install reprepro:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install -y reprepro</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkdir -p /srv/reprepro
</span><span class='line'>root@DebServer:/srv/reprepro# ls
</span><span class='line'>conf  db  dists  incoming  indices  lists  logs  pool  project  tmp
</span><span class='line'>root@DebServer:/srv/reprepro# ls conf/
</span><span class='line'>distributions  incomming  updates  uploaders
</span><span class='line'>root@DebServer:/srv/reprepro# cat conf/distributions 
</span><span class='line'>Origin: Alveonet
</span><span class='line'>Label: Alveonet
</span><span class='line'>Suite: trusty
</span><span class='line'>Codename: trusty
</span><span class='line'>Version: 14.04
</span><span class='line'>Architectures: i386 amd64 source
</span><span class='line'>Components: main cloudstack43 cloudstack44 cloudstack45 cloudstack
</span><span class='line'>Description: Alveonet specific (or backported) packages
</span><span class='line'>#SignWith: dash1982
</span><span class='line'>DebOverride: ../indices/override.trusty.main
</span><span class='line'>UDebOverride: ../indices/override.tursy.main.debian-installer
</span><span class='line'>DscOverride: ../indices/override.trusty.main.src
</span><span class='line'>DebIndices: Packages Release . .gz .bz2
</span><span class='line'>UDebIndices: Packages . .gz .bz2
</span><span class='line'>DscIndices: Sources Release .gz .bz2
</span><span class='line'>Contents: . .gz .bz2
</span><span class='line'>Update: - cloudstack45 cloudstack43 cloudstack44
</span><span class='line'>Log: packages.alveonet.org.log
</span><span class='line'>root@DebServer:/srv/reprepro# cat conf/incomming 
</span><span class='line'>Name: default
</span><span class='line'>IncomingDir: incoming
</span><span class='line'>TempDir: tmp
</span><span class='line'>Allow: trusty trusty-backports
</span><span class='line'>Cleanup: on_deny on_error
</span><span class='line'>root@DebServer:/srv/reprepro# cat conf/updates 
</span><span class='line'>Name: cloudstack44
</span><span class='line'>Method: http://cloudstack.apt-get.eu/ubuntu
</span><span class='line'>#VerifyRelease: 86C278E3
</span><span class='line'>Suite: trusty
</span><span class='line'>Architectures: amd64
</span><span class='line'>GetInRelease: no
</span><span class='line'>#Components: 4.3&gt;main
</span><span class='line'>Components: 4.4&gt;cloudstack44
</span><span class='line'>
</span><span class='line'># Name: cloudstack44
</span><span class='line'># Method: http://cloudstack.apt-get.eu/ubuntu
</span><span class='line'># #VerifyRelease: 86C278E3
</span><span class='line'># Suite: trusty
</span><span class='line'># Architectures: amd64
</span><span class='line'># GetInRelease: no
</span><span class='line'># #Components: 4.3&gt;main
</span><span class='line'># Components: 4.4&gt;main
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Name: cloudstack45
</span><span class='line'>Method: http://cloudstack.apt-get.eu/ubuntu
</span><span class='line'>#VerifyRelease: 86C278E3
</span><span class='line'>Suite: trusty
</span><span class='line'>Architectures: amd64
</span><span class='line'>GetInRelease: no
</span><span class='line'>#Components: 4.3&gt;main
</span><span class='line'>Components: 4.5&gt;cloudstack45
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Name: cloudstack43
</span><span class='line'>Method: http://cloudstack.apt-get.eu/ubuntu
</span><span class='line'>#VerifyRelease: 86C278E3
</span><span class='line'>Suite: trusty
</span><span class='line'>Architectures: amd64
</span><span class='line'>GetInRelease: no
</span><span class='line'>#Components: 4.3&gt;main
</span><span class='line'>Components: 4.3&gt;cloudstack43
</span><span class='line'>root@DebServer:/srv/reprepro# cat conf/uploaders 
</span><span class='line'>allow * by unsigned
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># reprepro -Vb /srv/reprepro export
</span><span class='line'># reprepro update
</span></code></pre></td></tr></table></div></figure>


<p>By doing this you could make a local reprepro created repository.</p>

<p>TBD</p>

<h3>Installation Steps</h3>

<h4>System Preparation</h4>

<p>First install Ubuntu14.04, I use Cobbler Server&rsquo;s PXE Installation.</p>

<p>Change the Root Permit login under <code>/etc/ssh/sshd_config</code> and restart the ssh service.</p>

<p>Change the IP Address to 10.10.10.2 via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@Ubuntu-14:~# cat /etc/network/interfaces
</span><span class='line'># The loopback network interface
</span><span class='line'>auto lo
</span><span class='line'>iface lo inet loopback
</span><span class='line'>
</span><span class='line'># The primary network interface
</span><span class='line'>auto eth0
</span><span class='line'>iface eth0 inet static
</span><span class='line'>address 10.10.10.2
</span><span class='line'>netmask 255.255.255.0
</span><span class='line'>gateway 10.10.10.1
</span><span class='line'>dns-nameservers 180.76.76.76</span></code></pre></td></tr></table></div></figure>


<p>Relogin to the system, and begin to install the packages.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vi /etc/apt/source.list
</span><span class='line'>deb http://192.168.1.111 amd64/
</span><span class='line'>deb http://192.168.1.111/reprepro/      trusty  cloudstack44
</span><span class='line'># apt-get update && apt-get install vim</span></code></pre></td></tr></table></div></figure>


<p>I use 192.168.1.111 because I cached all of the required packages in this server, thus it could speed-up the deployment.</p>

<h4>Server Configuration</h4>

<p>Configure the Server&rsquo;s hostname:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@Ubuntu-14:~# cat /etc/hostname 
</span><span class='line'>CS
</span><span class='line'>root@Ubuntu-14:~# cat /etc/hosts
</span><span class='line'>127.0.0.1       localhost
</span><span class='line'>10.10.0.2       CS
</span><span class='line'>127.0.1.1       CS.CSDomain     CS
</span><span class='line'>
</span><span class='line'>root@Ubuntu-14:~# reboot
</span><span class='line'># hostname --fqdn
</span><span class='line'>CS</span></code></pre></td></tr></table></div></figure>


<p>Now configure the NTP via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get purge ntp
</span><span class='line'># apt-get install openntpd</span></code></pre></td></tr></table></div></figure>


<p>Configure the Network:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install bridge-utils
</span><span class='line'># cat /etc/network/interfaces
</span><span class='line'>    
</span><span class='line'>    # The loopback network interface
</span><span class='line'>    auto lo
</span><span class='line'>    iface lo inet loopback
</span><span class='line'>    
</span><span class='line'>    # The primary network interface
</span><span class='line'>    auto eth0
</span><span class='line'>    iface eth0 inet manual
</span><span class='line'>    
</span><span class='line'>    
</span><span class='line'>    auto cloudbr0
</span><span class='line'>    iface cloudbr0 inet static
</span><span class='line'>            address 10.10.10.2
</span><span class='line'>            netmask 255.255.255.0
</span><span class='line'>            gateway 10.10.10.1
</span><span class='line'>            dns-nameservers 180.76.76.76
</span><span class='line'>            bridge-ports eth0
</span><span class='line'>            bridge_fd 5
</span><span class='line'>            bridge_stp off
</span><span class='line'>            bridge_maxwait 1
</span><span class='line'>    
</span><span class='line'>    # Private network
</span><span class='line'>    auto cloudbr1
</span><span class='line'>    iface cloudbr1 inet manual
</span><span class='line'>            bridge_ports none
</span><span class='line'>            bridge_fd 5
</span><span class='line'>            bridge_stp off
</span><span class='line'>            bridge_maxwait 1
</span><span class='line'># reboot</span></code></pre></td></tr></table></div></figure>


<p>Now the Network Bridge is configured.</p>

<h4>CloudStack Installation</h4>

<p>Since all of the packages are cached into LAN environment, simply type following command for installing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install cloudstack-management</span></code></pre></td></tr></table></div></figure>


<p>Then Install the database server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install mysql-server
</span><span class='line'># vim /etc/mysql/conf.d/cloudstack.cnf
</span><span class='line'>[mysqld]
</span><span class='line'>innodb_rollback_on_timeout=1
</span><span class='line'>innodb_lock_wait_timeout=600
</span><span class='line'>max_connections=350
</span><span class='line'>log-bin=mysql-bin
</span><span class='line'>binlog-format = 'ROW'
</span><span class='line'>root@CS:~# service mysql restart
</span><span class='line'>root@CS:~# cloudstack-setup-databases cloud:engine@localhost --deploy-as=root:engine -e file -m mymskey44 -k mydbkey00</span></code></pre></td></tr></table></div></figure>


<h4>NFS Storage Preparation</h4>

<p>Add export directory:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkdir -p /export/primary /export/secondary
</span><span class='line'># apt-get install nfs-kernel-server
</span><span class='line'># vim /etc/exports
</span><span class='line'>/export  *(rw,async,no_root_squash,no_subtree_check)
</span><span class='line'># cp /etc/default/nfs-common /etc/default/nfs-common.orig
</span><span class='line'># sed -i '/NEED_STATD=/ a NEED_STATD=yes' /etc/default/nfs-common
</span><span class='line'># sed -i '/STATDOPTS=/ a STATDOPTS="--port 662 --outgoing-port 2020"' /etc/default/nfs-common
</span><span class='line'># diff -du /etc/default/nfs-common.orig /etc/default/nfs-common
</span><span class='line'>
</span><span class='line'>root@CS:~# cat /etc/modprobe.d/lockd.conf 
</span><span class='line'>options lockd nlm_udpport=32769 nlm_tcpport=32803
</span><span class='line'>root@CS:~# service nfs-kernel-server restart
</span><span class='line'>root@CS:~# showmount -e 127.0.0.1
</span><span class='line'>Export list for 127.0.0.1:
</span><span class='line'>/export *</span></code></pre></td></tr></table></div></figure>


<p>Mount it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@CS:~# mkdir -p /mnt/primary /mnt/secondary
</span><span class='line'>root@CS:~# tail -2 /etc/fstab
</span><span class='line'>10.10.10.2:/export/primary   /mnt/primary    nfs rsize=8192,wsize=8192,timeo=14,intr,vers=3,noauto  0   2
</span><span class='line'>10.10.10.2:/export/secondary /mnt/secondary  nfs rsize=8192,wsize=8192,timeo=14,intr,vers=3,noauto  0   2
</span><span class='line'>root@CS:~# mount /mnt/primary/
</span><span class='line'>root@CS:~# mount /mnt/secondary/
</span><span class='line'>root@CS:~# mount | tail -2
</span><span class='line'>10.10.10.2:/export/primary on /mnt/primary type nfs (rw,rsize=8192,wsize=8192,timeo=14,intr,vers=3,addr=10.10.10.2)
</span><span class='line'>10.10.10.2:/export/secondary on /mnt/secondary type nfs (rw,rsize=8192,wsize=8192,timeo=14,intr,vers=3,addr=10.10.10.2)</span></code></pre></td></tr></table></div></figure>


<h4>Cloudstack Agent Installation</h4>

<p>Install it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@CS:~# apt-get install cloudstack-agent
</span><span class='line'>root@CS:~# cp /etc/libvirt/libvirtd.conf /etc/libvirt/libvirtd.conf.orig
</span><span class='line'>root@CS:~# sed -i '/#listen_tls = 0/ a listen_tls = 0' /etc/libvirt/libvirtd.conf
</span><span class='line'>root@CS:~# sed -i '/#listen_tcp = 1/ a listen_tcp = 1' /etc/libvirt/libvirtd.conf
</span><span class='line'>root@CS:~# sed -i '/#tcp_port = "16509"/ a tcp_port = "16509"' /etc/libvirt/libvirtd.conf
</span><span class='line'>root@CS:~# sed -i '/#auth_tcp = "sasl"/ a auth_tcp = "none"' /etc/libvirt/libvirtd.conf
</span><span class='line'>root@CS:~# diff -du /etc/libvirt/libvirtd.conf.orig /etc/libvirt/libvirtd.conf
</span><span class='line'>root@CS:~# cp /etc/default/libvirt-bin /etc/default/libvirt-bin.orig
</span><span class='line'>root@CS:~# sed -i -e 's/libvirtd_opts="-d"/libvirtd_opts="-d -l"/' /etc/default/libvirt-bin
</span><span class='line'>root@CS:~# service libvirt-bin restart
</span><span class='line'>root@CS:~# cp /etc/libvirt/qemu.conf /etc/libvirt/qemu.conf.orig
</span><span class='line'>root@CS:~# sed -i '/#vnc_listen = "0.0.0.0"/ a vnc_listen = "0.0.0.0"' /etc/libvirt/qemu.conf
</span><span class='line'>root@CS:~# diff -du /etc/libvirt/qemu.conf.orig /etc/libvirt/qemu.conf
</span><span class='line'>root@CS:~# service libvirt-bin restart
</span><span class='line'>root@CS:~# ln -s /etc/apparmor.d/usr.sbin.libvirtd /etc/apparmor.d/disable/
</span><span class='line'>root@CS:~# ln -s /etc/apparmor.d/usr.lib.libvirt.virt-aa-helper /etc/apparmor.d/disable/
</span><span class='line'>root@CS:~# apparmor_parser -R /etc/apparmor.d/usr.sbin.libvirtd
</span><span class='line'>root@CS:~# apparmor_parser -R /etc/apparmor.d/usr.lib.libvirt.virt-aa-helper
</span><span class='line'>root@CS:~# service libvirt-bin restart</span></code></pre></td></tr></table></div></figure>


<h4>Configure FireWall</h4>

<p>Open the following ports:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@CS:~# ufw allow proto tcp from any to any port 22
</span><span class='line'>Rules updated
</span><span class='line'>Rules updated (v6)
</span><span class='line'>root@CS:~# ufw allow proto tcp from any to any port 1798
</span><span class='line'>Rules updated
</span><span class='line'>Rules updated (v6)
</span><span class='line'>root@CS:~# ufw allow proto tcp from any to any port 16509
</span><span class='line'>Rules updated
</span><span class='line'>Rules updated (v6)
</span><span class='line'>root@CS:~# ufw allow proto tcp from any to any port 5900:6100
</span><span class='line'>Rules updated
</span><span class='line'>Rules updated (v6)
</span><span class='line'>root@CS:~# ufw allow proto tcp from any to any port 49152:49216
</span><span class='line'>Rules updated
</span><span class='line'>Rules updated (v6)</span></code></pre></td></tr></table></div></figure>


<p>Now restart and verify the NFS working.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@CS:~# rpcinfo -u 10.10.10.2 mount
</span><span class='line'>program 100005 version 1 ready and waiting
</span><span class='line'>program 100005 version 2 ready and waiting
</span><span class='line'>program 100005 version 3 ready and waiting
</span><span class='line'>root@CS:~# showmount -e 10.10.10.2
</span><span class='line'>Export list for 10.10.10.2:
</span><span class='line'>/export *
</span><span class='line'>root@CS:~# mount /mnt/primary/
</span><span class='line'>root@CS:~# mount /mnt/secondary/</span></code></pre></td></tr></table></div></figure>


<p>Added the System Template:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@CS:~# /usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m /mnt/secondary -u http://192.168.1.111/systemvm64template-4.4.1-7-kvm.qcow2.bz2  -h kvm -F
</span><span class='line'>......
</span><span class='line'>Successfully installed system VM template  to /mnt/secondary/template/tmpl/1/3/</span></code></pre></td></tr></table></div></figure>


<h3>Cloudstack</h3>

<p>First manually start the services:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service cloudstack-management status
</span><span class='line'>service cloudstack-agent status
</span><span class='line'>service tomcat6 status
</span><span class='line'>
</span><span class='line'>service cloudstack-management stop
</span><span class='line'>service tomcat6 stop
</span><span class='line'>service cloudstack-agent stop
</span><span class='line'>ps -efl | grep java
</span><span class='line'>
</span><span class='line'>service cloudstack-management start
</span><span class='line'>service cloudstack-management status
</span><span class='line'>service cloudstack-agent start
</span><span class='line'>service cloudstack-agent status</span></code></pre></td></tr></table></div></figure>


<p>Now setup the UI via visiting <code>http://10.10.10.2:8080/client</code>, usename/password: admin/password:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Choose "Continue with basic installation". This will start a wizard that will walk through the configuration. You will need to adjust the network values for your environment, and make sure you use appropiate, free, ranges.
</span><span class='line'>
</span><span class='line'>Add a new zone named "zone1", DNS1 10.10.10.1 and Internal DNS 10.10.10.1.
</span><span class='line'>Add a new pod named "pod1", gateway 10.10.10.1, netmask 255.255.255.0, IP range 10.10.10.160-10.10.10.169.
</span><span class='line'>Add a guest network, gateway 10.10.10.1, netmask 255.255.255.0, IP range 10.10.10.170-192.168.77.230.
</span><span class='line'>Add a cluster named cluster1, Hypervisor KVM.
</span><span class='line'>Add a host. Host Name "CS", user root, passsword for the root linux user.
</span><span class='line'>Add primary storage: name primary1, protocol NFS, Scope Cluster, server 10.10.10.10, path /export/primary.
</span><span class='line'>Add secondary storage: NFS server 10.10.10.10, path /export/secondary.
</span><span class='line'>Hit Launch and pray.
</span><span class='line'>This should go through a sequence of setup.</span></code></pre></td></tr></table></div></figure>


<p>Now you could enjoy the cloudstack all-in-one</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Preseed File for Ubuntu1404 in CobblerServer]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/04/preseed-file-for-ubuntu1404-in-cobblerserver/"/>
    <updated>2015-07-04T14:57:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/04/preseed-file-for-ubuntu1404-in-cobblerserver</id>
    <content type="html"><![CDATA[<h3>Proseed File</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>d-i time/zone string Asia/Shanghai
</span><span class='line'>
</span><span class='line'># Setup the installation source
</span><span class='line'>d-i mirror/country string manual
</span><span class='line'>d-i mirror/http/hostname string $http_server
</span><span class='line'>#d-i mirror/http/directory string $install_source_directory
</span><span class='line'>d-i mirror/http/directory string /cobbler/ks_mirror/Ubuntu-14.04-x86_64/ubuntu
</span><span class='line'>d-i mirror/http/proxy string
</span><span class='line'>d-i apt-setup/security_host string $http_server
</span><span class='line'>d-i apt-setup/security_path string /cobbler/ks_mirror/Ubuntu-14.04-x86_64/ubuntu</span></code></pre></td></tr></table></div></figure>


<h3>Local Repository</h3>

<p>In one installed machine, do following for getting the repository of all of the installed packages:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install dselect
</span><span class='line'>$ dpkg --get-selections | grep -v deinstall&gt;InstalledPackage.txt
</span><span class='line'>$ awk {'print $1'} InstalledPackage.txt | xargs apt-get download</span></code></pre></td></tr></table></div></figure>


<p>Use nginx for sharing the repository:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install -y nginx
</span><span class='line'>$ sudo vim /etc/nginx/site-enabled/default
</span><span class='line'>server {
</span><span class='line'>        listen 80 default_server;
</span><span class='line'>        listen [::]:80 default_server ipv6only=on;
</span><span class='line'>
</span><span class='line'>        root /var/www/html;
</span><span class='line'>        index index.html index.htm;
</span><span class='line'>
</span><span class='line'>        # Make site accessible from http://localhost/
</span><span class='line'>        server_name localhost;
</span><span class='line'>
</span><span class='line'>        location / {
</span><span class='line'>                # First attempt to serve request as file, then
</span><span class='line'>                # as directory, then fall back to displaying a 404.
</span><span class='line'>                try_files $uri $uri/ =404;
</span><span class='line'>                autoindex on;
</span><span class='line'>                # Uncomment to enable naxsi on this location
</span><span class='line'>$ sudo service nginx restart</span></code></pre></td></tr></table></div></figure>


<p>Now generate the repository server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir -p /var/www/html/amd64
</span><span class='line'>$ mv /root/Code/*.deb /var/www/html/amd64
</span><span class='line'>$ cd /var/www/html/
</span><span class='line'>$ dpkg-scanpackages amd64/ | gzip -9c &gt; amd64/Packages.gz
</span><span class='line'>$ mv /root/Code/InstalledPackage.txt /var/www/html</span></code></pre></td></tr></table></div></figure>


<h3>Use Local Repository</h3>

<p>Change the repoisoty setting:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@Ubuntu-14:~# cat /etc/apt/sources.list
</span><span class='line'>deb http://192.168.1.111 amd64/
</span><span class='line'>root@Ubuntu-14:~# apt-get update &&  apt-get install -y dselect
</span><span class='line'>root@Ubuntu-14:~# dselect update
</span><span class='line'>root@Ubuntu-14:~# wget http://192.168.1.11/InstalledPackage.txt
</span><span class='line'>root@Ubuntu-14:~# dpkg --set-selections &lt; InstalledPackage.txt && apt-get -u dselect-upgrade </span></code></pre></td></tr></table></div></figure>


<p>After updating, you have the same system as your server.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Try Raid0 Installation on Ubuntu]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/03/try-raid0-installation-on-ubuntu/"/>
    <updated>2015-07-03T10:58:55+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/03/try-raid0-installation-on-ubuntu</id>
    <content type="html"><![CDATA[<h3>Preparation</h3>

<p>Prepare the disks:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root:/home/juju/img]# mkdir Raid0
</span><span class='line'>[root:/home/juju/img]# cd Raid0/
</span><span class='line'>[root:/home/juju/img/Raid0]# ls
</span><span class='line'>[root:/home/juju/img/Raid0]# qemu-img create -f qcow2 disk0.qcow2 10G
</span><span class='line'>Formatting 'disk0.qcow2', fmt=qcow2 size=10737418240 encryption=off cluster_size=65536 
</span><span class='line'>[root:/home/juju/img/Raid0]# qemu-img create -f qcow2 disk1.qcow2 10G
</span><span class='line'>Formatting 'disk1.qcow2', fmt=qcow2 size=10737418240 encryption=off cluster_size=65536 
</span><span class='line'>[root:/home/juju/img/Raid0]# qemu-img create -f qcow2 disk2.qcow2 10G
</span><span class='line'>Formatting 'disk2.qcow2', fmt=qcow2 size=10737418240 encryption=off cluster_size=65536 </span></code></pre></td></tr></table></div></figure>


<p>Prepare the Virtual Machine:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_07_03_11_06_03_658x441.jpg" alt="/images/2015_07_03_11_06_03_658x441.jpg" /></p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_03_11_06_57_556x325.jpg" alt="/images/2015_07_03_11_06_57_556x325.jpg" /></p>

<h3>Partition</h3>

<p><img src="http://purplepalmdash.github.io/images/2015_07_03_11_12_18_615x311.jpg" alt="/images/2015_07_03_11_12_18_615x311.jpg" /></p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_03_11_15_30_476x216.jpg" alt="/images/2015_07_03_11_15_30_476x216.jpg" /></p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_03_11_15_36_384x205.jpg" alt="/images/2015_07_03_11_15_36_384x205.jpg" /></p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_03_11_18_30_499x265.jpg" alt="/images/2015_07_03_11_18_30_499x265.jpg" /></p>

<h3>Raid</h3>

<p>Configure the Software Raid0:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_03_11_19_31_441x260.jpg" alt="/images/2015_07_03_11_19_31_441x260.jpg" /></p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_03_11_20_41_655x244.jpg" alt="/images/2015_07_03_11_20_41_655x244.jpg" /></p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_03_11_22_43_728x243.jpg" alt="/images/2015_07_03_11_22_43_728x243.jpg" /></p>

<p>After Configuration of SoftRaid1, the screen displayed like:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_07_03_11_28_28_687x457.jpg" alt="/images/2015_07_03_11_28_28_687x457.jpg" /></p>

<p>Continue to install.</p>

<h3>Verify Raid.</h3>

<p>Use df and fdisk to verify the partition information:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>clouder@UbuntuRaid1:~$ df -h
</span><span class='line'>Filesystem      Size  Used Avail Use% Mounted on
</span><span class='line'>/dev/md0        9.3G  870M  7.9G  10% /
</span><span class='line'>none            4.0K     0  4.0K   0% /sys/fs/cgroup
</span><span class='line'>udev            235M  4.0K  235M   1% /dev
</span><span class='line'>tmpfs            50M  440K   49M   1% /run
</span><span class='line'>none            5.0M     0  5.0M   0% /run/lock
</span><span class='line'>none            246M     0  246M   0% /run/shm
</span><span class='line'>none            100M     0  100M   0% /run/user
</span><span class='line'>clouder@UbuntuRaid1:~$ sudo fdisk -l
</span><span class='line'>[sudo] password for clouder: 
</span><span class='line'>
</span><span class='line'>Disk /dev/vda: 10.7 GB, 10737418240 bytes
</span><span class='line'>255 heads, 63 sectors/track, 1305 cylinders, total 20971520 sectors
</span><span class='line'>Units = sectors of 1 * 512 = 512 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>Disk identifier: 0x00035942
</span><span class='line'>
</span><span class='line'>   Device Boot      Start         End      Blocks   Id  System
</span><span class='line'>/dev/vda1   *        2048    19922943     9960448   fd  Linux raid autodetect
</span><span class='line'>/dev/vda2        19924990    20969471      522241    5  Extended
</span><span class='line'>/dev/vda5        19924992    20969471      522240   fd  Linux raid autodetect
</span><span class='line'>
</span><span class='line'>Disk /dev/vdb: 10.7 GB, 10737418240 bytes
</span><span class='line'>255 heads, 63 sectors/track, 1305 cylinders, total 20971520 sectors
</span><span class='line'>Units = sectors of 1 * 512 = 512 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>Disk identifier: 0x000715e9
</span><span class='line'>
</span><span class='line'>   Device Boot      Start         End      Blocks   Id  System
</span><span class='line'>/dev/vdb1   *        2048    19922943     9960448   fd  Linux raid autodetect
</span><span class='line'>/dev/vdb2        19924990    20969471      522241    5  Extended
</span><span class='line'>/dev/vdb5        19924992    20969471      522240   fd  Linux raid autodetect
</span><span class='line'>
</span><span class='line'>Disk /dev/md0: 10.2 GB, 10190979072 bytes
</span><span class='line'>2 heads, 4 sectors/track, 2488032 cylinders, total 19904256 sectors
</span><span class='line'>Units = sectors of 1 * 512 = 512 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>Disk identifier: 0x00000000
</span><span class='line'>
</span><span class='line'>Disk /dev/md0 doesn't contain a valid partition table
</span><span class='line'>
</span><span class='line'>Disk /dev/md1: 534 MB, 534446080 bytes
</span><span class='line'>2 heads, 4 sectors/track, 130480 cylinders, total 1043840 sectors
</span><span class='line'>Units = sectors of 1 * 512 = 512 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>Disk identifier: 0x00000000
</span><span class='line'>
</span><span class='line'>Disk /dev/md1 doesn't contain a valid partition table</span></code></pre></td></tr></table></div></figure>


<p>Verify the raid status:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@UbuntuRaid1:/etc/initramfs-tools/conf.d# cat /proc/mdstat 
</span><span class='line'>Personalities : [linear] [multipath] [raid0] [raid1] [raid6] [raid5] [raid4] [raid10] 
</span><span class='line'>md1 : active raid1 vda5[0] vdb5[1]
</span><span class='line'>      521920 blocks super 1.2 [2/2] [UU]
</span><span class='line'>      
</span><span class='line'>md0 : active raid1 vda1[0] vdb1[1]
</span><span class='line'>      9952128 blocks super 1.2 [2/2] [UU]
</span><span class='line'>      
</span><span class='line'>unused devices: &lt;none&gt;</span></code></pre></td></tr></table></div></figure>


<p>Query the status of SoftRaid1:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@UbuntuRaid1:/etc/initramfs-tools/conf.d# sudo mdadm --query --detail /dev/md0
</span><span class='line'>/dev/md0:
</span><span class='line'>        Version : 1.2
</span><span class='line'>  Creation Time : Fri Jul  3 11:24:46 2015
</span><span class='line'>     Raid Level : raid1
</span><span class='line'>     Array Size : 9952128 (9.49 GiB 10.19 GB)
</span><span class='line'>  Used Dev Size : 9952128 (9.49 GiB 10.19 GB)
</span><span class='line'>   Raid Devices : 2
</span><span class='line'>  Total Devices : 2
</span><span class='line'>    Persistence : Superblock is persistent
</span><span class='line'>
</span><span class='line'>    Update Time : Fri Jul  3 11:46:19 2015
</span><span class='line'>          State : clean 
</span><span class='line'> Active Devices : 2
</span><span class='line'>Working Devices : 2
</span><span class='line'> Failed Devices : 0
</span><span class='line'>  Spare Devices : 0
</span><span class='line'>
</span><span class='line'>           Name : UbuntuRaid1:0  (local to host UbuntuRaid1)
</span><span class='line'>           UUID : bc091921:c198c219:7162e35c:bfff3c4e
</span><span class='line'>         Events : 19
</span><span class='line'>
</span><span class='line'>    Number   Major   Minor   RaidDevice State
</span><span class='line'>       0     253        1        0      active sync   /dev/vda1
</span><span class='line'>       1     253       17        1      active sync   /dev/vdb1</span></code></pre></td></tr></table></div></figure>


<h3>Remove One Disk</h3>

<p>Remove one, and see if it could be startup.</p>

<p>Result:  <br/>
Done, it could start into the system.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>clouder@UbuntuRaid1:~$ cat /proc/mdstat 
</span><span class='line'>Personalities : [linear] [multipath] [raid0] [raid1] [raid6] [raid5] [raid4] [raid10] 
</span><span class='line'>md1 : active (auto-read-only) raid1 vda5[1]
</span><span class='line'>      521920 blocks super 1.2 [2/1] [_U]
</span><span class='line'>      
</span><span class='line'>md0 : active raid1 vda1[1]
</span><span class='line'>      9952128 blocks super 1.2 [2/1] [_U]
</span><span class='line'>      
</span><span class='line'>unused devices: &lt;none&gt;</span></code></pre></td></tr></table></div></figure>


<h3>Add A New Empty Disk</h3>

<p>Add a new disk into the system, and first partition.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo fdisk -l 
</span><span class='line'>
</span><span class='line'>Disk /dev/vdb: 10.7 GB, 10737418240 bytes
</span><span class='line'>16 heads, 63 sectors/track, 20805 cylinders, total 20971520 sectors
</span><span class='line'>Units = sectors of 1 * 512 = 512 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>Disk identifier: 0x00000000
</span><span class='line'>
</span><span class='line'>Disk /dev/vdb doesn't contain a valid partition table</span></code></pre></td></tr></table></div></figure>


<p>Clone the partition table from the vda to the newly added partion:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo sfdisk -d /dev/vda &gt; vda.desc
</span><span class='line'>$ cat vda.desc 
</span><span class='line'>$ sudo sfdisk /dev/vdb&lt;./vda.desc</span></code></pre></td></tr></table></div></figure>


<p>Now Add the new disk for usage:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>clouder@UbuntuRaid1:~$ cat /proc/mdstat 
</span><span class='line'>Personalities : [linear] [multipath] [raid0] [raid1] [raid6] [raid5] [raid4] [raid10] 
</span><span class='line'>md1 : active (auto-read-only) raid1 vda5[1]
</span><span class='line'>      521920 blocks super 1.2 [2/1] [_U]
</span><span class='line'>      
</span><span class='line'>md0 : active raid1 vda1[1]
</span><span class='line'>      9952128 blocks super 1.2 [2/1] [_U]
</span><span class='line'>      
</span><span class='line'>unused devices: &lt;none&gt;
</span><span class='line'>clouder@UbuntuRaid1:~$ sudo mdadm --manage /dev/md0 --add /dev/vdb1
</span><span class='line'>mdadm: added /dev/vdb1
</span><span class='line'>clouder@UbuntuRaid1:~$ sudo mdadm --manage /dev/md1 --add /dev/vdb5
</span><span class='line'>mdadm: added /dev/vdb5
</span><span class='line'>clouder@UbuntuRaid1:~$ cat /proc/mdstat 
</span><span class='line'>Personalities : [linear] [multipath] [raid0] [raid1] [raid6] [raid5] [raid4] [raid10] 
</span><span class='line'>md1 : active raid1 vdb5[2] vda5[1]
</span><span class='line'>      521920 blocks super 1.2 [2/1] [_U]
</span><span class='line'>        resync=DELAYED
</span><span class='line'>      
</span><span class='line'>md0 : active raid1 vdb1[2] vda1[1]
</span><span class='line'>      9952128 blocks super 1.2 [2/1] [_U]
</span><span class='line'>      [===&gt;.................]  recovery = 16.6% (1662144/9952128) finish=1.8min speed=75552K/sec
</span><span class='line'>      
</span><span class='line'>unused devices: &lt;none&gt;</span></code></pre></td></tr></table></div></figure>


<h3>Known Bugs</h3>

<p>Error and Solution:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>error:  Diskfilter writes are not supported
</span><span class='line'>
</span><span class='line'>Edit :/etc/grub.d/10_linux
</span><span class='line'>
</span><span class='line'>Replace 'quick_boot="1"' with 'quick_boot="0"'
</span><span class='line'>
</span><span class='line'>Then :
</span><span class='line'>
</span><span class='line'>sudo update-grub
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Insert Public Key Into Cobbler Deployed System]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/29/insert-public-key-into-cobbler-deployed-system/"/>
    <updated>2015-06-29T14:13:08+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/29/insert-public-key-into-cobbler-deployed-system</id>
    <content type="html"><![CDATA[<p>First edit your kickstart file, add following line before the end of your kickstart:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer kickstarts]# pwd
</span><span class='line'>/var/lib/cobbler/kickstarts
</span><span class='line'>[root@z_WHServer kickstarts]# cat sample_end.ks
</span><span class='line'># Start final steps
</span><span class='line'>+ $SNIPPET('publickey_root')
</span><span class='line'>$SNIPPET('kickstart_done')
</span><span class='line'># End final steps
</span><span class='line'>%end</span></code></pre></td></tr></table></div></figure>


<p>And the <code>publickey_root</code> should be edited as following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer snippets]# pwd
</span><span class='line'>/var/lib/cobbler/snippets
</span><span class='line'>[root@z_WHServer snippets]# cat publickey_root
</span><span class='line'># Install CobblerServer's(10.47.58.2) public key for root user
</span><span class='line'>cd /root
</span><span class='line'>mkdir --mode=700 .ssh
</span><span class='line'>cat &gt;&gt; .ssh/authorized_keys &lt;&lt; "PUBLIC_KEY"
</span><span class='line'>ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA3B3GtGuKY0l2Ak9+WSkorY7R+Cx5/u3RMua/7GrvP05IPywQdkR+mqwdRydNjyhB96nHlYZtr8Fbfn5iwqn0j8dz8wmTZicBNeRqIdbe/YUje5NjXxDXjYda63VfDhpgzJ53KICTx6pBhGaeOKS/U5HqCpDbF7ODP8siU7bRhk1LkIQ6VwZYUg7b0oR+Sw6XJ31Z7gs4CWF6zfjfQQoF7EoMA+dnqvt2K4PQPXNSBJQx3qb9jyXIXvo333PcfIX6mD1TW1wDAIXLm4qz4mi7C8Ax9h+T/D98r08WX360vC5Tzr8feXMs6H4il4s4Ftq7RVoqCNKmG3AB1LTp4AQAzw== root@z_WHServer
</span><span class='line'>PUBLIC_KEY
</span><span class='line'>chmod 600 .ssh/authorized_keys
</span><span class='line'>cat &gt;&gt; .ssh/config &lt;&lt;EOF
</span><span class='line'>StrictHostKeyChecking no
</span><span class='line'>UserKnownHostsFile /dev/null
</span><span class='line'>EOF</span></code></pre></td></tr></table></div></figure>


<p>Better you run <code>cobber sync</code> after updating your kickstart file.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Tips(2)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/29/linux-tips-2/"/>
    <updated>2015-06-29T09:27:17+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/29/linux-tips-2</id>
    <content type="html"><![CDATA[<h3>1. XenCenter Installation</h3>

<p>Just use your windows&rsquo;s browser point to your XenServer IP Address, Download the XenCenter, and install it.</p>

<p>Update Some tools on XenServer:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim /etc/yum.repos.d/CentOS-Base.repo
</span><span class='line'>...
</span><span class='line'>enabled=1
</span><span class='line'>...
</span><span class='line'>$ yum install -y lm_sensors</span></code></pre></td></tr></table></div></figure>


<p>After installation of lm_sensors you could see more detailed information on XenServer.</p>

<h3>2. Disable Specified Repository</h3>

<p>Since citrix have no data in its repository, simply disable it.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ yum update --disablerepo=citrix</span></code></pre></td></tr></table></div></figure>


<h3>3. Yum Shell</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum shell
</span><span class='line'>remove ffmpeg-libpostproc
</span><span class='line'>remove ffmpeg
</span><span class='line'>install ffmpeg-compat
</span><span class='line'>run</span></code></pre></td></tr></table></div></figure>


<h3>4. Install lm_sensors In XenServer</h3>

<p>The default lm_sensors could not be insalled due to dependency errors, so we download the source code from lm_sensors website and manually build and install it:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget http://dl.lm-sensors.org/lm-sensors/releases/lm_sensors-3.4.0.tar.bz2
</span><span class='line'>$ tar xzvf lm_sensors-3.4.0.tar.bz2
</span><span class='line'>$ cd lm_sensors
</span><span class='line'>$ yum install -y gcc make flex bison 
</span><span class='line'>$ make && make install
</span><span class='line'>$ export PATH=/usr/local/bin:$PATH
</span><span class='line'>$ sensors-detect
</span><span class='line'>$ sensors</span></code></pre></td></tr></table></div></figure>


<p>In 79 machine, sensors won&rsquo;t printout cpu fan, solved by:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ modprobe it87 force_id=0x8728</span></code></pre></td></tr></table></div></figure>


<p>Or configure the modprobe.d:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root:/etc/modprobe.d]# cat it87.conf 
</span><span class='line'>options it87 force_id=0x8603
</span><span class='line'>
</span><span class='line'>[root:/etc/modprobe.d]# pwd
</span><span class='line'>/etc/modprobe.d</span></code></pre></td></tr></table></div></figure>


<h3>5. Detect an AMD Chipset</h3>

<p>First using <code>sensors-detect</code> for detecting the sensors, the result is listed as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Now follows a summary of the probes I have just done.
</span><span class='line'>
</span><span class='line'>Driver `w83627ehf':
</span><span class='line'>  * ISA bus, address 0x290
</span><span class='line'>    Chip `Nuvoton W83677HG-I (NCT5572D/NCT6771F/NCT6772F/NCT6775F) Super IO Sensors' (confidence: 9)
</span><span class='line'>
</span><span class='line'>Driver `k10temp' (autoloaded):
</span><span class='line'>  * Chip `AMD Family 12h and 14h thermal sensors' (confidence: 9)</span></code></pre></td></tr></table></div></figure>


<p>Now go to the modules directory for finding out the corresponding driver:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@xenserver-WolfHunter 3.10.0+2]# find . | grep -i w83
</span><span class='line'>./kernel/drivers/hwmon/w83795.ko
</span><span class='line'>./kernel/drivers/hwmon/w83627hf.ko
</span><span class='line'>./kernel/drivers/hwmon/w83l786ng.ko
</span><span class='line'>./kernel/drivers/hwmon/w83792d.ko
</span><span class='line'>./kernel/drivers/hwmon/w83l785ts.ko
</span><span class='line'>./kernel/drivers/hwmon/w83791d.ko
</span><span class='line'>./kernel/drivers/hwmon/w83793.ko
</span><span class='line'>./kernel/drivers/hwmon/w83781d.ko
</span><span class='line'>./kernel/drivers/hwmon/w83627ehf.ko
</span><span class='line'>[root@xenserver-WolfHunter 3.10.0+2]# pwd
</span><span class='line'>/lib/modules/3.10.0+2
</span><span class='line'>[root@xenserver-WolfHunter 3.10.0+2]# modprobe w83627ehf.ko</span></code></pre></td></tr></table></div></figure>


<p>Now you could detect more infos, add to automatically:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@xenserver-WolfHunter modprobe.d]# cat w83627ehf.conf
</span><span class='line'>#!/bin/sh 
</span><span class='line'>/sbin/insmod /lib/modules/3.10.0+2/kernel/drivers/hwmon/w83627ehf.ko</span></code></pre></td></tr></table></div></figure>


<h3>6. Headless Ubuntu</h3>

<p>Headless Ubuntu, for updating grub.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Add: GRUB_RECORDFAIL_TIMEOUT = 15 in /etc/default/grub, and run "sudo update-grub". You can change the 15 to any arbitrary number of seconds that you like.</span></code></pre></td></tr></table></div></figure>


<h3>7.Joggler Bootloader Configuration</h3>

<p>Notice there are 2 systems available on Joggler.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[dash@/run/media/dash/linux-boot]$ cat grub.cfg
</span><span class='line'>loadfont /unicode.pf2
</span><span class='line'>terminal_output gfxterm
</span><span class='line'>set timeout=5
</span><span class='line'>menuentry "Ubuntu 12.04 LTS (Precise) - 3.2.32joggler1" {
</span><span class='line'>  # text mode
</span><span class='line'>  #linux /vmlinuz-3.2.32joggler1 root=LABEL=linux-root 3 ro text pci=routeirq
</span><span class='line'>  # Graphical mode
</span><span class='line'>  linux /vmlinuz-3.2.32joggler1 root=LABEL=linux-root 3 ro pci=routeirq
</span><span class='line'>  initrd /initrd.img-3.2.32joggler1
</span><span class='line'>}
</span><span class='line'>###############Xubuntu#####################3
</span><span class='line'>#menuentry "XUbuntu 12.04 LTS (Precise) - 3.2.32joggler1" {
</span><span class='line'>#  linux /vmlinuz-3.2.32joggler1 root=LABEL=Xubuntu ro quiet splash 
</span><span class='line'>#  initrd /initrd.img-3.2.32joggler1
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>8. Use Joggler As a DigitalFrame</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/sh
</span><span class='line'>#
</span><span class='line'># Script to run Digital Picture Frame using Feh
</span><span class='line'># drware@thewares.net
</span><span class='line'>#
</span><span class='line'>
</span><span class='line'># Change number below to the duration, in seconds
</span><span class='line'># for each photo to be displayed
</span><span class='line'>DELAY="5"
</span><span class='line'>
</span><span class='line'># hide the cursor after 15 seconds
</span><span class='line'>#/usr/bin/unclutter -idle 15 &
</span><span class='line'>
</span><span class='line'># Start slide show
</span><span class='line'># /usr/bin/feh --quiet --recursive --randomize --full-screen \ --slideshow-delay $DELAY /home/dash/800480/
</span><span class='line'>/usr/bin/feh --hide-pointer -D $DELAY --quiet --recursive --randomize --full-screen \ --slideshow-delay $DELAY /home/dash/800480 &
</span><span class='line'>
</span><span class='line'># Phone home and sync
</span><span class='line'># /home/dsl/frame/rsync.sh
</span><span class='line'>
</span><span class='line'>exit 0</span></code></pre></td></tr></table></div></figure>


<h3>9. Resolving git conflicts</h3>

<p>Once you installed meld or other tools, using following commands.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git mergetool</span></code></pre></td></tr></table></div></figure>


<h3>10. Enlarge Volume</h3>

<p>Enlarge the qemu disk via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo qemu-img resize abc.qcow2 +200GB</span></code></pre></td></tr></table></div></figure>


<p>Enlarge the disk via following command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@fuel ~]# df -h
</span><span class='line'>Filesystem            Size  Used Avail Use% Mounted on
</span><span class='line'>/dev/mapper/os-root   9.6G  976M  8.1G  11% /
</span><span class='line'>/dev/mapper/os-var     27G  5.4G   20G  22% /var
</span><span class='line'>[root@fuel ~]# lvs
</span><span class='line'>  LV           VG   Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
</span><span class='line'>  root         os   -wi-ao----  9.78g                                                    
</span><span class='line'>  swap         os   -wi-ao----  2.94g                                                    
</span><span class='line'>  var          os   -wi-ao---- 26.66g       
</span><span class='line'> </span></code></pre></td></tr></table></div></figure>


<p>Use gparted livecd for enlarge the disk, now you could enjoy the whole 300GiB disk size.</p>

<p>Resize the var partition:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Disk /dev/mapper/os-var: 28.6 GB, 28621930496 bytes
</span><span class='line'>255 heads, 63 sectors/track, 3479 cylinders
</span><span class='line'>Units = cylinders of 16065 * 512 = 8225280 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>[root@fuel ~]# lvextend -L+50G /dev/mapper/os-var
</span><span class='line'>  Size of logical volume os/var changed from 26.66 GiB (853 extents) to 76.66 GiB (2453 extents).
</span><span class='line'>  Logical volume var successfully resized
</span><span class='line'>######Reboot to gdisk iso, and resize2fs.   
</span><span class='line'># resize2fs /dev/mapper/os-var</span></code></pre></td></tr></table></div></figure>


<h3>11. gpg Generation</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ apt-get install -y rng-tools
</span><span class='line'>$ rngd -r /dev/urandom
</span><span class='line'>$ gpg --gen-key
</span><span class='line'>$ gpg --list-secret-keys
</span><span class='line'>$ gpg-agent --homedir /home/dash/.gnupg --use-standard-socket --daemon
</span><span class='line'>$ sudo apt-get install gnupg</span></code></pre></td></tr></table></div></figure>


<h3>12. Syslogd related</h3>

<p>Redirect bash script&rsquo;s output to syslogd:   <br/>
<a href="http://urbanautomaton.com/blog/2014/09/09/redirecting-bash-script-output-to-syslog/">http://urbanautomaton.com/blog/2014/09/09/redirecting-bash-script-output-to-syslog/</a></p>

<p>Then limit the syslogd activity:</p>

<p>via logrotate, syslogd don&rsquo;t care about the log file size.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>So in the end the top portion of my /etc/logrotate.conf file looks like this:
</span><span class='line'>
</span><span class='line'>size 250M
</span><span class='line'>rotate 2
</span><span class='line'>create
</span><span class='line'>#compress
</span><span class='line'>include /etc/logrotate.d</span></code></pre></td></tr></table></div></figure>


<h3>13. Brake</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://www.miroslavnovak.com/qemu-brake_en.php</span></code></pre></td></tr></table></div></figure>


<h3>14. install specified pip version</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo pip install "PyOpenSSL&gt;=0.13"</span></code></pre></td></tr></table></div></figure>


<h3>15. Tips for using vFense</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   57  sudo pip install "PyOpenSSL&gt;=0.13"
</span><span class='line'>   58  apt-cache search libffi
</span><span class='line'>   59  sudo apt-get install -y libffi-dev
</span><span class='line'>dash@fenseServer:~$ sudo mkdir /usr/share/rethinkdb
</span></code></pre></td></tr></table></div></figure>


<h3>16. Cgroup error</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>cloudstack4.5.1 在centos7.1 上的 bug 
</span><span class='line'>此bug 会导致 系统vm state 状态获取不到
</span><span class='line'>在agent的log中获取到的错误信息为
</span><span class='line'>Controller 'cpuacct' is not wanted, but 'cpu' is co-mounted: Invalid argument
</span><span class='line'>
</span><span class='line'>解决方法
</span><span class='line'>
</span><span class='line'>注释这个文件中的这行 /usr/lib64/python2.7/site-packages/cloudutils/serviceConfig.py
</span><span class='line'>cfo.addEntry("cgroup_controllers", "[\"cpu\"]")
</span><span class='line'>和这个文件中的这行 /etc/libvirt/qemu.conf
</span><span class='line'>cgroup_controllers=["cpu"]
</span><span class='line'>重启libvirtd服务
</span><span class='line'>
</span><span class='line'>官网bug连接：https://issues.apache.org/jira/browse/CLOUDSTACK-8443</span></code></pre></td></tr></table></div></figure>


<h3>17. PXE Boot Debian:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Install:   
</span><span class='line'>http://backreference.org/2013/12/23/diskless-iscsi-boot-with-pxe-howto/
</span><span class='line'>iscsi:    
</span><span class='line'>http://www.sysprobs.com/guide-how-to-create-iscsi-storage-disks-freenas-08
</span><span class='line'>Trouble Shooting: Use the latest version!!!
</span><span class='line'>https://www.howtoforge.com/community/threads/debian-boot-over-iscsi-problem.67536/#post-321516
</span><span class='line'>iscsi and kvm:
</span><span class='line'>https://www.berrange.com/posts/2010/05/05/provisioning-kvm-virtual-machines-on-iscsi-the-hard-way-part-2-of-2/</span></code></pre></td></tr></table></div></figure>


<h3>18. Quickly Connect to RDP</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ssh -L 2333:10.0.0.2:3389 192.168.10.187 -l root
</span><span class='line'># rdesktop -u YourUseName -p YourPassword localhost:2333 -g 1400x800</span></code></pre></td></tr></table></div></figure>


<h3>18. nginx enable directory displaying and follow links:</h3>

<p>On CentOS 7, do following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/nginx/nginx.conf
</span><span class='line'>http {
</span><span class='line'>        disable_symlinks off;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>server {
</span><span class='line'>        root         /var/www/html;
</span><span class='line'>
</span><span class='line'>        location / {
</span><span class='line'>                        autoindex on;
</span><span class='line'>        }</span></code></pre></td></tr></table></div></figure>


<p>Restart the nginx service now you could get the local directory avaiable in browser.</p>

<h3>20. Get Back the passwd</h3>

<p>In Grub, add <code>single</code> at the <code>linux   /boot/vmlinuz-</code>&hellip;&hellip;</p>

<p>Press F10, and now you can do whatever you want to do.</p>

<h3>21. Enable Nested KVM</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># virsh edit VM_NAME
</span><span class='line'>&lt;vcpu placement='static' cpuset='0-3'&gt;4&lt;/vcpu&gt;
</span><span class='line'>Also change the cpu model.  
</span><span class='line'>&lt;cpu&gt;
</span><span class='line'>....
</span><span class='line'>&lt;/cpu&gt; 
</span><span class='line'>remove the tsc related item.   </span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[For Deploying 148 Tips]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/25/for-deploying-148-tips/"/>
    <updated>2015-06-25T11:56:41+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/25/for-deploying-148-tips</id>
    <content type="html"><![CDATA[<p>The whole deployment procedure is listed as following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cobbler system add --name=node148 --profile=CentOS-6.5-x86_64 --mac=52:54:00:9e:ea:58 --interface=eth0 --ip-address=10.47.58.148 --hostname=node148 --gateway=10.47.58.1 --dns-name=node148
</span><span class='line'># vim /root/Code/Ansible/hosts
</span><span class='line'>[node148]
</span><span class='line'>10.47.58.148
</span><span class='line'># ssh-keyscan 10.47.58.148&gt;&gt;/root/.ssh/known_hosts 
</span><span class='line'># ansible-playbook /root/Code/Ansible/ssh-addkey.yml --ask-pass
</span><span class='line'># vim /root/Code/Ansible/CloudStack-Ansible-Playbook/cloudstack.yml
</span><span class='line'>      ManagementIP: 10.47.58.148
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node148 /root/Code/Ansible/CloudStack-Ansible-Playbook/cloudstack.yml --tags=pip
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node148 /root/Code/Ansible/CloudStack-Ansible-Playbook/cloudstack.yml --tags=base
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node148 /root/Code/Ansible/CloudStack-Ansible-Playbook/cloudstack.yml --tags=mysql
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node148 /root/Code/Ansible/CloudStack-Ansible-Playbook/cloudstack.yml --tags=mysql3306
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node148 /root/Code/Ansible/CloudStack-Ansible-Playbook/cloudstack.yml --tags=csmanagement</span></code></pre></td></tr></table></div></figure>


<p>Or, all-in-one for tags:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node149 /root/Code/Ansible/CloudStack-Ansible-Playbook/cloudstack.yml --tags=pip,base,mysql,mysql3306,csmanagement </span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(6)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/24/wh-worktips-6/"/>
    <updated>2015-06-24T11:54:12+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/24/wh-worktips-6</id>
    <content type="html"><![CDATA[<h3>Migration</h3>

<p>So this time we will migrate the whole machine, that is the Cobbler Server from one physical machine to another one. The steps are:  <br/>
1. Transfer the harddisk files.   <br/>
2. Edit the <code>/etc/udev/rules.d/70-persistent-net.rules</code>, Change the eth1 to eth0, and remove the eth0 item.  <br/>
3. Edit the <code>/etc/sysconfig/network-scripts/ifcfg-eth0</code>, its mac address to the one you specified on step 2.   <br/>
4. Restart the machine.</p>

<h3>Modification &amp;&amp; Test</h3>

<p>Create a new machine, which mac address is <code>52:54:00:3a:87:4e</code>, and define it on Cobbler server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer ~]# cobbler system add --name=node147 --profile=CentOS-6.5-x86_64 --mac=52:54:00:3a:87:4e --interface=eth0 --ip-address=10.47.58.147 --hostname=node147 --gateway=10.47.58.1 --dns-name=node147</span></code></pre></td></tr></table></div></figure>


<p>Now bootup the machine and let it be deployed by cobbler server. The deployment time depends on your disk speed.</p>

<p>At the same time, edit the Ansible configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer Ansible]# cat hosts
</span><span class='line'>[node147]
</span><span class='line'>10.47.58.147
</span><span class='line'>[root@z_WHServer Ansible]# pwd
</span><span class='line'>/root/Code/Ansible</span></code></pre></td></tr></table></div></figure>


<p>Copy the repository to the <code>10.47.58.2:/var/www/html/</code>, and edit the Ansible configuration.   <br/>
And Also configure the nfs server for the second host, previously we use the one we got from the external nfs server.  <br/>
Also the download vhd template files.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ scp -r ./4.4/ root@10.47.58.2:/var/www/html/
</span><span class='line'>[root@z_WHServer html]# chmod 777 -R 4.4
</span><span class='line'>[root@z_WHServer CloudStack-Ansible-Playbook]# vim templates/cloudstack.repo.j2
</span><span class='line'>[cloudstack]
</span><span class='line'>name=cloudstack
</span><span class='line'>baseurl=http://10.47.58.2/4.4/
</span><span class='line'>clouder@pc121:/home/juju$ scp ./systemvm64template-* root@10.47.58.2:/var/www/html/
</span><span class='line'>root@10.47.58.2's password: 
</span><span class='line'>systemvm64template-2014-06-23-master-xen.vhd.bz2                                                             100%  237MB  59.4MB/s   00:04 
</span><span class='line'>systemvm64template-4.4.1-7-kvm.qcow2.bz2                                                                     100%  291MB  36.4MB/s   00:08
</span><span class='line'>clouder@pc121:/home/juju$ scp ./vhd-util root@10.47.58.2:/var/www/html/
</span><span class='line'>[root@z_WHServer html]# chmod 777 systemvm64template-*
</span><span class='line'>[root@z_WHServer html]# chmod 777 vhd-util
</span><span class='line'>[root@z_WHServer html]# vim /etc/exports 
</span><span class='line'>/home/export *(rw,async,no_root_squash,no_subtree_check)
</span><span class='line'>[root@z_WHServer html]# mkdir -p /home/export
</span><span class='line'>[root@z_WHServer html]# chmod 777 -R /home/export/
</span><span class='line'>[root@z_WHServer html]# chkconfig nfs on
</span><span class='line'>[root@z_WHServer html]# chkconfig rpcbind on
</span><span class='line'>[root@z_WHServer html]# service nfs restart
</span><span class='line'>[root@z_WHServer html]# service rpcbind restart
</span><span class='line'>[root@z_WHServer html]# iptables -D INPUT -j REJECT --reject-with icmp-host-prohibited
</span><span class='line'>[root@z_WHServer home]# chown -R nobody /home/export/
</span><span class='line'>[root@z_WHServer CloudStack-Ansible-Playbook]# vim cloudstack.yml
</span><span class='line'>.......
</span><span class='line'>    CSManagement:
</span><span class='line'>      ManagementIP: 10.47.58.147
</span><span class='line'>      SecondaryMount: /secondary
</span><span class='line'>      NFSHost: 10.47.58.2
</span><span class='line'>      NFSSecondaryShare: /home/export
</span><span class='line'>      SysTemplateURLurl43: http://10.47.58.2/systemvm64template-2014-06-23-master-xen.vhd.bz2
</span><span class='line'>      SysTemplateURLurl44: http://10.47.58.2/systemvm64template-4.4.1-7-kvm.qcow2.bz2 
</span><span class='line'>      SysTemplateURLhv: xenserver
</span><span class='line'>      VhdutilURL: http://10.47.58.2/vhd-util
</span><span class='line'>.....</span></code></pre></td></tr></table></div></figure>


<p>Now deploy the playbooks via the same process in:   <br/>
<a href="http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-4/">http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-4/</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cd /root/Code/Ansible/CloudStack-Ansible-Playbook
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=pip
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=base
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=mysql
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=mysql3306
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=csmanagement </span></code></pre></td></tr></table></div></figure>


<p>Visit
<a href="http://10.47.58.147:8080/client">http://10.47.58.147:8080/client</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Newest Version of Cobbler]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/24/install-newest-version-of-cobbler/"/>
    <updated>2015-06-24T09:38:50+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/24/install-newest-version-of-cobbler</id>
    <content type="html"><![CDATA[<h3>Background</h3>

<p>Cobbler has changed its homepage from <code>www.cobblerd.org</code> to <code>http://cobbler.github.io/</code>, thus some configuration will be be failed. In order to solve these problems, we have to upgrade to the newest version, current newest version is <code>2.6.9</code>.</p>

<h3>Download And Install</h3>

<p>Go to <a href="http://cobbler.github.io/downloads/2.6.x.html">http://cobbler.github.io/downloads/2.6.x.html</a> for selecting your distribution, and download them to your folder. Mine is configured via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/CentOS_CentOS-6/home:libertas-ict:cobbler26.repo
</span><span class='line'>$ cp home\:libertas-ict\:cobbler26.repo /etc/yum.repos.d/cobbler26.repo
</span><span class='line'>$ yum install -y cobbler cobbler-web</span></code></pre></td></tr></table></div></figure>


<h3>Configuration</h3>

<p>After installation, configure your newest cobbler via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cobbler sync
</span><span class='line'>$ reboot
</span><span class='line'>$ cobbler signature update</span></code></pre></td></tr></table></div></figure>


<p>By updating the signature of the cobbler, the newest system will be supported, like Ubuntu15.04, etc.</p>

<p>You can also update all of the loaders via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cobbler get-loaders --force
</span><span class='line'># cobbler sync</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Import More ISOs in Cobbler]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/23/import-more-isos-in-cobbler/"/>
    <updated>2015-06-23T20:52:09+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/23/import-more-isos-in-cobbler</id>
    <content type="html"><![CDATA[<h3>Ubuntu12.04</h3>

<p>Since you have the iso files, import it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer iso]# mount -t iso9660 -o loop /mnt/iso/ubuntu-12.04.3-server-amd64.iso /mnt1
</span><span class='line'>[root@CobblerServer iso]# cobbler import --name=Ubuntu-12.04 --arch=x86_64 --path=/mnt1/
</span><span class='line'>[root@CobblerServer iso]# cobbler profile list
</span><span class='line'>   CentOS-7-x86_64
</span><span class='line'>   Ubuntu-12.04-x86_64
</span><span class='line'>   Ubuntu14.04-x86_64</span></code></pre></td></tr></table></div></figure>


<p>To make it quickly deployment, visit:    <br/>
<a href="http://purplepalmdash.github.io/blog/2015/05/18/my-configuration-on-cobbler-for-deploying-ubuntu12-dot-04/">http://purplepalmdash.github.io/blog/2015/05/18/my-configuration-on-cobbler-for-deploying-ubuntu12-dot-04/</a></p>

<p>Edit its profile like following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer kickstarts]# cobbler profile edit --name=Ubuntu-12.04-x86_64 --kickstart=/var/lib/cobbler/kickstarts/ubuntu1204.seed </span></code></pre></td></tr></table></div></figure>


<p>Create a new virtual machine for testing.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer kickstarts]# cobbler system add --name=test1204 --profile=Ubuntu-12.04-x86_64 --mac=52:54:00:e4:2c:df --interface=eth0 --ip-address=10.3.3.33 --hostname=test1204 --gateway=10.3.3.1 --dns-name=test1204</span></code></pre></td></tr></table></div></figure>


<p>Testing the tftpserver via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[dash@~]$ tftp 10.3.3.3   
</span><span class='line'>tftp&gt; get /pxelinux.0
</span><span class='line'>tftp&gt; quit
</span><span class='line'>[dash@~]$ ls pxelinux.0 
</span><span class='line'>pxelinux.0</span></code></pre></td></tr></table></div></figure>


<p>Trouble-Shooting, you should very careful on your pxelinux.0 file, make sure you have the correct ones. Recently it&rsquo;s hard to get the right pxelinux.0 from cobbler loader sync.</p>

<h3>Ubuntu15.04</h3>

<p>Import the iso via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer iso]# mount -t iso9660 -o loop ./ubuntu-15.04-server-amd64.iso /mnt1/
</span><span class='line'>[root@CobblerServer iso]# cobbler import --name=Ubuntu-15.04 --arch=x86_64 --path=/mnt1</span></code></pre></td></tr></table></div></figure>


<p>Notice, here you will met Signature mismatch problem, do following:   <br/>
First update Cobbler: ?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim /etc/yum.repos.d/cobbler26.repo
</span><span class='line'>[home_libertas-ict_cobbler26]
</span><span class='line'>name=Cobbler (2.6.x) (CentOS_CentOS-6)
</span><span class='line'>type=rpm-md
</span><span class='line'>baseurl=http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/CentOS_CentOS-6/
</span><span class='line'>gpgcheck=1
</span><span class='line'>gpgkey=http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/CentOS_CentOS-6/repodata/repomd.xml.key
</span><span class='line'>enabled=1
</span><span class='line'>$ sudo yum install -y cobbler cobbler-web</span></code></pre></td></tr></table></div></figure>


<p>And Trouble-Shooting for iptables(If you use redsocks):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># iptables -t nat -I OUTPUT -d 10.3.3.0/24 -j RETURN</span></code></pre></td></tr></table></div></figure>


<p>Then signature update will OK:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer redsocks]# cobbler signature update
</span><span class='line'>task started: 2015-06-23_144247_sigupdate
</span><span class='line'>task started (id=Updating Signatures, time=Tue Jun 23 14:42:47 2015)
</span><span class='line'>Successfully got file from http://cobbler.github.com/signatures/2.6.x/latest.json
</span><span class='line'>*** TASK COMPLETE ***
</span></code></pre></td></tr></table></div></figure>


<p>Re-import:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer iso]# cobbler import --name=Ubuntu-12.04 --arch=x86_64 --path=/mnt1/
</span><span class='line'>*** TASK COMPLETE ***
</span><span class='line'>[root@CobblerServer mnt]# cobbler profile list
</span><span class='line'>   CentOS-7-x86_64
</span><span class='line'>   Ubuntu-12.04-x86_64
</span><span class='line'>   Ubuntu-15.04-x86_64
</span><span class='line'>   Ubuntu14.04-x86_64</span></code></pre></td></tr></table></div></figure>


<p>Edit the profile via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer lib]# cd /var/lib/cobbler/kickstarts/
</span><span class='line'>[root@CobblerServer kickstarts]# ls
</span><span class='line'>default.ks    esxi5-ks.cfg      legacy.ks     sample_autoyast.xml  sample_esx4.ks   sample_esxi5.ks  sample_old.seed  ubuntu1204.seed
</span><span class='line'>esxi4-ks.cfg  install_profiles  pxerescue.ks  sample_end.ks        sample_esxi4.ks  sample.ks        sample.seed
</span><span class='line'>[root@CobblerServer kickstarts]# vim ubuntu1504.seed</span></code></pre></td></tr></table></div></figure>


<p>Test it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ qemu-img create -f qcow2 Cobbler1504Test.qcow2 100G
</span><span class='line'>$ cobbler profile edit --name=Ubuntu-15.04-x86_64 --kickstart=/var/lib/cobbler/kickstarts/ubuntu1504.seed
</span><span class='line'>$  cobbler system add --name=test1504 --profile=Ubuntu-15.04-x86_64 --mac=52:54:00:2e:c0:ff --interface=eth0 --ip-address=10.3.3.34 --hostname=test1504 --gateway=10.3.3.1 --dns-name=test1504
</span></code></pre></td></tr></table></div></figure>


<p>Installed failed, verify it tomorrow.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(5)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-5/"/>
    <updated>2015-06-19T15:29:56+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-5</id>
    <content type="html"><![CDATA[<p>This worktips will enable the visibility for ansible deployed nodes.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer Code]# cd ansible-tower-setup-2.1.5/
</span><span class='line'>[root@z_WHServer ansible-tower-setup-2.1.5]# ls
</span><span class='line'>ansible.cfg  configure  group_vars  host_vars  README.md  roles  setup.sh  site.yml</span></code></pre></td></tr></table></div></figure>


<p>Later I will finish this. But remember the tutorial pdf works well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(4)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-4/"/>
    <updated>2015-06-19T11:32:04+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-4</id>
    <content type="html"><![CDATA[<h3>A Whole Deployment</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pwd
</span><span class='line'>/home/juju/img/WolfHunter/WH
</span><span class='line'>$ qemu-img create -f qcow2 z_Node113.qcow2 100G
</span><span class='line'>$ </span></code></pre></td></tr></table></div></figure>


<p>Create Virtual Machine:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_06_19_11_39_45_474x366.jpg" alt="/images/2015_06_19_11_39_45_474x366.jpg" /></p>

<p>Memory:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_06_19_11_40_51_477x363.jpg" alt="/images/2015_06_19_11_40_51_477x363.jpg" /></p>

<p><img src="http://purplepalmdash.github.io/images/2015_06_19_11_41_58_482x369.jpg" alt="/images/2015_06_19_11_41_58_482x369.jpg" /></p>

<p>Click <code>Customize configuration before install</code>:</p>

<p>VirtIO Disk 1:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_06_19_11_43_22_478x309.jpg" alt="/images/2015_06_19_11_43_22_478x309.jpg" /></p>

<p>Virtual Network Interface:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_06_19_11_44_12_553x205.jpg" alt="/images/2015_06_19_11_44_12_553x205.jpg" /></p>

<p>Notice the mac address is <code>52:54:00:9a:73:1a</code>.</p>

<h3>Cobbler Customization</h3>

<p>Define the node:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer ~]#  cobbler system add --name=node113 --profile=CentOS-6.5-x86_64 --mac=52:54:00:9a:73:1a --interface=eth0 --ip-address=10.47.58.113 --hostname=node113 --gateway=10.47.58.1 --dns-name=node113</span></code></pre></td></tr></table></div></figure>


<h3>Begin Installation</h3>

<p><img src="http://purplepalmdash.github.io/images/2015_06_19_11_49_09_685x401.jpg" alt="/images/2015_06_19_11_49_09_685x401.jpg" /></p>

<h3>Configure</h3>

<p>Notice the ssh failed to 112 because we poweroff this node.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keyscan 10.47.58.113&gt;&gt;/root/.ssh/known_hosts 
</span><span class='line'># 10.47.58.113 SSH-2.0-OpenSSH_5.3
</span><span class='line'>
</span><span class='line'># cd /root/Code/Ansible
</span><span class='line'># ansible-playbook ssh-addkey.yml --ask-pass
</span><span class='line'>SSH password: 
</span><span class='line'>
</span><span class='line'>PLAY [all] ******************************************************************** 
</span><span class='line'>
</span><span class='line'>TASK: [install ssh key] ******************************************************* 
</span><span class='line'>changed: [10.47.58.113]
</span><span class='line'>fatal: [10.47.58.112] =&gt; SSH Error: ssh: connect to host 10.47.58.112 port 22: Connection timed out
</span><span class='line'>    while connecting to 10.47.58.112:22
</span><span class='line'>It is sometimes useful to re-run the command using -vvvv, which prints SSH debug output to help diagnose the issue.
</span><span class='line'>
</span><span class='line'>PLAY RECAP ******************************************************************** 
</span><span class='line'>           to retry, use: --limit @/root/ssh-addkey.retry
</span><span class='line'>
</span><span class='line'>10.47.58.112               : ok=0    changed=0    unreachable=1    failed=0   
</span><span class='line'>10.47.58.113               : ok=1    changed=1    unreachable=0    failed=0  </span></code></pre></td></tr></table></div></figure>


<p>Check:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ansible all -m shell -a "uptime"
</span><span class='line'>10.47.58.113 | success | rc=0 &gt;&gt;
</span><span class='line'> 04:32:21 up 32 min,  3 users,  load average: 0.00, 0.00, 0.00
</span><span class='line'>
</span><span class='line'>10.47.58.112 | FAILED =&gt; SSH Error: ssh: connect to host 10.47.58.112 port 22: No route to host
</span><span class='line'>    while connecting to 10.47.58.112:22
</span><span class='line'>It is sometimes useful to re-run the command using -vvvv, which prints SSH debug output to help diagnose the issue.</span></code></pre></td></tr></table></div></figure>


<p>Deployed via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cd /root/Code/Ansible/CloudStack-Ansible-Playbook
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=base
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=mysql
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=mysql3306
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=csmanagement -vvvv</span></code></pre></td></tr></table></div></figure>


<p>Now you could enjoy a new node&rsquo;s ansible deployment.</p>
]]></content>
  </entry>
  
</feed>
