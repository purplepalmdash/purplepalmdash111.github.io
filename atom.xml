<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dash]]></title>
  <link href="http://purplepalmdash.github.io/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-06-24T23:18:43+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[WH Worktips(6)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/24/wh-worktips-6/"/>
    <updated>2015-06-24T11:54:12+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/24/wh-worktips-6</id>
    <content type="html"><![CDATA[<h3>Migration</h3>

<p>So this time we will migrate the whole machine, that is the Cobbler Server from one physical machine to another one. The steps are:  <br/>
1. Transfer the harddisk files.   <br/>
2. Edit the <code>/etc/udev/rules.d/70-persistent-net.rules</code>, Change the eth1 to eth0, and remove the eth0 item.  <br/>
3. Edit the <code>/etc/sysconfig/network-scripts/ifcfg-eth0</code>, its mac address to the one you specified on step 2.   <br/>
4. Restart the machine.</p>

<h3>Modification &amp;&amp; Test</h3>

<p>Create a new machine, which mac address is <code>52:54:00:3a:87:4e</code>, and define it on Cobbler server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer ~]# cobbler system add --name=node147 --profile=CentOS-6.5-x86_64 --mac=52:54:00:3a:87:4e --interface=eth0 --ip-address=10.47.58.147 --hostname=node147 --gateway=10.47.58.1 --dns-name=node147</span></code></pre></td></tr></table></div></figure>


<p>Now bootup the machine and let it be deployed by cobbler server. The deployment time depends on your disk speed.</p>

<p>At the same time, edit the Ansible configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer Ansible]# cat hosts
</span><span class='line'>[node147]
</span><span class='line'>10.47.58.147
</span><span class='line'>[root@z_WHServer Ansible]# pwd
</span><span class='line'>/root/Code/Ansible</span></code></pre></td></tr></table></div></figure>


<p>Copy the repository to the <code>10.47.58.2:/var/www/html/</code>, and edit the Ansible configuration.   <br/>
And Also configure the nfs server for the second host, previously we use the one we got from the external nfs server.  <br/>
Also the download vhd template files.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ scp -r ./4.4/ root@10.47.58.2:/var/www/html/
</span><span class='line'>[root@z_WHServer html]# chmod 777 -R 4.4
</span><span class='line'>[root@z_WHServer CloudStack-Ansible-Playbook]# vim templates/cloudstack.repo.j2
</span><span class='line'>[cloudstack]
</span><span class='line'>name=cloudstack
</span><span class='line'>baseurl=http://10.47.58.2/4.4/
</span><span class='line'>clouder@pc121:/home/juju$ scp ./systemvm64template-* root@10.47.58.2:/var/www/html/
</span><span class='line'>root@10.47.58.2's password: 
</span><span class='line'>systemvm64template-2014-06-23-master-xen.vhd.bz2                                                             100%  237MB  59.4MB/s   00:04 
</span><span class='line'>systemvm64template-4.4.1-7-kvm.qcow2.bz2                                                                     100%  291MB  36.4MB/s   00:08
</span><span class='line'>clouder@pc121:/home/juju$ scp ./vhd-util root@10.47.58.2:/var/www/html/
</span><span class='line'>[root@z_WHServer html]# chmod 777 systemvm64template-*
</span><span class='line'>[root@z_WHServer html]# chmod 777 vhd-util
</span><span class='line'>[root@z_WHServer html]# vim /etc/exports 
</span><span class='line'>/home/export *(rw,async,no_root_squash,no_subtree_check)
</span><span class='line'>[root@z_WHServer html]# mkdir -p /home/export
</span><span class='line'>[root@z_WHServer html]# chmod 777 -R /home/export/
</span><span class='line'>[root@z_WHServer html]# chkconfig nfs on
</span><span class='line'>[root@z_WHServer html]# chkconfig rpcbind on
</span><span class='line'>[root@z_WHServer html]# service nfs restart
</span><span class='line'>[root@z_WHServer html]# service rpcbind restart
</span><span class='line'>[root@z_WHServer html]# iptables -D INPUT -j REJECT --reject-with icmp-host-prohibited
</span><span class='line'>[root@z_WHServer home]# chown -R nobody /home/export/
</span><span class='line'>[root@z_WHServer CloudStack-Ansible-Playbook]# vim cloudstack.yml
</span><span class='line'>.......
</span><span class='line'>    CSManagement:
</span><span class='line'>      ManagementIP: 10.47.58.147
</span><span class='line'>      SecondaryMount: /secondary
</span><span class='line'>      NFSHost: 10.47.58.2
</span><span class='line'>      NFSSecondaryShare: /home/export
</span><span class='line'>      SysTemplateURLurl43: http://10.47.58.2/systemvm64template-2014-06-23-master-xen.vhd.bz2
</span><span class='line'>      SysTemplateURLurl44: http://10.47.58.2/systemvm64template-4.4.1-7-kvm.qcow2.bz2 
</span><span class='line'>      SysTemplateURLhv: xenserver
</span><span class='line'>      VhdutilURL: http://10.47.58.2/vhd-util
</span><span class='line'>.....</span></code></pre></td></tr></table></div></figure>


<p>Now deploy the playbooks via the same process in:   <br/>
<a href="http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-4/">http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-4/</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cd /root/Code/Ansible/CloudStack-Ansible-Playbook
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=pip
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=base
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=mysql
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=mysql3306
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=csmanagement </span></code></pre></td></tr></table></div></figure>


<p>Visit
<a href="http://10.47.58.147:8080/client">http://10.47.58.147:8080/client</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Newest Version of Cobbler]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/24/install-newest-version-of-cobbler/"/>
    <updated>2015-06-24T09:38:50+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/24/install-newest-version-of-cobbler</id>
    <content type="html"><![CDATA[<h3>Background</h3>

<p>Cobbler has changed its homepage from <code>www.cobblerd.org</code> to <code>http://cobbler.github.io/</code>, thus some configuration will be be failed. In order to solve these problems, we have to upgrade to the newest version, current newest version is <code>2.6.9</code>.</p>

<h3>Download And Install</h3>

<p>Go to <a href="http://cobbler.github.io/downloads/2.6.x.html">http://cobbler.github.io/downloads/2.6.x.html</a> for selecting your distribution, and download them to your folder. Mine is configured via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/CentOS_CentOS-6/home:libertas-ict:cobbler26.repo
</span><span class='line'>$ cp home\:libertas-ict\:cobbler26.repo /etc/yum.repos.d/cobbler26.repo
</span><span class='line'>$ yum install -y cobbler cobbler-web</span></code></pre></td></tr></table></div></figure>


<h3>Configuration</h3>

<p>After installation, configure your newest cobbler via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cobbler sync
</span><span class='line'>$ reboot
</span><span class='line'>$ cobbler signature update</span></code></pre></td></tr></table></div></figure>


<p>By updating the signature of the cobbler, the newest system will be supported, like Ubuntu15.04, etc.</p>

<p>You can also update all of the loaders via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cobbler get-loaders --force
</span><span class='line'># cobbler sync</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Import More ISOs in Cobbler]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/23/import-more-isos-in-cobbler/"/>
    <updated>2015-06-23T20:52:09+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/23/import-more-isos-in-cobbler</id>
    <content type="html"><![CDATA[<h3>Ubuntu12.04</h3>

<p>Since you have the iso files, import it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer iso]# mount -t iso9660 -o loop /mnt/iso/ubuntu-12.04.3-server-amd64.iso /mnt1
</span><span class='line'>[root@CobblerServer iso]# cobbler import --name=Ubuntu-12.04 --arch=x86_64 --path=/mnt1/
</span><span class='line'>[root@CobblerServer iso]# cobbler profile list
</span><span class='line'>   CentOS-7-x86_64
</span><span class='line'>   Ubuntu-12.04-x86_64
</span><span class='line'>   Ubuntu14.04-x86_64</span></code></pre></td></tr></table></div></figure>


<p>To make it quickly deployment, visit:    <br/>
<a href="http://purplepalmdash.github.io/blog/2015/05/18/my-configuration-on-cobbler-for-deploying-ubuntu12-dot-04/">http://purplepalmdash.github.io/blog/2015/05/18/my-configuration-on-cobbler-for-deploying-ubuntu12-dot-04/</a></p>

<p>Edit its profile like following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer kickstarts]# cobbler profile edit --name=Ubuntu-12.04-x86_64 --kickstart=/var/lib/cobbler/kickstarts/ubuntu1204.seed </span></code></pre></td></tr></table></div></figure>


<p>Create a new virtual machine for testing.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer kickstarts]# cobbler system add --name=test1204 --profile=Ubuntu-12.04-x86_64 --mac=52:54:00:e4:2c:df --interface=eth0 --ip-address=10.3.3.33 --hostname=test1204 --gateway=10.3.3.1 --dns-name=test1204</span></code></pre></td></tr></table></div></figure>


<p>Testing the tftpserver via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[dash@~]$ tftp 10.3.3.3   
</span><span class='line'>tftp&gt; get /pxelinux.0
</span><span class='line'>tftp&gt; quit
</span><span class='line'>[dash@~]$ ls pxelinux.0 
</span><span class='line'>pxelinux.0</span></code></pre></td></tr></table></div></figure>


<p>Trouble-Shooting, you should very careful on your pxelinux.0 file, make sure you have the correct ones. Recently it&rsquo;s hard to get the right pxelinux.0 from cobbler loader sync.</p>

<h3>Ubuntu15.04</h3>

<p>Import the iso via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer iso]# mount -t iso9660 -o loop ./ubuntu-15.04-server-amd64.iso /mnt1/
</span><span class='line'>[root@CobblerServer iso]# cobbler import --name=Ubuntu-15.04 --arch=x86_64 --path=/mnt1</span></code></pre></td></tr></table></div></figure>


<p>Notice, here you will met Signature mismatch problem, do following:   <br/>
First update Cobbler: ?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim /etc/yum.repos.d/cobbler26.repo
</span><span class='line'>[home_libertas-ict_cobbler26]
</span><span class='line'>name=Cobbler (2.6.x) (CentOS_CentOS-6)
</span><span class='line'>type=rpm-md
</span><span class='line'>baseurl=http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/CentOS_CentOS-6/
</span><span class='line'>gpgcheck=1
</span><span class='line'>gpgkey=http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/CentOS_CentOS-6/repodata/repomd.xml.key
</span><span class='line'>enabled=1
</span><span class='line'>$ sudo yum install -y cobbler cobbler-web</span></code></pre></td></tr></table></div></figure>


<p>And Trouble-Shooting for iptables(If you use redsocks):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># iptables -t nat -I OUTPUT -d 10.3.3.0/24 -j RETURN</span></code></pre></td></tr></table></div></figure>


<p>Then signature update will OK:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer redsocks]# cobbler signature update
</span><span class='line'>task started: 2015-06-23_144247_sigupdate
</span><span class='line'>task started (id=Updating Signatures, time=Tue Jun 23 14:42:47 2015)
</span><span class='line'>Successfully got file from http://cobbler.github.com/signatures/2.6.x/latest.json
</span><span class='line'>*** TASK COMPLETE ***
</span></code></pre></td></tr></table></div></figure>


<p>Re-import:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer iso]# cobbler import --name=Ubuntu-12.04 --arch=x86_64 --path=/mnt1/
</span><span class='line'>*** TASK COMPLETE ***
</span><span class='line'>[root@CobblerServer mnt]# cobbler profile list
</span><span class='line'>   CentOS-7-x86_64
</span><span class='line'>   Ubuntu-12.04-x86_64
</span><span class='line'>   Ubuntu-15.04-x86_64
</span><span class='line'>   Ubuntu14.04-x86_64</span></code></pre></td></tr></table></div></figure>


<p>Edit the profile via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CobblerServer lib]# cd /var/lib/cobbler/kickstarts/
</span><span class='line'>[root@CobblerServer kickstarts]# ls
</span><span class='line'>default.ks    esxi5-ks.cfg      legacy.ks     sample_autoyast.xml  sample_esx4.ks   sample_esxi5.ks  sample_old.seed  ubuntu1204.seed
</span><span class='line'>esxi4-ks.cfg  install_profiles  pxerescue.ks  sample_end.ks        sample_esxi4.ks  sample.ks        sample.seed
</span><span class='line'>[root@CobblerServer kickstarts]# vim ubuntu1504.seed</span></code></pre></td></tr></table></div></figure>


<p>Test it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ qemu-img create -f qcow2 Cobbler1504Test.qcow2 100G
</span><span class='line'>$ cobbler profile edit --name=Ubuntu-15.04-x86_64 --kickstart=/var/lib/cobbler/kickstarts/ubuntu1504.seed
</span><span class='line'>$  cobbler system add --name=test1504 --profile=Ubuntu-15.04-x86_64 --mac=52:54:00:2e:c0:ff --interface=eth0 --ip-address=10.3.3.34 --hostname=test1504 --gateway=10.3.3.1 --dns-name=test1504
</span></code></pre></td></tr></table></div></figure>


<p>Installed failed, verify it tomorrow.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(5)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-5/"/>
    <updated>2015-06-19T15:29:56+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-5</id>
    <content type="html"><![CDATA[<p>This worktips will enable the visibility for ansible deployed nodes.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer Code]# cd ansible-tower-setup-2.1.5/
</span><span class='line'>[root@z_WHServer ansible-tower-setup-2.1.5]# ls
</span><span class='line'>ansible.cfg  configure  group_vars  host_vars  README.md  roles  setup.sh  site.yml</span></code></pre></td></tr></table></div></figure>


<p>Later I will finish this. But remember the tutorial pdf works well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(4)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-4/"/>
    <updated>2015-06-19T11:32:04+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-4</id>
    <content type="html"><![CDATA[<h3>A Whole Deployment</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pwd
</span><span class='line'>/home/juju/img/WolfHunter/WH
</span><span class='line'>$ qemu-img create -f qcow2 z_Node113.qcow2 100G
</span><span class='line'>$ </span></code></pre></td></tr></table></div></figure>


<p>Create Virtual Machine:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_06_19_11_39_45_474x366.jpg" alt="/images/2015_06_19_11_39_45_474x366.jpg" /></p>

<p>Memory:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_06_19_11_40_51_477x363.jpg" alt="/images/2015_06_19_11_40_51_477x363.jpg" /></p>

<p><img src="http://purplepalmdash.github.io/images/2015_06_19_11_41_58_482x369.jpg" alt="/images/2015_06_19_11_41_58_482x369.jpg" /></p>

<p>Click <code>Customize configuration before install</code>:</p>

<p>VirtIO Disk 1:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_06_19_11_43_22_478x309.jpg" alt="/images/2015_06_19_11_43_22_478x309.jpg" /></p>

<p>Virtual Network Interface:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_06_19_11_44_12_553x205.jpg" alt="/images/2015_06_19_11_44_12_553x205.jpg" /></p>

<p>Notice the mac address is <code>52:54:00:9a:73:1a</code>.</p>

<h3>Cobbler Customization</h3>

<p>Define the node:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer ~]#  cobbler system add --name=node113 --profile=CentOS-6.5-x86_64 --mac=52:54:00:9a:73:1a --interface=eth0 --ip-address=10.47.58.113 --hostname=node113 --gateway=10.47.58.1 --dns-name=node113</span></code></pre></td></tr></table></div></figure>


<h3>Begin Installation</h3>

<p><img src="http://purplepalmdash.github.io/images/2015_06_19_11_49_09_685x401.jpg" alt="/images/2015_06_19_11_49_09_685x401.jpg" /></p>

<h3>Configure</h3>

<p>Notice the ssh failed to 112 because we poweroff this node.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keyscan 10.47.58.113&gt;&gt;/root/.ssh/known_hosts 
</span><span class='line'># 10.47.58.113 SSH-2.0-OpenSSH_5.3
</span><span class='line'>
</span><span class='line'># cd /root/Code/Ansible
</span><span class='line'># ansible-playbook ssh-addkey.yml --ask-pass
</span><span class='line'>SSH password: 
</span><span class='line'>
</span><span class='line'>PLAY [all] ******************************************************************** 
</span><span class='line'>
</span><span class='line'>TASK: [install ssh key] ******************************************************* 
</span><span class='line'>changed: [10.47.58.113]
</span><span class='line'>fatal: [10.47.58.112] =&gt; SSH Error: ssh: connect to host 10.47.58.112 port 22: Connection timed out
</span><span class='line'>    while connecting to 10.47.58.112:22
</span><span class='line'>It is sometimes useful to re-run the command using -vvvv, which prints SSH debug output to help diagnose the issue.
</span><span class='line'>
</span><span class='line'>PLAY RECAP ******************************************************************** 
</span><span class='line'>           to retry, use: --limit @/root/ssh-addkey.retry
</span><span class='line'>
</span><span class='line'>10.47.58.112               : ok=0    changed=0    unreachable=1    failed=0   
</span><span class='line'>10.47.58.113               : ok=1    changed=1    unreachable=0    failed=0  </span></code></pre></td></tr></table></div></figure>


<p>Check:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ansible all -m shell -a "uptime"
</span><span class='line'>10.47.58.113 | success | rc=0 &gt;&gt;
</span><span class='line'> 04:32:21 up 32 min,  3 users,  load average: 0.00, 0.00, 0.00
</span><span class='line'>
</span><span class='line'>10.47.58.112 | FAILED =&gt; SSH Error: ssh: connect to host 10.47.58.112 port 22: No route to host
</span><span class='line'>    while connecting to 10.47.58.112:22
</span><span class='line'>It is sometimes useful to re-run the command using -vvvv, which prints SSH debug output to help diagnose the issue.</span></code></pre></td></tr></table></div></figure>


<p>Deployed via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cd /root/Code/Ansible/CloudStack-Ansible-Playbook
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=base
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=mysql
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=mysql3306
</span><span class='line'># ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=csmanagement -vvvv</span></code></pre></td></tr></table></div></figure>


<p>Now you could enjoy a new node&rsquo;s ansible deployment.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use VirtualEnv for Downloading PIP Packages]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/18/use-virtualenv-for-downloading-pip-packages/"/>
    <updated>2015-06-18T20:56:30+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/18/use-virtualenv-for-downloading-pip-packages</id>
    <content type="html"><![CDATA[<p>In order to use offline installation of pip, I tried following steps for retrieving the packages.</p>

<h3>Fetch Packages</h3>

<p>First install virtualenv packages on CentOS7.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo yum install -y python-virtualenv
</span><span class='line'>$ virtualenv venv
</span><span class='line'>New python executable in venv/bin/python
</span><span class='line'>Installing Setuptools..............................................................................................................................................................................................................................done.
</span><span class='line'>Installing Pip.....................................................................................................................................................................................................................................................................................................................................done.
</span><span class='line'>$ ls venv
</span><span class='line'>bin  include  lib  lib64
</span><span class='line'>$ source venv/bin/activate
</span><span class='line'>(venv)$      
</span><span class='line'>(venv)$ pip install --download-cache=/home/dash/pipcache cloudmonkey
</span><span class='line'>(venv)$ ls pipcache/
</span><span class='line'>https%3A%2F%2Fpypi.python.org%2Fpackages%2Fsource%2Fa%2Fargcomplete%2Fargcomplete-0.8.9.tar.gz
</span><span class='line'>https%3A%2F%2Fpypi.python.org%2Fpackages%2Fsource%2Fa%2Fargcomplete%2Fargcomplete-0.8.9.tar.gz.content-type
</span><span class='line'>https%3A%2F%2Fpypi.python.org%2Fpackages%2Fsource%2Fc%2Fcloudmonkey%2Fcloudmonkey-5.3.1-0.tar.gz
</span><span class='line'>https%3A%2F%2Fpypi.python.org%2Fpackages%2Fsource%2Fc%2Fcloudmonkey%2Fcloudmonkey-5.3.1-0.tar.gz.content-type
</span><span class='line'>https%3A%2F%2Fpypi.python.org%2Fpackages%2Fsource%2FP%2FPrettyTable%2Fprettytable-0.7.2.tar.bz2
</span><span class='line'>......
</span><span class='line'>(venv)$ mkdir ~/pipcache2
</span><span class='line'>(venv)$ pip install cloudmonkey --download=/home/dash/pipcache2
</span><span class='line'>(venv)$ ls pipcache2
</span><span class='line'>argcomplete-0.8.9.tar.gz    Pygments-2.0.2.tar.gz
</span><span class='line'>cloudmonkey-5.3.1-0.tar.gz  requests-2.7.0.tar.gz
</span><span class='line'>prettytable-0.7.2.tar.bz2</span></code></pre></td></tr></table></div></figure>


<h3>Use Packages</h3>

<p>In order to use packages, we did following things.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ scp xxx@xxx.xxx.xxx.xx:/home/xxx/pipcache2.tar.gz ./
</span><span class='line'>$ tar xzvf pipcache2.tar.gz 
</span><span class='line'>$ pip install --no-index --find-links ~/pipcache2 cloudmonkey</span></code></pre></td></tr></table></div></figure>


<p>Now the package has been installed. enjoy them.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(3)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/18/wh-worktips-3/"/>
    <updated>2015-06-18T15:50:11+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/18/wh-worktips-3</id>
    <content type="html"><![CDATA[<h3>Prepare Packages</h3>

<h4>System Pacakges</h4>

<p>Since CentOS6.5 already deprecated, we need to use <code>http://vault.centos.org/6.5/</code> for download the packages.  <br/>
Or we could remove all of the repo definition files except the cobbler deployed one.</p>

<p>We need python-pip for usage. Download it via yum firstly to the directory.</p>

<p>Download the following packages, these packages may have problems because I downloaded them from the latest repository.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ yum install yum-plugin-downloadonly
</span><span class='line'>$ yum install --downloadonly --downloaddir=/root/Code/repo/ python-pip
</span><span class='line'>$ yum install --downloadonly --downloaddir=/root/Code/repo/ nethogs
</span><span class='line'>$ yum reinstall --downloadonly --downloaddir=/root/Code/repo/ java7
</span><span class='line'>$ yum reinstall --downloadonly --downloaddir=/root/Code/repo/ mysql-devel
</span><span class='line'>$ yum install --downloadonly --downloaddir=/root/Code/repo/ java-1.7.0-openjdk-devel
</span><span class='line'>$ yum install --downloadonly --downloaddir=/root/Code/repo/ mysql-server
</span><span class='line'>$ yum install --downloadonly --downloaddir=/root/Code/repo/ mysql-devel
</span><span class='line'>[root@z_WHServer repo]# ls
</span><span class='line'>python-pip-1.3.1-4.el6.noarch.rpm
</span><span class='line'>....</span></code></pre></td></tr></table></div></figure>


<h4>Cloudstack Packages</h4>

<p>Download all of the cloudstack packages from <code>http://cloudstack.apt-get.eu/rhel/4.4/</code>, and put them into a directory, run <code>createrepo</code> for generating the repodata.</p>

<h4>PIP Packages</h4>

<p>Manually create the offline installation resources.</p>

<h3>Deployment</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#  ansible-playbook -i /root/Code/Ansible/hosts --limit=node112 ./cloudstack.yml --tags=base
</span><span class='line'>#  ansible-playbook -i /root/Code/Ansible/hosts --limit=node112 ./cloudstack.yml --tags=mysql
</span><span class='line'>#  ansible-playbook -i /root/Code/Ansible/hosts --limit=node112 ./cloudstack.yml --tags=mysql3306
</span><span class='line'>#  ansible-playbook -i /root/Code/Ansible/hosts --limit=node112 ./cloudstack.yml --tags=csmanagement -vvvv</span></code></pre></td></tr></table></div></figure>


<p>
There may be some problems in deployment in <code>/etc/hosts</code>, so manually add itself to the hostname:  <br/>
!!! node112 !!!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@node112 yum.repos.d]# cat /etc/hosts
</span><span class='line'>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
</span><span class='line'>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
</span><span class='line'>10.47.58.112    node112</span></code></pre></td></tr></table></div></figure>


<p>From now on, you could visit the management server via:</p>

<p><a href="http://10.47.58.112:8080/client/">http://10.47.58.112:8080/client/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(2)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/18/wh-worktips-2/"/>
    <updated>2015-06-18T10:20:48+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/18/wh-worktips-2</id>
    <content type="html"><![CDATA[<h3>Cobbler Web</h3>

<p>Visit the following website:</p>

<p><a href="http://10.47.58.2/cobbler_web">http://10.47.58.2/cobbler_web</a></p>

<p>You will see:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_06_18_10_21_45_755x413.jpg" alt="/images/2015_06_18_10_21_45_755x413.jpg" /></p>

<h3>Added More Profiles</h3>

<p>The default kickstart configuration file could found under:   <br/>
<code>/var/lib/cobbler/kickstarts/sample_end.ks</code>, copy it to your own.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cp /var/lib/cobbler/kickstarts/sample_end.ks CentOS65Desktop.cfg
</span><span class='line'>$ vim CentOS65Desktop.cfg
</span><span class='line'># Allow anaconda to partition the system as needed
</span><span class='line'># autopart
</span><span class='line'># 1G Swap and remains others to be ext4
</span><span class='line'>part swap --fstype="swap" --size=1024
</span><span class='line'>part / --asprimary --fstype="ext4" --grow --size=1
</span><span class='line'>.......
</span><span class='line'>%packages
</span><span class='line'># Added from here
</span><span class='line'>@additional-devel
</span><span class='line'>@basic-desktop
</span><span class='line'>@chinese-support
</span><span class='line'>@desktop-platform
</span><span class='line'>@development
</span><span class='line'>@fonts
</span><span class='line'>@general-desktop
</span><span class='line'>@input-methods
</span><span class='line'>@x11
</span><span class='line'>git
</span><span class='line'>-ibus-table-cangjie
</span><span class='line'>-ibus-table-erbi
</span><span class='line'>-ibus-table-wubi
</span><span class='line'># End of added
</span><span class='line'>$SNIPPET('func_install_if_enabled')
</span><span class='line'>%end
</span></code></pre></td></tr></table></div></figure>


<p>More configurations could be customized.</p>

<h3>Fixed IP Address Via DHCP</h3>

<p>By adding the configuration in dhcp configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/cobbler/dhcp.template
</span><span class='line'>     max-lease-time             43200;      
</span><span class='line'>     next-server                $next_server; 
</span><span class='line'>
</span><span class='line'>     host ns111 {
</span><span class='line'>         next-server $next_server;
</span><span class='line'>         hardware ethernet 52:54:00:e0:cc:18;
</span><span class='line'>         fixed-address 10.47.58.111;
</span><span class='line'>     }
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>     class "pxeclients" {
</span><span class='line'>$ sudo cobbler sync</span></code></pre></td></tr></table></div></figure>


<p>Now restart the deployed node, you will easily see the node.</p>

<h3>Specify Fixed IP For Host</h3>

<p>Add the configration of the node112, then this machine will start with our specified parameters:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cobbler system add --name=node112 --profile=CentOS6.5-Desktop --mac=52:54:00:92:8c:4d --interface=eth0 --ip-address=10.47.58.112 --hostname=node112 --gateway=10.47.58.1 --dns-name=node112</span></code></pre></td></tr></table></div></figure>


<p>Now bootup the machine, then this computer will have the fixed IP address.</p>

<p><img src="http://purplepalmdash.github.io/images/2015_06_18_11_38_48_794x263.jpg" alt="/images/2015_06_18_11_38_48_794x263.jpg" /></p>

<h3>Use Ansible For Administrate The Added Nodes</h3>

<p>Install ansible via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y ansible sshpass
</span><span class='line'># vim /etc/hosts
</span><span class='line'>10.47.58.112    node112
</span><span class='line'>
</span><span class='line'># mkdir -p ~/Code/Ansible
</span><span class='line'># cd ~/Code/Ansible
</span><span class='line'># vim ansible.cfg
</span><span class='line'>    [defaults]
</span><span class='line'>    hostfile=/root/Code/Ansible/hosts
</span><span class='line'>
</span><span class='line'># vim hosts
</span><span class='line'>    [node112]
</span><span class='line'>    10.47.58.112
</span><span class='line'>
</span><span class='line'># vim ssh-addkey.yml
</span><span class='line'>    ---
</span><span class='line'>    - hosts: all
</span><span class='line'>      sudo: yes
</span><span class='line'>      gather_facts: no
</span><span class='line'>      remote_user: root
</span><span class='line'>    
</span><span class='line'>      tasks:
</span><span class='line'>    
</span><span class='line'>      - name: install ssh key
</span><span class='line'>        authorized_key: user=root
</span><span class='line'>                        key="" 
</span><span class='line'>                        state=present
</span><span class='line'>
</span><span class='line'># ssh-keyscan 10.47.58.112&gt;&gt;/root/.ssh/known_hosts
</span><span class='line'># ansible-playbook ssh-addkey.yml --ask-pass</span></code></pre></td></tr></table></div></figure>


<p>Now the node112 is under controlled by you.  <br/>
Take refers to:  <br/>
<a href="https://sysadmincasts.com/episodes/45-learning-ansible-with-vagrant-part-2-4">https://sysadmincasts.com/episodes/45-learning-ansible-with-vagrant-part-2-4</a></p>

<p>Test via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer Ansible]# ansible all -m shell -a "uptime"
</span><span class='line'>10.47.58.112 | success | rc=0 &gt;&gt;
</span><span class='line'> 06:18:59 up  1:32,  2 users,  load average: 0.00, 0.00, 0.00</span></code></pre></td></tr></table></div></figure>


<p>In following parts we will try to deploy Cloudstack using playbook.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(1)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/17/wh-worktips-1/"/>
    <updated>2015-06-17T14:55:39+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/17/wh-worktips-1</id>
    <content type="html"><![CDATA[<h3>Preparation</h3>

<p>Hardware: 2G Memory, 1-Core, the Cobbler Server, which runs CentOS6.6.   <br/>
Network: Use a 10.47.58.0/24(Its name is WHNetwork), no dhcp server in this network.</p>

<h3>Cobbler Server Preparation</h3>

<p>First Change its IP address to 10.47.58.2, gateway to 10.47.58.1.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0 
</span><span class='line'>DEVICE=eth0
</span><span class='line'>TYPE=Ethernet
</span><span class='line'>UUID=a6e5b56f-661f-4128-ab8c-c575a9623245
</span><span class='line'>ONBOOT=yes
</span><span class='line'>NM_CONTROLLED=yes
</span><span class='line'>BOOTPROTO=none
</span><span class='line'>IPADDR=10.47.58.2
</span><span class='line'>GATEWAY=10.47.58.1
</span><span class='line'>......
</span><span class='line'>
</span><span class='line'>[root@z_WHServer ~]# cat /etc/sysconfig/network
</span><span class='line'>NETWORKING=yes
</span><span class='line'>HOSTNAME=z_WHServer
</span><span class='line'># vim /etc/selinux/config
</span><span class='line'>    #SELINUX=enforcing
</span><span class='line'>    SELINUX=disabled 
</span><span class='line'># reboot</span></code></pre></td></tr></table></div></figure>


<p>Install and configure Cobbler Server via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum -y update && yum install -y cobbler cobbler-web
</span><span class='line'># reboot
</span><span class='line'># openssl passwd -1                                                                                                     │
</span><span class='line'>Password:                                                                                                                                 │
</span><span class='line'>Verifying - Password:                                                                                                                     │
</span><span class='line'>igaowugoauwgoueougo
</span><span class='line'># vim /etc/cobbler/settings
</span><span class='line'>    default_password_crypted: "agowuoguwoawoguwoe"
</span><span class='line'>    # default, localhost
</span><span class='line'>    server: 10.47.58.2
</span><span class='line'>    # default, localhost
</span><span class='line'>    next_server: 10.47.58.2
</span><span class='line'>    manage_dhcp: 1</span></code></pre></td></tr></table></div></figure>


<p>Edit the dhcp template:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/cobbler/dhcp.template
</span><span class='line'>####  subnet 192.168.1.0 netmask 255.255.255.0 {
</span><span class='line'>####       option routers             192.168.1.5;
</span><span class='line'>####       option domain-name-servers 192.168.1.1;
</span><span class='line'>####       option subnet-mask         255.255.255.0;
</span><span class='line'>####       range dynamic-bootp        192.168.1.100 192.168.1.254;
</span><span class='line'>####       default-lease-time         21600;
</span><span class='line'>####       max-lease-time             43200;
</span><span class='line'>####       next-server                $next_server;
</span><span class='line'>subnet 10.47.58.0 netmask 255.255.255.0 {
</span><span class='line'>     option routers             10.47.58.1; 
</span><span class='line'>     range dynamic-bootp        10.47.58.3 10.47.58.254;
</span><span class='line'>     option domain-name-servers 114.114.114.114, 180.76.76.76;     
</span><span class='line'>     option subnet-mask         255.255.255.0;         
</span><span class='line'>     filename                   "/pxelinux.0";       
</span><span class='line'>     default-lease-time         21600;           
</span><span class='line'>     max-lease-time             43200;      
</span><span class='line'>     next-server                $next_server; 
</span><span class='line'>
</span><span class='line'>     class "pxeclients" {</span></code></pre></td></tr></table></div></figure>


<p>Check via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer ~]# service cobblerd start
</span><span class='line'>Starting cobbler daemon:                                   [  OK  ]
</span><span class='line'>[root@z_WHServer ~]# chkconfig cobblerd on
</span><span class='line'>[root@z_WHServer ~]# chkconfig httpd on
</span><span class='line'>[root@z_WHServer ~]# service cobblerd status
</span><span class='line'>cobblerd (pid 5421) is running...</span></code></pre></td></tr></table></div></figure>


<p>Reboot and Check via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cobbler check</span></code></pre></td></tr></table></div></figure>


<p>You will get lots of the errors, first solve the dhcpd issue, notice the following dhcpd configuration file is temporarily used.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y dhcp
</span><span class='line'># vim /etc/dhcp/dhcpd.conf
</span><span class='line'>#
</span><span class='line'># DHCP Server Configuration file.
</span><span class='line'>#   see /usr/share/doc/dhcp*/dhcpd.conf.sample
</span><span class='line'>#   see 'man 5 dhcpd.conf'
</span><span class='line'>#
</span><span class='line'># create new
</span><span class='line'># specify domain name
</span><span class='line'>option domain-name "server.world";
</span><span class='line'># specify name server's hostname or IP address
</span><span class='line'>option domain-name-servers dlp.server.world;
</span><span class='line'># default lease time
</span><span class='line'>default-lease-time 600;
</span><span class='line'># max lease time
</span><span class='line'>max-lease-time 7200;
</span><span class='line'># this DHCP server to be declared valid
</span><span class='line'>authoritative;
</span><span class='line'># specify network address and subnet mask
</span><span class='line'>subnet 10.47.58.0 netmask 255.255.255.0 {
</span><span class='line'>    # specify the range of lease IP address
</span><span class='line'>    range dynamic-bootp 10.47.58.200 10.47.58.254;
</span><span class='line'>    # specify broadcast address
</span><span class='line'>    option broadcast-address 10.47.58.255;
</span><span class='line'>    # specify default gateway
</span><span class='line'>    option routers 10.47.58.1;
</span><span class='line'>}
</span><span class='line'># service dhcpd start
</span><span class='line'># chkconfig dhcpd on
</span><span class='line'># chkconfig xinetd on
</span><span class='line'># reboot</span></code></pre></td></tr></table></div></figure>


<p>Get loaders to download the loaders to <code>/var/lib/cobbler/loaders</code>:  <br/>
!!! Notice, this step maybe failed because of networking issues!!!!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cobbler get-loaders</span></code></pre></td></tr></table></div></figure>


<p>Change xinted:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat  /etc/xinetd.d/rsync 
</span><span class='line'># default: off
</span><span class='line'># description: The rsync server is a good addition to an ftp server, as it \
</span><span class='line'>#       allows crc checksumming etc.
</span><span class='line'>service rsync
</span><span class='line'>{
</span><span class='line'>        disable = no
</span></code></pre></td></tr></table></div></figure>


<p>Edit iptables:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/sysconfig/iptables
</span><span class='line'>:OUTPUT ACCEPT [0:0]
</span><span class='line'>-A INPUT -p udp -m multiport --dports 69,80,443,25151 -j ACCEPT 
</span><span class='line'>-A INPUT -p tcp -m multiport --dports 69,80,443,25151 -j ACCEPT 
</span><span class='line'>-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
</span><span class='line'>$ sudo reboot</span></code></pre></td></tr></table></div></figure>


<p>Install packages:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y debmirror pykickstart cman
</span><span class='line'># cobbler check
</span><span class='line'># cobbler sync</span></code></pre></td></tr></table></div></figure>


<h3>Import Systems</h3>

<p>Import 2 DVD iso via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mount -o loop -t iso9660 CentOS-6.5-x86_64-bin-DVD1.iso  /mnt1/
</span><span class='line'># cobbler import --name=CentOS-6.5 --arch=x86_64 --path=/mnt1
</span><span class='line'># mount -o loop -t iso9660 CentOS-6.5-x86_64-bin-DVD2.iso  /mnt2
</span><span class='line'># rsync -a '/mnt2/' /var/www/cobbler/ks_mirror/CentOS-6.5-x86_64/ --exclude-from=/etc/cobbler/rsync.exclude --progress
</span><span class='line'># COMPSXML=$(ls /var/www/cobbler/ks_mirror/CentOS-6.5-x86_64/repodata/*comps*.xml)
</span><span class='line'># createrepo -c cache -s sha --update --groupfile ${COMPSXML} /var/www/cobbler/ks_mirror/CentOS-6.5-x86_64/ </span></code></pre></td></tr></table></div></figure>


<p>Verify it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer repodata]# cobbler distro list
</span><span class='line'>   CentOS-6.5-x86_64
</span><span class='line'>[root@z_WHServer repodata]# cobbler profile list
</span><span class='line'>   CentOS-6.5-x86_64
</span><span class='line'>[root@z_WHServer repodata]# cobbler distro report --name=CentOS-6.5-x86_64
</span><span class='line'>Name                           : CentOS-6.5-x86_64
</span><span class='line'>Architecture                   : x86_64
</span><span class='line'>TFTP Boot Files                : {}
</span><span class='line'>Breed                          : redhat
</span><span class='line'>Comment                        : 
</span><span class='line'>Fetchable Files                : {}
</span><span class='line'>Initrd                         : /var/www/cobbler/ks_mirror/CentOS-6.5-x86_64/images/pxeboot/initrd.img
</span><span class='line'>Kernel                         : /var/www/cobbler/ks_mirror/CentOS-6.5-x86_64/images/pxeboot/vmlinuz</span></code></pre></td></tr></table></div></figure>


<p>Check if your tftp working:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install tftp-server
</span><span class='line'># vim /etc/xinetd.d/tftp
</span><span class='line'># /sbin/chkconfig tftp on
</span><span class='line'># service xinetd start
</span><span class='line'># netstat -anp | grep 69
</span><span class='line'># tftp 10.47.58.2
</span><span class='line'>get pxelinux.0</span></code></pre></td></tr></table></div></figure>


<p>If successful, the pxelinux.0 will downloaded to your directory.</p>

<h3>Install New Systems</h3>

<p>Use a machine, configure to the same network, then start from pxe.</p>

<h3>Customize the KS file</h3>

<p>Generate kickstart configuration file via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># system-config-kickstart </span></code></pre></td></tr></table></div></figure>


<p>Add a new profile via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@z_WHServer kickstarts]# cobbler profile add --name=CentOS6.5-Desktop --kickstart=/var/lib/cobbler/kickstarts/CentOS-6.5-x86_64/C
</span><span class='line'>sktop.cfg --distro=CentOS-6.5-x86_64
</span><span class='line'>[root@z_WHServer kickstarts]# cobbler profile list
</span><span class='line'>   CentOS-6.5-x86_64
</span><span class='line'>   CentOS6.5-Desktop</span></code></pre></td></tr></table></div></figure>


<h3>Cobbler Web Interface</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ htdigest /etc/cobbler/users.digest "Cobbler" cobbler 
</span><span class='line'>Which will prompt you for a new password. 
</span><span class='line'>Once you have updated the password remember to run
</span><span class='line'>$ cobbler sync</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XenServer Tips]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/16/xenserver-tips/"/>
    <updated>2015-06-16T14:52:20+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/16/xenserver-tips</id>
    <content type="html"><![CDATA[<p>Recently I want to research desktop virtualization on Xen, so this blog records all of the tips for Xen Hypervisor related info.</p>

<h3>Nested Virtualization</h3>

<p>I place 4 core(Copy Host Configuration on CPU parameter), but the XenServer refuse to start, by using a none-hosted-configuration CPU configuration, it will fail on starting the machine, So I choose to install xen hypervisor on Ubuntu14.04.</p>

<h3>Ubuntu and Xen</h3>

<p>Install via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install xen-hypervisor-amd64
</span><span class='line'>$ sudo reboot</span></code></pre></td></tr></table></div></figure>


<p>The Ubuntu will automatically choose xen for startup, so verify it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo xl list
</span><span class='line'>Name                                        ID   Mem VCPUs      State   Time(s)
</span><span class='line'>Domain-0                                     0  7832     4     r-----      72.8</span></code></pre></td></tr></table></div></figure>


<h3>Networking</h3>

<p>Since the network is pretty complicated on my own machine, I decide to use openVSwitch for managing my own networking.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install -y openvswitch-switch</span></code></pre></td></tr></table></div></figure>


<p>Configuration of the networking:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat /etc/network/interfaces
</span><span class='line'>###########################################
</span><span class='line'>## By using openVswitch, we enabled the following
</span><span class='line'>###########################################
</span><span class='line'>allow-hotplug ovsbr0
</span><span class='line'>iface ovsbr0 inet static
</span><span class='line'>address 192.168.0.119
</span><span class='line'>netmask 255.255.0.0
</span><span class='line'>gateway 192.168.0.176
</span><span class='line'>dns-nameservers 114.114.114.114
</span><span class='line'>dns-nameservers 180.76.76.76
</span><span class='line'>
</span><span class='line'>$ sudo ovs-vsctl add-br ovsbr0
</span><span class='line'>$ sudo ovs-vsctl set Bridge ovsbr0 stp_enable=false other_config:stp-max-age=6 other_config:stp-forward-delay=4
</span><span class='line'>$ sudo ovs-vsctl list Bridge
</span><span class='line'>$ sudo ovs-vsctl add-port ovsbr0 eth0</span></code></pre></td></tr></table></div></figure>


<p>Disable the netfilter on all bridges:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vi /etc/sysctl.conf
</span><span class='line'>
</span><span class='line'>net.bridge.bridge-nf-call-ip6tables = 0
</span><span class='line'>net.bridge.bridge-nf-call-iptables = 0
</span><span class='line'>net.bridge.bridge-nf-call-arptables = 0
</span><span class='line'>
</span><span class='line'>$ sudo sysctl -p /etc/sysctl.conf
</span><span class='line'># Note: These settings are created in /proc/sys/net. The bridge folder only appears to be created after first creating a bridge with the ''brctl' command.</span></code></pre></td></tr></table></div></figure>


<h3>Administrator Tools</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install virt-manager
</span><span class='line'>$ sudo apt-get install xen-tools</span></code></pre></td></tr></table></div></figure>


<h3>Connect with virt-manager</h3>

<p>Change following parameters and re-connect again.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/xen/xend-config.sxp 
</span><span class='line'>     xend-unix-server yes
</span><span class='line'>     xend-unix-path /var/lib/xend/xend-socket
</span><span class='line'># service libvirt-bin restart
</span><span class='line'>libvirt-bin stop/waiting
</span><span class='line'>libvirt-bin start/running, process 5345
</span><span class='line'># service xen restart
</span><span class='line'> * Restarting Xen daemons                                                                                                             ^[[A                                                                                                                           [ OK ]
</span><span class='line'># service xendomains restart
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo virt-install --connect=xen:/// --name u14.04 --ram 1024 --disk u14.04.img,size=4 --location http://ftp.ubuntu.com/ubuntu/dists/trusty/main/installer-amd64/
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># http://ftp.ubuntu.com/ubuntu/dists/trusty/main/installer-amd64/</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on Ansible for Deploying CloudStack]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/15/tips-on-ansible-for-deploying-cloudstack/"/>
    <updated>2015-06-15T11:38:51+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/15/tips-on-ansible-for-deploying-cloudstack</id>
    <content type="html"><![CDATA[<h3>Background</h3>

<p>Use two nodes, both running CentOS6.6, the Ansible Node have 1-G memory, while the csmanger(CloudStack Manager) Node have 4-G memory.</p>

<p>Install the epel on Cloudstack manager for installing ansible.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo
</span><span class='line'>$ yum install -y ansible sshpass</span></code></pre></td></tr></table></div></figure>


<h3>Get Nodes</h3>

<p>Create the definition of the ansible characters:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CentOS66Base ~]# mkdir -p ~/Code/Ansible
</span><span class='line'>[root@CentOS66Base ~]# cd Code/Ansible/
</span><span class='line'>[root@CentOS66Base Ansible]# vim ansible.cfg
</span><span class='line'>[defaults]
</span><span class='line'>hostfile=/root/Code/Ansible/hosts
</span><span class='line'>[root@CentOS66Base Ansible]# vim hosts
</span><span class='line'>[acs-manager]
</span><span class='line'>10.55.55.72
</span><span class='line'>[root@CentOS66Base Ansible]# cat /etc/hosts
</span><span class='line'>.......
</span><span class='line'>10.55.55.72 acs-manager
</span><span class='line'>[root@CentOS66Base Ansible]# ping acs-manager
</span><span class='line'>PING acs-manager (10.55.55.72) 56(84) bytes of data.
</span><span class='line'>64 bytes from acs-manager (10.55.55.72): icmp_seq=1 ttl=64 time=1.16 ms</span></code></pre></td></tr></table></div></figure>


<p>Add the ssh certification:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CentOS66Base Ansible]# ssh-keyscan acs-manager&gt;&gt;/root/.ssh/known_hosts 
</span><span class='line'># acs-manager SSH-2.0-OpenSSH_5.3</span></code></pre></td></tr></table></div></figure>


<p>Generate the <code>id_rsa.pub</code> locally:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CentOS66Base Ansible]# ssh-keygen -t rsa -b 2048
</span><span class='line'>......
</span><span class='line'>[root@CentOS66Base Ansible]# ls -l -h /root/.ssh/id_rsa.pub 
</span><span class='line'>-rw-r--r--. 1 root root 399 Jun 14 23:59 /root/.ssh/id_rsa.pub</span></code></pre></td></tr></table></div></figure>


<p>Write key installation yml file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CentOS66Base Ansible]# vim ssh-addkey.yml
</span><span class='line'>---
</span><span class='line'>- hosts: all
</span><span class='line'>  sudo: yes
</span><span class='line'>  gather_facts: no
</span><span class='line'>  remote_user: root
</span><span class='line'>
</span><span class='line'>  tasks:
</span><span class='line'>
</span><span class='line'>  - name: install ssh key
</span><span class='line'>    authorized_key: user=root
</span><span class='line'>                    key="" 
</span><span class='line'>                    state=present</span></code></pre></td></tr></table></div></figure>


<p>!!! Be sure to disable the selinux on the acs-manager machine, then install the sshkey via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@CentOS66Base Ansible]# ansible-playbook ssh-addkey.yml --ask-pass
</span><span class='line'>SSH password: 
</span><span class='line'>
</span><span class='line'>PLAY [all] ******************************************************************** 
</span><span class='line'>
</span><span class='line'>TASK: [install ssh key] ******************************************************* 
</span><span class='line'>changed: [10.55.55.72]
</span><span class='line'>
</span><span class='line'>PLAY RECAP ******************************************************************** 
</span><span class='line'>10.55.55.72                : ok=1    changed=1    unreachable=0    failed=0   </span></code></pre></td></tr></table></div></figure>


<h3>Prepare the secondary storage</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install nfs-kernel-server
</span><span class='line'>$ cd /srv 
</span><span class='line'>$ mkdir nfs4
</span><span class='line'>$ ls
</span><span class='line'>nfs4
</span><span class='line'>$ sudo chown nobody:nogroup /srv/nfs4 
</span><span class='line'>$ sudo vim /etc/exports
</span><span class='line'># Share access to all networks
</span><span class='line'>/srv/nfs4       *(rw,sync,no_subtree_check)
</span><span class='line'>$ sudo /etc/init.d/nfs-kernel-server start</span></code></pre></td></tr></table></div></figure>


<h3>Start deploying</h3>

<p>Deployment sequences:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible-playbook -i /root/Code/Ansible/hosts  --limit=acs-manager ./cloudstack.yml --tags=base
</span><span class='line'>$ ansible-playbook -i /root/Code/Ansible/hosts  --limit=acs-manager ./cloudstack.yml --tags=mysql
</span><span class='line'>$ ansible-playbook -i /root/Code/Ansible/hosts  --limit=acs-manager ./cloudstack.yml --tags=mysql3306
</span><span class='line'>$ ansible-playbook -i /root/Code/Ansible/hosts  --limit=acs-manager ./cloudstack.yml --tags=csmanagement</span></code></pre></td></tr></table></div></figure>


<h3>Trouble Shooting</h3>

<p>Too slow connection:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Use Redsocks. 
</span><span class='line'>By pass 
</span><span class='line'>iptables -t nat -I OUTPUT -d 192.168.0.0/16 -j RETURN</span></code></pre></td></tr></table></div></figure>


<p>CloudMonkey setup:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>The host name of this computer does not resolve to an IP address.
</span><span class='line'>
</span><span class='line'>[root@acs-manager ~]# cat /etc/hosts
</span><span class='line'>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
</span><span class='line'>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
</span><span class='line'>10.55.55.72     acs-manager
</span></code></pre></td></tr></table></div></figure>


<p>After deployment, visit:</p>

<p><a href="http://xxx.xx.x.xxx:8080/client">http://xxx.xx.x.xxx:8080/client</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use 8188eu and Hostapd for Setting Soft-AP Router]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/11/use-8188eu-and-hostapd-for-setting-soft-ap-router/"/>
    <updated>2015-06-11T16:25:51+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/11/use-8188eu-and-hostapd-for-setting-soft-ap-router</id>
    <content type="html"><![CDATA[<h3>HostAPD</h3>

<p>Install HostAPD via following commands:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get autoremove hostapd
</span><span class='line'>$ wget https://github.com/jenssegers/RTL8188-hostapd/archive/v2.0.tar.gz
</span><span class='line'>$ tar -zxvf v2.0.tar.gz
</span><span class='line'>$ cd RTL8188-hostapd-2.0/hostapd
</span><span class='line'>$ sudo make
</span><span class='line'>$ sudo make install
</span><span class='line'>$ sudo service hostapd restart
</span><span class='line'>[ ok ] Stopping advanced IEEE 802.11 management: hostapd.
</span><span class='line'>[ ok ] Starting advanced IEEE 802.11 management: hostapd.
</span></code></pre></td></tr></table></div></figure>


<h3>dhcpd</h3>

<p>We need a dhcp server for assigning a new IP address to the clients who joins the ap:  <br/>
An example file is listed as following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ddns-update-style none;
</span><span class='line'>ignore client-updates;
</span><span class='line'>authoritative;
</span><span class='line'>option local-wpad code 252 = text;
</span><span class='line'> 
</span><span class='line'>subnet
</span><span class='line'>10.0.0.0 netmask 255.255.255.0 {
</span><span class='line'># --- default gateway
</span><span class='line'>option routers
</span><span class='line'>10.0.0.1;
</span><span class='line'># --- Netmask
</span><span class='line'>option subnet-mask
</span><span class='line'>255.255.255.0;
</span><span class='line'># --- Broadcast Address
</span><span class='line'>option broadcast-address
</span><span class='line'>10.0.0.255;
</span><span class='line'># --- Domain name servers, tells the clients which DNS servers to use.
</span><span class='line'>option domain-name-servers
</span><span class='line'>10.0.0.1, 8.8.8.8, 8.8.4.4;
</span><span class='line'>option time-offset
</span><span class='line'>0;
</span><span class='line'>range 10.0.0.3 10.0.0.13;
</span><span class='line'>default-lease-time 1209600;
</span><span class='line'>max-lease-time 1814400;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>WLAN0 Network</h3>

<p>The WLAN0 equipment network should be configured as following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat /etc/network/interface
</span><span class='line'># wireless wlan0
</span><span class='line'>allow-hotplug wlan0
</span><span class='line'>iface wlan0 inet static
</span><span class='line'>address 10.0.70.1
</span><span class='line'>netmask 255.255.255.0
</span></code></pre></td></tr></table></div></figure>


<p>So next time you reboot the computer, it will automatically get the ip address for wlan0.</p>

<h3>Enable the ip forwarding</h3>

<p>Using following 2 commands for enabling your AP.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo iptables -t nat -A POSTROUTING -s 10.0.70.0/24 ! -d 10.0.70.0/24  -j MASQUERADE
</span><span class='line'>$ sudo dhcpd wlan0</span></code></pre></td></tr></table></div></figure>


<p>I add these two lines into the start file of awesome(My desktop environment).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Quick Setup for Chef Server/Client/Workstation]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/08/a-quick-setup-for-chef-server-slash-client-slash-workstation/"/>
    <updated>2015-06-08T20:39:17+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/08/a-quick-setup-for-chef-server-slash-client-slash-workstation</id>
    <content type="html"><![CDATA[<h3>Machine Preparation</h3>

<p>QuickServer: 172.16.0.11, QuickClient: 172.16.0.12</p>

<p>QuickServer Machine:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>xxx@QuickServer:~$ cat /etc/hostname
</span><span class='line'>QuickServer
</span><span class='line'>xxx@QuickServer:~$ cat /etc/hosts
</span><span class='line'>127.0.0.1       localhost
</span><span class='line'>127.0.1.1       QuickServer
</span><span class='line'>172.16.0.11     QuickServer
</span><span class='line'>172.16.0.12     QuickClient
</span><span class='line'>
</span><span class='line'># The following lines are desirable for IPv6 capable hosts
</span><span class='line'>::1     localhost ip6-localhost ip6-loopback
</span><span class='line'>ff02::1 ip6-allnodes
</span><span class='line'>ff02::2 ip6-allrouters
</span><span class='line'>xxx@QuickServer:~$ cat /etc/network/interfaces
</span><span class='line'># This file describes the network interfaces available on your system
</span><span class='line'># and how to activate them. For more information, see interfaces(5).
</span><span class='line'>
</span><span class='line'># The loopback network interface
</span><span class='line'>auto lo
</span><span class='line'>iface lo inet loopback
</span><span class='line'>
</span><span class='line'># The primary network interface
</span><span class='line'>auto eth0
</span><span class='line'>iface eth0 inet static
</span><span class='line'>address 172.16.0.11
</span><span class='line'>netmask 255.255.255.0
</span><span class='line'>gateway 172.16.0.1
</span><span class='line'>dns-nameservers 114.114.114.114
</span></code></pre></td></tr></table></div></figure>


<p>QuickClient Machine:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>xxx@QuickClient:~$ cat /etc/hosts
</span><span class='line'>127.0.0.1       localhost
</span><span class='line'>127.0.1.1       QuickClient
</span><span class='line'>172.16.0.12     QuickClient
</span><span class='line'>172.16.0.11     QuickServer
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># The following lines are desirable for IPv6 capable hosts
</span><span class='line'>::1     localhost ip6-localhost ip6-loopback
</span><span class='line'>ff02::1 ip6-allnodes
</span><span class='line'>ff02::2 ip6-allrouters
</span><span class='line'>xxx@QuickClient:~$ cat /etc/hostname 
</span><span class='line'>QuickClient
</span><span class='line'>xxx@QuickClient:~$ cat /etc/network/interfaces
</span><span class='line'># This file describes the network interfaces available on your system
</span><span class='line'># and how to activate them. For more information, see interfaces(5).
</span><span class='line'>
</span><span class='line'># The loopback network interface
</span><span class='line'>auto lo
</span><span class='line'>iface lo inet loopback
</span><span class='line'>
</span><span class='line'># The primary network interface
</span><span class='line'>auto eth0
</span><span class='line'>iface eth0 inet static
</span><span class='line'>address 172.16.0.12
</span><span class='line'>netmask 255.255.255.0
</span><span class='line'>gateway 172.16.0.1
</span><span class='line'>dns-nameservers 114.114.114.114</span></code></pre></td></tr></table></div></figure>


<h3>QuickServer Installation</h3>

<p>You should have following packges in this server/management node:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ls
</span><span class='line'>chefdk_0.6.0-1_amd64.deb  chef-server-core_12.0.8-1_amd64.deb  opscode-manage_1.13.0-1_amd64.deb</span></code></pre></td></tr></table></div></figure>


<p>Install and configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo dpkg -i chef-server-core_12.0.8-1_amd64.deb
</span><span class='line'>$ sudo chef-server-ctl reconfigure</span></code></pre></td></tr></table></div></figure>


<p>Now configure the chefserver via following command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo chef-server-ctl user-create twocloud cloud Yang twocloud@gmail.com engine --filename ~/twocloud.pem
</span><span class='line'>$ sudo chef-server-ctl org-create twocloud OneCloud Software, Inc. --association_user twocloud --filename ~/twocloud_org.pem
</span><span class='line'>$ ls ~/*.pem
</span><span class='line'>/home/xxxx/twocloud_org.pem  /home/xxxx/twocloud.pem</span></code></pre></td></tr></table></div></figure>


<p>Install opscode:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo dpkg -i opscode-manage_1.13.0-1_amd64.deb
</span><span class='line'>$ sudo opscode-manage-ctl reconfigure</span></code></pre></td></tr></table></div></figure>


<p>Also install the chefdk via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo dpkg -i chefdk_0.6.0-1_amd64.deb</span></code></pre></td></tr></table></div></figure>


<p>Install the git and configure the chef-repo:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install git
</span><span class='line'>$ git config --global user.name "purplepalm"
</span><span class='line'>$ git config --global user.email "purplepalm@gmail.com"
</span><span class='line'>$ git clone https://github.com/opscode/chef-repo.git
</span><span class='line'>$ mkdir .chef
</span><span class='line'>$ cd .chef/
</span><span class='line'>$ scp xxxx@127.0.0.1:/home/xxxx/*.pem ./</span></code></pre></td></tr></table></div></figure>


<p>Now under the .chef directory, create the knife.rb for letting knife using:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat ~/chef-repo/.chef/knife.rb
</span><span class='line'>current_dir = File.dirname(__FILE__)
</span><span class='line'>log_level                :info
</span><span class='line'>log_location             STDOUT
</span><span class='line'>node_name                "twocloud"
</span><span class='line'>client_key               "#{current_dir}/twocloud.pem"
</span><span class='line'>validation_client_name   "twocloud"
</span><span class='line'>validation_key           "#{current_dir}/twocloud_org.pem"
</span><span class='line'>chef_server_url          "https://QuickServer/organizations/twocloud"
</span><span class='line'>syntax_check_cache_path  "#{ENV['HOME']}/.chef/syntaxcache"
</span><span class='line'>cookbook_path            ["#{current_dir}/../cookbooks"]</span></code></pre></td></tr></table></div></figure>


<p>Verify ssl via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ knife ssl fetch
</span><span class='line'>WARNING: Certificates from QuickServer will be fetched and placed in your trusted_cert
</span><span class='line'>directory (/home/xxxx/chef-repo/.chef/trusted_certs).
</span><span class='line'>
</span><span class='line'>Knife has no means to verify these are the correct certificates. You should
</span><span class='line'>verify the authenticity of these certificates after downloading.
</span><span class='line'>
</span><span class='line'>Adding certificate for QuickServer in /home/xxxx/chef-repo/.chef/trusted_certs/QuickServer.crt
</span><span class='line'>
</span><span class='line'>$ knife ssl check
</span><span class='line'>Connecting to host QuickServer:443
</span><span class='line'>Successfully verified certificates from `QuickServer'
</span><span class='line'>$ knife client list
</span><span class='line'>twocloud-validator
</span></code></pre></td></tr></table></div></figure>


<p>Next, configure the QuickClient and add it to the Chef.</p>

<h3>QuickClient</h3>

<p>Install the client deb file via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ls
</span><span class='line'>chef_12.3.0-1_amd64.deb
</span><span class='line'>$ sudo dpkg -i chef_12.3.0-1_amd64.deb </span></code></pre></td></tr></table></div></figure>


<p>Now,On !!! QuickServer !!! , bootstrap the QuickClient via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd ~/chef-repo/
</span><span class='line'>$ knife bootstrap 172.16.0.12 -x xxxx -P xxxxxxxx --sudo
</span><span class='line'>Doing old-style registration with the validation key at /home/xxxx/chef-repo/.chef/twocloud_org.pem...
</span><span class='line'>Delete your validation key in order to use your user credentials instead
</span><span class='line'>
</span><span class='line'>Connecting to 172.16.0.12
</span><span class='line'>172.16.0.12 Starting first Chef Client run...
</span><span class='line'>172.16.0.12 Starting Chef Client, version 12.3.0
</span><span class='line'>172.16.0.12 Creating a new client identity for QuickClient using the validator key.
</span><span class='line'>172.16.0.12 
</span><span class='line'>172.16.0.12 ================================================================================
</span><span class='line'>172.16.0.12 Chef encountered an error attempting to create the client "QuickClient"
</span><span class='line'>172.16.0.12 ================================================================================
</span></code></pre></td></tr></table></div></figure>


<p>Yes, you will meet an error, Now go back to !!! QuickClient !!! and solve it.</p>

<p>First retrieve the pem file under your own home directory:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ scp xxxx@172.16.0.11:/home/xxxx/*.pem ./
</span><span class='line'>Password: 
</span><span class='line'>twocloud_org.pem                                                                                             100% 1674     1.6KB/s   00:00 
</span><span class='line'>twocloud.pem                                                                                                 100% 1674     1.6KB/s   00:00</span></code></pre></td></tr></table></div></figure>


<p>Then fetch back the ssl via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo knife ssl fetch --config /etc/chef/client.rb
</span><span class='line'>WARNING: Certificates from QuickServer will be fetched and placed in your trusted_cert
</span><span class='line'>directory (/etc/chef/trusted_certs).
</span><span class='line'>
</span><span class='line'>Knife has no means to verify these are the correct certificates. You should
</span><span class='line'>verify the authenticity of these certificates after downloading.
</span><span class='line'>
</span><span class='line'>Adding certificate for QuickServer in /etc/chef/trusted_certs/QuickServer.crt</span></code></pre></td></tr></table></div></figure>


<p>Now manually use the <code>/home/xxxx/twocloud.pem</code> for ssl checking.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo chef-client -l debug -S https://QuickServer/organizations/twocloud -K /home/xxxx/twocloud.pem 2&gt;&1</span></code></pre></td></tr></table></div></figure>


<p>Your terminal may encounter Garbled codes, simply quit it, and go back to !!! QuickServer !!!, Bootstrap again via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ knife bootstrap 172.16.0.12 -x xxxx -P xxxxxxxx --sudo
</span><span class='line'>Doing old-style registration with the validation key at /home/xxxx/chef-repo/.chef/twocloud_org.pem...
</span><span class='line'>Delete your validation key in order to use your user credentials instead
</span><span class='line'>
</span><span class='line'>Connecting to 172.16.0.12
</span><span class='line'>172.16.0.12 Starting first Chef Client run...
</span><span class='line'>172.16.0.12 Starting Chef Client, version 12.3.0
</span><span class='line'>172.16.0.12 resolving cookbooks for run list: []
</span><span class='line'>172.16.0.12 Synchronizing Cookbooks:
</span><span class='line'>172.16.0.12 Compiling Cookbooks...
</span><span class='line'>172.16.0.12 [2015-06-08T09:12:09-04:00] WARN: Node QuickClient has an empty run list.
</span><span class='line'>172.16.0.12 Converging 0 resources
</span><span class='line'>172.16.0.12 
</span><span class='line'>172.16.0.12 Running handlers:
</span><span class='line'>172.16.0.12 Running handlers complete
</span><span class='line'>172.16.0.12 Chef Client finished, 0/0 resources updated in 1.179038534 seconds
</span></code></pre></td></tr></table></div></figure>


<p>Now you could list all of the client under your workstation directory:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ knife client list
</span><span class='line'>QuickClient
</span><span class='line'>twocloud-validator</span></code></pre></td></tr></table></div></figure>


<p>QuickClient is the node we just added.</p>

<p>Here provides a good start-point for following operations, next step you could do more magics on newly added nodes, also you could add more nodes for deployment.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef TroubleShooting 2]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/08/chef-troubleshooting-2/"/>
    <updated>2015-06-08T19:43:13+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/08/chef-troubleshooting-2</id>
    <content type="html"><![CDATA[<p>The ssl checking for adding new nodes is still a horrible procedure, following shows the correct steps for adding new node:</p>

<p>On Chef Workstation, add node via its ip address rather than via its hostname:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ knife bootstrap 172.16.0.12 -x username_on_12 -P password_on_12 --sudo</span></code></pre></td></tr></table></div></figure>


<p>The example knife.rb file should be written like following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>current_dir = File.dirname(__FILE__)
</span><span class='line'>log_level                :info
</span><span class='line'>log_location             STDOUT
</span><span class='line'>node_name                "nodename"
</span><span class='line'>client_key               "#{current_dir}/node.pem"
</span><span class='line'>validation_client_name   "nodename"
</span><span class='line'>validation_key           "#{current_dir}/node_org.pem"
</span><span class='line'>chef_server_url          "https://tmpChefServer/organizations/nodename"
</span><span class='line'>syntax_check_cache_path  "#{ENV['HOME']}/.chef/syntaxcache"
</span><span class='line'>cookbook_path            ["#{current_dir}/../cookbooks"]</span></code></pre></td></tr></table></div></figure>


<p>On Chef Client, first fetching the ssl, then manually passed the verification.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ knife ssl fetch --config /etc/chef/client.rb
</span><span class='line'>$ chef-client -l debug -S https://ChefServer/organizations/xxxxx -K /xxx/xxx/xxxxx.pem</span></code></pre></td></tr></table></div></figure>


<p>On Chef Server, bootstrap again via the same command, now you could work.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenVSwitch and VXLAN How-to]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/08/openvswitch-and-vxlan-how-to/"/>
    <updated>2015-06-08T09:48:20+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/08/openvswitch-and-vxlan-how-to</id>
    <content type="html"><![CDATA[<p>Following records the steps for my setup for OpenVSwitch environment and configure VXLAN on it.</p>

<h3>Preparation</h3>

<p>I use two VMs for this experiment, created a new virtual network, it&rsquo;s 10.94.94.0/24, every vm machines adds into this network. <br/>
VM1, VM2, both have 1G Memory. 1 Core. <br/>
VM1: 10.94.94.11, VM2: 10.94.94.12.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get update && sudo apt-get -y upgrade
</span><span class='line'>$ sudo apt-get install build-essential$
</span><span class='line'>$ sudo reboot
</span><span class='line'>$ uname -a
</span><span class='line'>$ uname -a
</span><span class='line'>Linux OpenVSwitchVM1 3.13.0-24-generic #47-Ubuntu SMP Fri May 2 23:30:00 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>Generate DEB</h3>

<p>Following steps includes install dependencies, fetching source code, build, generate package, notice we use 2.3.0 version of the openvswitch.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install -y build-essential fakeroot debhelper \
</span><span class='line'>                    autoconf automake bzip2 libssl-dev \
</span><span class='line'>                    openssl graphviz python-all procps \
</span><span class='line'>                    python-qt4 python-zopeinterface \
</span><span class='line'>                    python-twisted-conch libtool
</span><span class='line'>$ wget http://openvswitch.org/releases/openvswitch-2.3.0.tar.gz
</span><span class='line'>$ tar xzvf openvswitch-2.3.0.tar.gz
</span><span class='line'>$ cd openvsiwtch-2.3.0
</span><span class='line'>$ DEB_BUILD_OPTIONS='parallel=8 nocheck' fakeroot debian/rules binary
</span><span class='line'>$ cd ..
</span><span class='line'>$ ls -al *.deb
</span><span class='line'>openvswitch-common_2.3.0-1_amd64.deb         openvswitch-ipsec_2.3.0-1_amd64.deb   openvswitch-vtep_2.3.0-1_amd64.deb
</span><span class='line'>openvswitch-datapath-dkms_2.3.0-1_all.deb    openvswitch-pki_2.3.0-1_all.deb       python-openvswitch_2.3.0-1_all.deb
</span><span class='line'>openvswitch-datapath-source_2.3.0-1_all.deb  openvswitch-switch_2.3.0-1_amd64.deb
</span><span class='line'>openvswitch-dbg_2.3.0-1_amd64.deb            openvswitch-test_2.3.0-1_all.deb
</span></code></pre></td></tr></table></div></figure>


<p>Also copy all of the deb files into another PC.</p>

<h3>Installation</h3>

<p>In two machines, do following steps for installing.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install -y bridge-utils
</span><span class='line'>$ sudo dpkg -i openvswitch-common_2.3.1-1_amd64.deb \
</span><span class='line'>         openvswitch-switch_2.3.1-1_amd64.deb</span></code></pre></td></tr></table></div></figure>


<h3>VM Netorking Configuration</h3>

<p>For VM1:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@OpenVSwitchVM1:~# ovs-vsctl add-br br0
</span><span class='line'>root@OpenVSwitchVM1:~# ovs-vsctl add-br br1
</span><span class='line'># ovs-vsctl add-port br0 eth0
</span><span class='line'># ifconfig eth0 0 up
</span><span class='line'># ifconfig br0 10.94.94.11
</span><span class='line'># route add default gw 10.94.94.1 br0
</span><span class='line'># ifconfig br1 172.10.0.1
</span></code></pre></td></tr></table></div></figure>


<p>For VM2:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ovs-vsctl add-br br0
</span><span class='line'># ovs-vsctl add-br br1
</span><span class='line'># ovs-vsctl add-port br0 eth0
</span><span class='line'># ifconfig eth0 0 up && ifconfig br0 10.94.94.12
</span><span class='line'># route add default gw 10.94.94.1
</span><span class='line'># ifconfig br1 172.10.1.1</span></code></pre></td></tr></table></div></figure>


<p>Ping each other, we could see br1 is not OK.</p>

<h3>VXLAN Setup</h3>

<p>On VM1, do following operation, to set the vx1:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@OpenVSwitchVM1:~# ovs-vsctl add-port br1 vx1 -- set interface vx1 type=vxlan options:remote_ip=10.94.94.12
</span><span class='line'>root@OpenVSwitchVM1:~# ovs-vsctl show
</span><span class='line'>a1e9afb6-345a-4f79-8e0b-131cd43cfb67
</span><span class='line'>    Bridge "br0"
</span><span class='line'>        Port "eth0"
</span><span class='line'>            Interface "eth0"
</span><span class='line'>        Port "br0"
</span><span class='line'>            Interface "br0"
</span><span class='line'>                type: internal
</span><span class='line'>    Bridge "br1"
</span><span class='line'>        Port "br1"
</span><span class='line'>            Interface "br1"
</span><span class='line'>                type: internal
</span><span class='line'>        Port "vx1"
</span><span class='line'>            Interface "vx1"
</span><span class='line'>                type: vxlan
</span><span class='line'>                options: {remote_ip="10.94.94.12"}
</span><span class='line'>    ovs_version: "2.3.0"</span></code></pre></td></tr></table></div></figure>


<p>On VM2, do following operation, to set vx1</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@OpenVSwitchVM2:~# ovs-vsctl add-port br1 vx1 -- set interface vx1 type=vxlan options:remote_ip=10.94.94.11
</span><span class='line'>root@OpenVSwitchVM2:~# ovs-vsctl show
</span><span class='line'>bce3f2b5-9b77-41dc-8130-b8922dd7ac9e
</span><span class='line'>    Bridge "br1"
</span><span class='line'>        Port "vx1"
</span><span class='line'>            Interface "vx1"
</span><span class='line'>                type: vxlan
</span><span class='line'>                options: {remote_ip="10.94.94.11"}
</span><span class='line'>        Port "br1"
</span><span class='line'>            Interface "br1"
</span><span class='line'>                type: internal
</span><span class='line'>    Bridge "br0"
</span><span class='line'>        Port "br0"
</span><span class='line'>            Interface "br0"
</span><span class='line'>                type: internal
</span><span class='line'>        Port "eth0"
</span><span class='line'>            Interface "eth0"
</span><span class='line'>    ovs_version: "2.3.0"</span></code></pre></td></tr></table></div></figure>


<p>So now you could ping each other via the br1 address.</p>

<h3>Mirror Port</h3>

<p>Do the following things for setting up the mirror port.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#  modprobe dummy
</span><span class='line'>#  ip link set up dummy0
</span><span class='line'>root@OpenVSwitchVM1:~# ovs-vsctl add-port br1 dummy0
</span><span class='line'>root@OpenVSwitchVM1:~# ovs-vsctl --id=@m create mirror name=mirror0 -- add bridge br1 mirrors @m
</span><span class='line'>33931f5a-008f-44cf-abc6-38afb3062b5e
</span><span class='line'>root@OpenVSwitchVM1:~# ovs-vsctl list port dummy0
</span><span class='line'>_uuid               : 5f5fe675-b1ee-4acd-a0ab-f14e952d1603
</span><span class='line'>bond_downdelay      : 0
</span><span class='line'>bond_fake_iface     : false
</span><span class='line'>bond_mode           : []
</span><span class='line'>bond_updelay        : 0
</span><span class='line'>external_ids        : {}
</span><span class='line'>fake_bridge         : false
</span><span class='line'>interfaces          : [a6fbabe9-790d-4be8-a362-b7cbdd46db89]
</span><span class='line'>lacp                : []
</span><span class='line'>mac                 : []
</span><span class='line'>name                : "dummy0"
</span><span class='line'>other_config        : {}
</span><span class='line'>qos                 : []
</span><span class='line'>statistics          : {}
</span><span class='line'>status              : {}
</span><span class='line'>tag                 : []
</span><span class='line'>trunks              : []
</span><span class='line'>vlan_mode           : []
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quickly Change CentOS Networking]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/07/quickly-change-centos-networking/"/>
    <updated>2015-06-07T14:44:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/07/quickly-change-centos-networking</id>
    <content type="html"><![CDATA[<p>When adding the existing qcow2 files to a new machine, following steps needs to be done to enable the new configuration for the networking:</p>

<h3>Change udev rules</h3>

<p>Change the eth1 to eth0, and disable the previous defined eth0:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CentOSVM1 ~]# cat /etc/udev/rules.d/70-persistent-net.rules
</span><span class='line'># This file was automatically generated by the /lib/udev/write_net_rules
</span><span class='line'># program, run by the persistent-net-generator.rules rules file.
</span><span class='line'>#
</span><span class='line'># You can modify it, as long as you keep each rule on a single
</span><span class='line'># line, and change only the value of the NAME= key.
</span><span class='line'>
</span><span class='line'># PCI device 0x1af4:0x1000 (virtio-pci)
</span><span class='line'>#SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="52:54:00:23:14:96", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"
</span><span class='line'>
</span><span class='line'># PCI device 0x1af4:0x1000 (virtio-pci)
</span><span class='line'>SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="52:54:00:bc:c6:f5", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"
</span></code></pre></td></tr></table></div></figure>


<h3>Change the ethernet configuration</h3>

<h4>Hostname</h4>

<p>The hostname and the gateway could be modified via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /etc/sysconfig/network
</span><span class='line'>NETWORKING=yes
</span><span class='line'>+ HOSTNAME=CentOSVM1
</span><span class='line'>+ GATEWAY=172.16.0.1</span></code></pre></td></tr></table></div></figure>


<h4>Change the IP configuration of the eth0</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CentOSVM1 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0
</span><span class='line'>DEVICE=eth0
</span><span class='line'>TYPE=Ethernet
</span><span class='line'>UUID=9d92e12c-54a3-404a-bd1c-ae033e8e968c
</span><span class='line'>ONBOOT=yes
</span><span class='line'>NM_CONTROLLED=yes
</span><span class='line'>BOOTPROTO=none
</span><span class='line'>+ IPADDR=172.16.0.20
</span><span class='line'>PREFIX=24
</span><span class='line'>GATEWAY=172.16.0.1
</span><span class='line'>DNS1=114.114.114.114
</span><span class='line'>DNS2=180.76.76.76
</span><span class='line'>DEFROUTE=yes
</span><span class='line'>IPV4_FAILURE_FATAL=yes
</span><span class='line'>IPV6INIT=no
</span><span class='line'>NAME="System eth0"
</span><span class='line'>#HWADDR=52:54:00:23:14:96
</span><span class='line'>+ HWADDR=52:54:00:BC:C6:F5
</span></code></pre></td></tr></table></div></figure>


<p>By now you could customize the network configuration of the CentOS using the same qcow2 disk file.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Chef for Deploying CloudStack Management Node]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/05/use-chef-for-deploying-cloudstack-management-node/"/>
    <updated>2015-06-05T17:07:22+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/05/use-chef-for-deploying-cloudstack-management-node</id>
    <content type="html"><![CDATA[<p>Following record all of the necessary steps for deploying cloudstack management node on kvm based environment.</p>

<h3>Get The CookBook</h3>

<p>You need following cookbooks:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[kkkk@~/chef-repo/cookbooks]$ ls
</span><span class='line'>apt         cloudstack_wrapper      cookbook_cloudstack_wrapper  line   nfs    rbac       selinux  sudo  yum-mysql-community
</span><span class='line'>cloudstack  cloudstack_wrapper_kvm  learn_chef_apache2           mysql  nginx  README.md  smf      yum
</span><span class='line'>[kkkk@~/chef-repo/cookbooks]$ pwd
</span><span class='line'>/home/kkkk/chef-repo/cookbooks</span></code></pre></td></tr></table></div></figure>


<p>Most of the books could be downloaded from the chef supermarket, while the <code>cookbook_cloudstack_wrapper</code> is downloaded from the github, and <code>cloudstack_wrapper_kvm</code> is modified from it.</p>

<p>Note: You have to replace all of the <code>cloudstack_wrapper::</code> to <code>cloudstack_wrapper_kvm::</code> under the copied folder.</p>

<p>You have to modify the definition of the</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[dash@~/chef-repo/cookbooks]$ cat cloudstack_wrapper_kvm/recipes/management_server.rb
</span><span class='line'>
</span><span class='line'>......
</span><span class='line'>
</span><span class='line'># download initial systemvm template
</span><span class='line'>cloudstack_system_template 'kvm' do
</span><span class='line'>  nfs_path    node['cloudstack']['secondary']['path']
</span><span class='line'>  nfs_server  node['cloudstack']['secondary']['host']
</span><span class='line'>  url         node['cloudstack']['systemvm']['kvm']
</span><span class='line'>  db_user     node['cloudstack']['db']['username']
</span><span class='line'>  db_password node['cloudstack']['db']['password']
</span><span class='line'>  db_host     node['cloudstack']['db']['host']
</span><span class='line'>  action :create
</span><span class='line'>end
</span><span class='line'>......
</span></code></pre></td></tr></table></div></figure>


<h3>Add Node</h3>

<p>Add a new node into the system , then you should do following steps for letting the deployment continue:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ proxychains4  /opt/chef/embedded/bin/gem install cloudstack_ruby_client
</span><span class='line'>$ sudo apt-get update
</span><span class='line'>$  sudo apt-get install nfs-common</span></code></pre></td></tr></table></div></figure>


<p>Now continue until you could see the final result.</p>

<h3>Verification</h3>

<p>After deployment, visit:</p>

<p><a href="http://YourIP:8080/client">http://YourIP:8080/client</a>   admin/password</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on Using Vagrant and Chefdk]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/03/tips-on-using-vagrant-and-chefdk/"/>
    <updated>2015-06-03T21:00:20+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/03/tips-on-using-vagrant-and-chefdk</id>
    <content type="html"><![CDATA[<ol>
<li>You should install all of the gem of <code>berkshelf</code> via:</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install berkshelf
</span><span class='line'>$ /opt/chef/embedded/bin/gem install berkshelf
</span><span class='line'>$ /opt/vagrant/embedded/bin/gem install berkshelf</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Besure to add following into your PATH:</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$  echo $PATH
</span><span class='line'>/opt/chefdk/bin:/home/kkk/.rvm/gems/ruby-2.2.1/bin:/home/kkk/.rvm/gems/ruby-2.2.1@global/bin:/home/kkk/.rvm/rubies/ruby-2.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/kkk/.rvm/bin:/home/kkk/.rvm/bin:/home/kkk/.rvm/bin</span></code></pre></td></tr></table></div></figure>


<p>So now you could continue with <code>vagrant up</code> or other steps.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef Trouble-Shooting]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/02/chef-trouble-shooting/"/>
    <updated>2015-06-02T16:16:42+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/02/chef-trouble-shooting</id>
    <content type="html"><![CDATA[<h3>Error</h3>

<p>Could not Add new nodes.</p>

<h3>Reason</h3>

<p>This is because the chefDK remains the old version of chef-client,</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[dash@~/chef-repo]$ chef --version
</span><span class='line'>Chef Development Kit Version: 0.6.0
</span><span class='line'>chef-client version: ERROR
</span><span class='line'>berks version: ERROR
</span><span class='line'>kitchen version: 1.4.0</span></code></pre></td></tr></table></div></figure>


<h3>Solution</h3>

<p>In node, manually get verified via following command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ knife ssl fetch --config /etc/chef/client.rb
</span><span class='line'>$ chef-client -l debug -S https://ChefServer/organizations/xxxxx -K /xxx/xxx/xxxxx.pem</span></code></pre></td></tr></table></div></figure>


<p>Now bootstrap again, and you will see the node could be added into the Chef-Server&rsquo;s system.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef for Deploying OpenStack]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/01/chef-for-deploying-openstack/"/>
    <updated>2015-06-01T11:19:34+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/01/chef-for-deploying-openstack</id>
    <content type="html"><![CDATA[<p>Following article records all of the steps for using chef for deploying OpenStack.</p>

<p>Refers to:  <br/>
<a href="http://ehaselwanter.com/en/blog/2014/10/15/deploying-openstack-with-stackforge-chef-zero-style/">http://ehaselwanter.com/en/blog/2014/10/15/deploying-openstack-with-stackforge-chef-zero-style/</a></p>

<h3>Change vbox files</h3>

<p>Edit the Vagrantfile for bring up the vbox, then startup the machine, modify its content , save it.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim Vagrantfile
</span><span class='line'>    # -*- mode: ruby -*-
</span><span class='line'>    # vi: set ft=ruby :
</span><span class='line'>    Vagrant::Config.run do |config|
</span><span class='line'>    config.vm.box = "Trusy64"
</span><span class='line'>    config.vm.box_url = "http://xxx.xxx.xxx.xxx/opscode_ubuntu-14.04_chef-provisionerless.box"
</span><span class='line'>    config.vm.customize ["modifyvm", :id, "--memory", 1024]
</span><span class='line'>    end</span></code></pre></td></tr></table></div></figure>


<p>
Login to the running machine and modify its default repository from official to local repository.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant up
</span><span class='line'>$ vagrant ssh
</span><span class='line'>(YourVagrantMachine) $ sudo vim /etc/apt/sources.list
</span><span class='line'>(YourVagrantMachine) $ sudo vim /etc/apt/apt.conf
</span><span class='line'>(YourVagrantMachine) $ sudo apt-get update && sudo apt-get -y upgrade</span></code></pre></td></tr></table></div></figure>


<p>Now save your modification to the vbox file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant package --base vagrant_default_1433130468275_38998
</span><span class='line'>$ ls
</span><span class='line'>package.box Vagrantfile</span></code></pre></td></tr></table></div></figure>


<h3>Setup Chef Code</h3>

<p>First install the vagrant plugins via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant plugin install vagrant-berkshelf
</span><span class='line'>$ vagrant plugin install vagrant-chef-zero
</span><span class='line'>$ vagrant plugin install vagrant-omnibus
</span><span class='line'>$ vagrant plugin list</span></code></pre></td></tr></table></div></figure>


<p>Get the repository from github, modify the file <code>vagrant_linux.rb</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[xxxx@~/Code/Chef/MasterVersion]$ git clone https://github.com/stackforge/openstack-chef-repo.git
</span><span class='line'>$ cd openstack-chef-repo
</span><span class='line'>$ vim vagrant_linux.rb
</span><span class='line'>  #url 'http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_centos-7.1_chef-provisionerless.box'
</span><span class='line'>  url 'http://xxx.xxx.xxx.xxx/opscode_centos-7.1_chef-provisionerless.box'
</span><span class='line'>
</span><span class='line'>  #url 'http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-14.04_chef-provisionerless.box'
</span><span class='line'>  url 'http://xxx.xxx.xxx.xxx/package.box'
</span><span class='line'>
</span><span class='line'>  'vm.box' =&gt; 'ubuntu14'</span></code></pre></td></tr></table></div></figure>


<p>Download all of the cookbooks, and modify the rubygems.org to Chinese mirror, Thanks for the fucking GreatFW!:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ chef exec rake berks_vendor
</span><span class='line'>$ cp -r cookbooks cookbooks.back
</span><span class='line'>$ cd cookbooks
</span><span class='line'>$ find . -type f -exec sed -i -e 's/https:\/\/rubygems.org/http:\/\/mirrors.aliyun.com\/rubygems/g' {} \; </span></code></pre></td></tr></table></div></figure>


<p>Edit the ruby definition file for avoiding <code>Chef encountered an error attempting to load the node data for "controller"</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim ./aio-neutron.rb
</span><span class='line'>machine 'controller' do
</span><span class='line'>  add_machine_options vagrant_config: controller_config
</span><span class='line'>+  chef_server( :chef_server_url =&gt; 'http://localhost:8889')
</span><span class='line'>  role 'allinone-compute'
</span><span class='line'>  role 'os-image-upload'
</span></code></pre></td></tr></table></div></figure>


<p>One Cookbook needs to modify, because it will automatically use source from <code>rubygems.org</code>, Thanks again for the fucking GreatFW!:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd cookbooks
</span><span class='line'>$ vim ./mysql2_chef_gem/libraries/provider_mysql2_chef_gem_mysql.rb
</span><span class='line'>             options("--clear-sources --source http://mirrors.aliyun.com/rubygems/gems/mysql2-0.3.18.gem") 
</span></code></pre></td></tr></table></div></figure>


<p>Now begin to provision via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ chef exec rake aio_neutron 2&gt;&1 | tee aio_neutron.txt</span></code></pre></td></tr></table></div></figure>


<p>After installation and configuration, you could visit following URL for your OpenStack:</p>

<p><a href="https://127.0.0.1:9443">https://127.0.0.1:9443</a></p>
]]></content>
  </entry>
  
</feed>
