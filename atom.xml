<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dash]]></title>
  <link href="http://purplepalmdash.github.io/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2016-02-01T20:35:26+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Virtio-gpu Working Tips]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/01/31/virtio-gpu-working-tips/"/>
    <updated>2016-01-31T11:49:13+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/01/31/virtio-gpu-working-tips</id>
    <content type="html"><![CDATA[<h3>System</h3>

<p>Install Fedora 23, select fedora server and install the system, then using the
lastest development kernel via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -s https://repos.fedorapeople.org/repos/thl/kernel-vanilla.repo | sudo tee /etc/yum.repos.d/kernel-vanilla.repo
</span><span class='line'>$ sudo dnf --enablerepo=kernel-vanilla-mainline update</span></code></pre></td></tr></table></div></figure>


<p>Checking the running kernel via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ uname -r
</span><span class='line'>4.5.0-0.rc1.git0.1.vanilla.knurd.1.fc23.x86_64</span></code></pre></td></tr></table></div></figure>


<p>Running the system which have kernel version newer than 4.4  is the basis for enable the virt-io.</p>

<h3>Install packages</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo dnf install -y gcc zlib-devel glib2-devel pixman-devel libfdt-devel \ 
</span><span class='line'>lzo-devel snappy-devel bzip2-devel libseccomp-devel gtk2-devel gtk3-devel \ 
</span><span class='line'>gnutls-devel vte-devel SDL-devel librdmacm-devel libuuid-devel \ 
</span><span class='line'> libcap-ng-devel libcurl-devel ceph-devel libssh2-devel libaio-devel \ 
</span><span class='line'>glusterfs-devel glusterfs-api-devel numactl-devel gperftools-devel \ 
</span><span class='line'> texinfo libiscsi-devel spice-server-devel libusb-devel usbredir-devel \ 
</span><span class='line'>libnfs-devel libcap-devel libattr-devel  </span></code></pre></td></tr></table></div></figure>


<h3>virglrenderer</h3>

<p>coprs have the repository for this:  <br/>
<a href="https://copr.fedorainfracloud.org/coprs/kraxel/">https://copr.fedorainfracloud.org/coprs/kraxel/</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd /etc/yum.repos.d/
</span><span class='line'>$ sudo wget https://copr.fedorainfracloud.org/coprs/kraxel/virgl/repo/fedora-23/kraxel-virgl-fedora-23.repo</span></code></pre></td></tr></table></div></figure>


<p>Install the virglrenderer via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo dnf install virglrenderer</span></code></pre></td></tr></table></div></figure>


<h3>qemu</h3>

<p>Git clone the source code:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone https://www.kraxel.org/cgit/qemu</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Read Digest on KVM]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/01/26/read-digest-on-kvm/"/>
    <updated>2016-01-26T09:12:26+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/01/26/read-digest-on-kvm</id>
    <content type="html"><![CDATA[<h3>Some Words</h3>

<p>VMM: (Virtual Machine Monitor)   <br/>
VMX: (Virtual Machine eXtensions):  instructions on processors with x86 virtualization.</p>

<p>Virtualization software:  is most often used to emulate a complete computer system in
order to allow a guest operating system to be run, for example allowing Linux to run as
a guest on top of a PC that is natively running a Microsoft Windows operating system
(or the inverse, running Windows as a guest on Linux).</p>

<p>CPU Ring:   <br/>
<a href="https://en.wikipedia.org/wiki/Protection_ring">https://en.wikipedia.org/wiki/Protection_ring</a></p>

<p><img src="http://purplepalmdash.github.io/images/300px-Priv_rings.svg.png" alt="/images/300px-Priv_rings.svg.png" /></p>

<p>VT-d, I/O Hardware Virtualization.   <br/>
VT-c, Networking Hardware Virtualization.</p>

<h3>Host kickstart file</h3>

<p>Add following installation packages:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%packages
</span><span class='line'>@virtualization
</span><span class='line'>@Base
</span><span class='line'>@Core
</span><span class='line'>@additional-devel
</span><span class='line'>@base
</span><span class='line'>@large-systems
</span><span class='line'>@storage-client-iscsi
</span><span class='line'>@systgem-management-snmp
</span><span class='line'>@virtualization
</span><span class='line'>@virtualization-client
</span><span class='line'>@virtualization-platform
</span><span class='line'>@virtualization-tools
</span><span class='line'>%end</span></code></pre></td></tr></table></div></figure>


<h3>Mouse On Windows Virtual Machine</h3>

<p>Add twice the usb mouse:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;input type='tablet' bus='usb'</span></code></pre></td></tr></table></div></figure>


<h3>NUMA</h3>

<p>Install the numa configuration tools via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-cache search numactl
</span><span class='line'>numactl - NUMA scheduling and memory placement tool
</span><span class='line'># apt-get -y install numactl</span></code></pre></td></tr></table></div></figure>


<p>Command: <code>numactl --hardware</code>, <code>numastat</code>, <code>numastat -c qemu-kvm</code>.</p>

<p>Check the numa banlancing policy via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /proc/sys/kernel/numa_balancing
</span><span class='line'>0</span></code></pre></td></tr></table></div></figure>


<p><code>echo 1</code> for open the auto balancing.</p>

<p>KSM, could merge the same memory page, even in different NUMA node.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /sys/kernel/mm/ksm/merge_across_nodes 
</span><span class='line'>1</span></code></pre></td></tr></table></div></figure>


<h3>CPU Binding</h3>

<p>Use <code>virsh vcpuinfo xx</code> for displaying the VCPU/CPU corresponding relationship.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>virsh # emulatorpin 79
</span><span class='line'>emulator: CPU Affinity
</span><span class='line'>----------------------------------
</span><span class='line'>       *: 0-7</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Change it dynamically:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>virsh # emulatorpin 79 0-3 --live
</span><span class='line'>
</span><span class='line'>virsh # emulatorpin 79
</span><span class='line'>emulator: CPU Affinity
</span><span class='line'>----------------------------------
</span><span class='line'>       *: 0-3</span></code></pre></td></tr></table></div></figure>


<p>Now you could check the result via <code>virsh dumpxml xxx</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  &lt;vcpu placement='static'&gt;4&lt;/vcpu&gt;
</span><span class='line'>  &lt;cputune&gt;
</span><span class='line'>    &lt;emulatorpin cpuset='0-3'/&gt;
</span><span class='line'>  &lt;/cputune&gt;</span></code></pre></td></tr></table></div></figure>


<p>1-1 binding using virsh:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># virsh vcpupin 79 0 0    
</span><span class='line'># virsh vcpupin 79 1 1
</span><span class='line'># virsh vcpupin 79 2 2
</span><span class='line'># virsh vcpupin 79 3 3
</span><span class='line'># virsh dumpxml 79 | more
</span><span class='line'>  &lt;cputune&gt;
</span><span class='line'>    &lt;vcpupin vcpu='0' cpuset='0'/&gt;
</span><span class='line'>    &lt;vcpupin vcpu='1' cpuset='1'/&gt;
</span><span class='line'>    &lt;vcpupin vcpu='2' cpuset='2'/&gt;
</span><span class='line'>    &lt;vcpupin vcpu='3' cpuset='3'/&gt;</span></code></pre></td></tr></table></div></figure>


<p>Now view the vcpuinfo via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># virsh vcpuinfo 79
</span><span class='line'>VCPU:           0
</span><span class='line'>CPU:            0
</span><span class='line'>State:          running
</span><span class='line'>CPU time:       9.2s
</span><span class='line'>CPU Affinity:   y-------</span></code></pre></td></tr></table></div></figure>


<h3>CPU Hot-Plug-in</h3>

<p>The cpu configuration info is listed as:</p>

<p><img src="http://purplepalmdash.github.io/images/2016_01_26_10_54_29_285x127.jpg" alt="/images/2016_01_26_10_54_29_285x127.jpg" /></p>

<p>View the CPU infos via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /proc/interrupts 
</span><span class='line'>           CPU0       CPU1       </span></code></pre></td></tr></table></div></figure>


<p>Change the CPUs to 3:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>virsh # setvcpus 80 3 --live</span></code></pre></td></tr></table></div></figure>


<p>Now in the vm the result should be(or detect it via <code>cat /proc/cpuinfo</code>) :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /proc/interrupts 
</span><span class='line'>           CPU0       CPU1       CPU2  </span></code></pre></td></tr></table></div></figure>


<h3>CPU Working Mode</h3>

<p>If we select the pass-through, then the cpuinfo should be:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># virsh dumpxml xxxxx
</span><span class='line'>  &lt;cpu mode='host-passthrough'&gt;
</span><span class='line'>  &lt;/cpu&gt;
</span><span class='line'># cat /proc/cpuinfo
</span><span class='line'>processor       : 1
</span><span class='line'>vendor_id       : GenuineIntel
</span><span class='line'>cpu family      : 6
</span><span class='line'>model           : 58
</span><span class='line'>model name      : Intel(R) Core(TM) i7-3770 CPU @ 3.40GHz</span></code></pre></td></tr></table></div></figure>


<p>If we select the host-model, will choose the most similar:  <br/>
Or If we choose <code>Copy host cpu mode</code>, like following:  <br/>
<img src="http://purplepalmdash.github.io/images/2016_01_26_11_07_32_299x274.jpg" alt="/images/2016_01_26_11_07_32_299x274.jpg" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /proc/cpuinfo
</span><span class='line'>....
</span><span class='line'>processor       : 1
</span><span class='line'>vendor_id       : GenuineIntel
</span><span class='line'>cpu family      : 6
</span><span class='line'>model           : 42
</span><span class='line'>model name      : Intel Xeon E312xx (Sandy Bridge)</span></code></pre></td></tr></table></div></figure>


<h3>Memory Balloon</h3>

<p>Change the memory balloon to 1024 or 4096 via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># virsh qemu-monitor-command PerfTune --hmp --cmd balloon 1024
</span><span class='line'># virsh qemu-monitor-command PerfTune --hmp --cmd info balloon
</span><span class='line'>balloon: actual=1024
</span><span class='line'># virsh qemu-monitor-command PerfTune --hmp --cmd balloon 4096</span></code></pre></td></tr></table></div></figure>


<h3>Memory Limitation</h3>

<p>Make configuration of the memory via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>virsh memtune PerfTune --hard-limit xxxxx --config
</span><span class='line'>virsh memtune PerfTune --soft-limit xxxxx --config
</span><span class='line'>virsh memtune PerfTune --swap-hard-limit xxxxx --config
</span><span class='line'>virsh memtune PerfTune --min_guarantee xxxxx --config</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>--config, write to configuration xml
</span><span class='line'>--live, lively write 
</span><span class='line'>--current ?     
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>### HugePage
</span></code></pre></td></tr></table></div></figure>


<h1>grep -i huge /proc/meminfo</h1>

<p>AnonHugePages:  12820480 kB
HugePages_Total:       0
HugePages_Free:        0
HugePages_Rsvd:        0
HugePages_Surp:        0
Hugepagesize:       2048 kB
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on Setup Mesos Cluster]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/01/18/tips-on-setup-mesos-cluster/"/>
    <updated>2016-01-18T10:01:17+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/01/18/tips-on-setup-mesos-cluster</id>
    <content type="html"><![CDATA[<h3>Prerequisition</h3>

<p>Install on Ubuntu14.04, so first we update to the latest version via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get update && sudo apt-get upgrade -y</span></code></pre></td></tr></table></div></figure>


<p>Prepare the repository of mesos via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sudo apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF
</span><span class='line'># DISTRO=$(lsb_release -is | tr '[:upper:]' '[:lower:]')
</span><span class='line'># CODENAME=$(lsb_release -cs)
</span><span class='line'># echo "deb http://repos.mesosphere.io/${DISTRO} ${CODENAME} main" | sudo tee /etc/apt/sources.list.d/mesosphere.list</span></code></pre></td></tr></table></div></figure>


<p>mesos depends on java8, so we should install java8 on ubuntu machine via following command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install software-properties-common
</span><span class='line'>$ sudo add-apt-repository ppa:webupd8team/java -y
</span><span class='line'>$ sudo apt-get update
</span><span class='line'>$ sudo apt-get install oracle-java8-installer</span></code></pre></td></tr></table></div></figure>


<h3>Installation</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Tips(4)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/01/15/linux-tips-4/"/>
    <updated>2016-01-15T18:37:03+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/01/15/linux-tips-4</id>
    <content type="html"><![CDATA[<h3>1. Run ansible commands</h3>

<p>Run commands in all hosts:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ansible all -i inventory.ini -m command -u root --args "uptime"</span></code></pre></td></tr></table></div></figure>


<h3>2. mesos introduction</h3>

<p><a href="http://www.infoq.com/cn/articles/analyse-mesos-part-02">http://www.infoq.com/cn/articles/analyse-mesos-part-02</a></p>

<h3>3. Limit ansible run hosts</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ansible-playbook -i inventory_mesos_cluster changehostname.yml -u root -k
</span><span class='line'>-vvvv --list-hosts
</span><span class='line'>
</span><span class='line'>playbook: changehostname.yml
</span><span class='line'>
</span><span class='line'>  play #1 (master1): host count=1
</span><span class='line'>    10.47.58.31
</span><span class='line'>
</span><span class='line'>#  ansible-playbook -i
</span><span class='line'>inventory_mesos_cluster changehostname.yml -u root -k -vvvv --limit="master1"
</span></code></pre></td></tr></table></div></figure>


<h3>4. Configure the dhcp configuration of libvirtd</h3>

<p>First edit the net configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># virsh net-edit xxxxx</span></code></pre></td></tr></table></div></figure>


<p><img src="http://purplepalmdash.github.io/images/2016_01_16_20_23_08_715x270.jpg" alt="/images/2016_01_16_20_23_08_715x270.jpg" /></p>

<h3>5. Copy items into clipboard in vim</h3>

<p>Hit <code>Ctrl+v</code> to visual model, then select the items you want to copy, after select
them, click <code>"*y</code> will copy whatever you selected into your clipbard.</p>

<p>Copy from clipboard&mdash;- simply hit <code>p</code> in command mode.</p>

<h3>6. mesos.cli</h3>

<p>When you meet <code>no module named mesos</code>, install it via pip:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pip install mesos.cli</span></code></pre></td></tr></table></div></figure>


<h3>7. Startdict In Command Line</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install -y sdcv
</span><span class='line'>$ wget
</span><span class='line'>https://web.archive.org/web/20140917131745/http://abloz.com/huzheng/stardict-dic/dict.org/stardict-dictd_www.dict.org_gcide-2.4.2.tar.bz2
</span><span class='line'>$ sudo mkdir -p /usr/share/stardict/dic/
</span><span class='line'>$ sudo tar xjvf stardict-dictd_www.dict.org_gcide-2.4.2.tar.bz2 -C /usr/share/stardict/dic 
</span></code></pre></td></tr></table></div></figure>


<h3>8. Golden Dict</h3>

<p>Golden Dict.</p>

<h3>9. Latest Info On OpenStack</h3>

<p><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjkwMDY5OA==&amp;mid=404253985&amp;idx=1&amp;sn=0d6c544dfb129e35bde7d19a0de8887b&amp;scene=1&amp;srcid=01267Etq7arAdYaFqbUG5BNa&amp;pass_ticket=qT7Nk3zsTIegBKqnPTUL%2FTtS%2FMNDH%2F07Fz%2Bfua9RcTwSHVO5OLo5wDpfeb%2FBLCEH#rd">https://mp.weixin.qq.com/s?__biz=MzA3MjkwMDY5OA==&amp;mid=404253985&amp;idx=1&amp;sn=0d6c544dfb129e35bde7d19a0de8887b&amp;scene=1&amp;srcid=01267Etq7arAdYaFqbUG5BNa&amp;pass_ticket=qT7Nk3zsTIegBKqnPTUL%2FTtS%2FMNDH%2F07Fz%2Bfua9RcTwSHVO5OLo5wDpfeb%2FBLCEH#rd</a></p>

<h3>10. Quickly Configure vagrant machine</h3>

<p>Via following you could get outside world:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ip route del default gw 10.0.2.2 dev enp0s3
</span><span class='line'>ip a del 192.168.10.199/24 dev enp0s8
</span><span class='line'>ip a add 192.168.10.199/16 dev enp0s8
</span><span class='line'>ip route add default via 192.168.0.79 dev enp0s8</span></code></pre></td></tr></table></div></figure>


<h3>11. Change the default gateway On CentOS 7</h3>

<p>Default gateway should go here:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat /etc/sysconfig/network
</span><span class='line'># Created by anaconda
</span><span class='line'>GATEWAY=192.168.0.79</span></code></pre></td></tr></table></div></figure>


<p>And remove the origin default gateway by adding following definitions :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat /etc/sysconfig/network-scripts/ifcfg-enp0s3 
</span><span class='line'># Generated by dracut initrd
</span><span class='line'>NAME="enp0s3"
</span><span class='line'>DEVICE="enp0s3"
</span><span class='line'>BOOTPROTO=dhcp
</span><span class='line'># This one is not the default gw
</span><span class='line'>DEFROUTE=no
</span><span class='line'># Do not override the dns
</span><span class='line'>PEERDNS=no</span></code></pre></td></tr></table></div></figure>


<p>Thus the default gateway won&rsquo;t go from enp0s3, but from enp0s8, won&rsquo;t configure the dns
address to 10.0.x.x.</p>

<h3>12. On VPNs</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://linsir.org/post/how_to_install_IPSec_IKEV2_base_on_strongswan_with_CentOS7
</span><span class='line'>https://quericy.me/blog/512
</span><span class='line'>https://quericy.me/blog/699
</span><span class='line'>http://lifehacker.io/post/108814979111/%E5%9C%A8%E6%90%AC%E7%93%A6%E5%B7%A5%E7%9A%84centos7%E4%B8%8B%E6%90%AD%E5%BB%BAstrongswan%E5%AE%9E%E7%8E%B0%E5%9C%A8ios%E4%B8%8A%E6%8C%89%E9%9C%80%E8%BF%9E%E6%8E%A5vpn
</span><span class='line'>https://raymii.org/s/tutorials/IPSEC_vpn_with_CentOS_7.html
</span><span class='line'>https://linux.cn/article-5938-weibo.html</span></code></pre></td></tr></table></div></figure>


<p>MMC snap-in:  <br/>
<a href="https://technet.microsoft.com/en-us/library/cc722035.aspx">https://technet.microsoft.com/en-us/library/cc722035.aspx</a></p>

<h3>13. Use iptables On CentOS7</h3>

<p>Use  following steps for disable firewalld and use iptables.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ systemctl stop firewalld
</span><span class='line'>$ systemctl mask firewalld
</span><span class='line'>$ yum install iptables-services
</span><span class='line'>$ systemctl enable iptables
</span><span class='line'>$ systemctl start iptables
</span></code></pre></td></tr></table></div></figure>


<h3>14. Quickly Goes kernel configuration</h3>

<p>When you want to configure the newer kernel source tree using your old kernel
configuration, simply do following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yes "" | make oldconfig</span></code></pre></td></tr></table></div></figure>


<h3>15. iptables problem</h3>

<p>After installing the newest kernel, I cannot use iptables, showing <code>can't initialize iptables : table does not exist</code>.</p>

<p>Solution: compile the modules again, select nat.</p>

<p><img src="http://purplepalmdash.github.io/images/2016_01_28_16_05_52_496x361.jpg" alt="/images/2016_01_28_16_05_52_496x361.jpg" /></p>

<p>Selecting from:   <br/>
Networking Support  <br/>
Network Options   <br/>
Network packet filtering framework(Netfilter)  <br/>
IP: Netfilter Configuration</p>

<p>Then you should <code>make modules_install</code> under your kernel source building directory.</p>

<h3>16. DistCC For Building Kernel DEB</h3>

<p>On configurating distcc:  <br/>
<a href="http://linuxdeveloper.blogspot.tw/2012/03/distributed-kernel-compilation-in.html">http://linuxdeveloper.blogspot.tw/2012/03/distributed-kernel-compilation-in.html</a></p>

<p>On building Linux kernel deb files:</p>

<p><a href="http://www.cyberciti.biz/faq/debian-ubuntu-building-installing-a-custom-linux-kernel/">http://www.cyberciti.biz/faq/debian-ubuntu-building-installing-a-custom-linux-kernel/</a></p>

<p>And:</p>

<p><a href="https://help.ubuntu.com/community/Kernel/Compile">https://help.ubuntu.com/community/Kernel/Compile</a></p>

<p>Actual command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ time sudo make -j12 CC=distcc
</span><span class='line'>$ sudo MAKEFLAGS="CC=distcc" make-kpkg --rootcmd fakeroot --initrd --append-to-version=-suspend2 kernel-image kernel-headers kernel-source -j16</span></code></pre></td></tr></table></div></figure>


<p>Really takes long time for building the kernel out, but the iptables won&rsquo;t works.</p>

<h3>17. dmenu On Ubuntu</h3>

<p>dmenu is in the package of suckless-tools.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install suckless-tools</span></code></pre></td></tr></table></div></figure>


<h3>18. Virtio-GPU How-to</h3>

<p><a href="https://www.kraxel.org/blog/2015/06/virtio-gpu-on-the-way-upstream/">https://www.kraxel.org/blog/2015/06/virtio-gpu-on-the-way-upstream/</a></p>

<h3>20. Use Latest Dev Kernel On Fedora</h3>

<p>Refers to
<a href="http://fedoraproject.org/wiki/Kernel_Vanilla_Repositories">http://fedoraproject.org/wiki/Kernel_Vanilla_Repositories</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -s https://repos.fedorapeople.org/repos/thl/kernel-vanilla.repo | sudo tee /etc/yum.repos.d/kernel-vanilla.repo
</span><span class='line'>$ sudo dnf --enablerepo=kernel-vanilla-mainline update</span></code></pre></td></tr></table></div></figure>


<p>Fall back to the stable one:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo dnf --enablerepo=kernel-vanilla-stable update</span></code></pre></td></tr></table></div></figure>


<h3>21. Install grub on usb disk/ArchLinux</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># chattr -i /boot/grub/i386-pc/core.img 
</span><span class='line'># grub-install --target=i386-pc --recheck --debug --force /dev/sdb
</span><span class='line'># chattr +i /boot/grub/i386-pc/core.img </span></code></pre></td></tr></table></div></figure>


<h3>22. fcitx-gtk3</h3>

<p>Since now firefox using gtk3, so if you want to input chinese in firefox, simply install <code>fcitx-gtk3</code> then you get fcitx working.</p>

<h3>23. Polkit And Virt-manager</h3>

<p>Problem:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ virsh -c qemu:///system
</span><span class='line'>error: failed to connect to the hypervisor
</span><span class='line'>error: authentication failed: no agent is available to authenticate</span></code></pre></td></tr></table></div></figure>


<p>Add the configuration for the polkit and restart the service:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/polkit-1/rules.d/49-org.libvirt.unix.manager.rules
</span><span class='line'>polkit.addRule(function(action, subject) {
</span><span class='line'>    if (action.id == "org.libvirt.unix.manage" &&
</span><span class='line'>        subject.isInGroup("kvm")) {
</span><span class='line'>            return polkit.Result.YES;
</span><span class='line'>        }
</span><span class='line'>});</span></code></pre></td></tr></table></div></figure>


<p>And also you have to add your current user into the group of <code>kvm</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo usermod -a -G kvm &lt;user name&gt;</span></code></pre></td></tr></table></div></figure>


<p>Restar the polkit service via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo systemctl restart polkit.service</span></code></pre></td></tr></table></div></figure>


<h3>24. Running tasks in byobu</h3>

<p><a href="http://superuser.com/questions/623432/transfer-current-command-to-a-detachable-session-tmux-screen">http://superuser.com/questions/623432/transfer-current-command-to-a-detachable-session-tmux-screen</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vlan Experiment]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/01/15/vlan-experiment/"/>
    <updated>2016-01-15T09:16:34+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/01/15/vlan-experiment</id>
    <content type="html"><![CDATA[<p>Recently I am busy with configurating the LXC networking in Cloudstack, so following is
how I understanding the vlan experiment on how to understand the
public/private/management networking in CloudStack.</p>

<h3>Prerequisite</h3>

<p>Prepare 2 virtual machine of CentOS6.7, each connected to a seperated networking. <br/>
Machine 1, dhcp, got 10.47.58.203. Named vlan1.      <br/>
Machine 2, dhcp, got 10.47.58.214. Named vlan2.</p>

<h3>Install Software</h3>

<p>For easily configure 802.1Q vlan tagging networking in CentOS7, install following packages.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ yum install vconfig</span></code></pre></td></tr></table></div></figure>


<h3>Vlan Configurating</h3>

<p>Configure like following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0
</span><span class='line'>DEVICE="eth0"
</span><span class='line'>#BOOTPROTO="dhcp"
</span><span class='line'>BOOTPROTO="none"
</span><span class='line'>NM_CONTROLLED="yes"
</span><span class='line'>ONBOOT="yes"
</span><span class='line'>TYPE="Ethernet"
</span><span class='line'>[root@localhost ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0.100 
</span><span class='line'>DEVICE=eth0.100
</span><span class='line'>ONBOOT=yes
</span><span class='line'>HOTPLUG=no
</span><span class='line'>BOOTPROTO=none
</span><span class='line'>TYPE=Ethernet
</span><span class='line'>VLAN=yes
</span><span class='line'>IPADDR=192.168.42.11
</span><span class='line'>NETMASK=255.255.255.0</span></code></pre></td></tr></table></div></figure>


<p>In another machine, configure the eth0.100 as <code>192.168.42.12</code>, after reboot, they could
be reached via this vlan tagging 100 address.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CloudStack使用LXC要点]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/01/14/cloudstackshi-yong-lxcyao-dian/"/>
    <updated>2016-01-14T19:41:03+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/01/14/cloudstackshi-yong-lxcyao-dian</id>
    <content type="html"><![CDATA[<h3>先决条件</h3>

<p>Cloudstack 4.6.0, Management Server搭建完毕, Agent包安装完毕.   <br/>
具体的步骤可以参考KVM的安装.</p>

<h3>Agent机器</h3>

<p>设置hypervisor的类型为LXC模式:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim /etc/cloudstack/agent/agent.properties
</span><span class='line'> hypervisor.type=lxc
</span><span class='line'>$ service cloudstack-agent restart</span></code></pre></td></tr></table></div></figure>


<h3>LXC系统虚拟机模板安装</h3>

<p>在CloudStack Management节点上,运行以下命令安装系统虚拟机模板:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ /usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m /mnt1 -u http://192.168.177.13/systemvm64template-4.6.0-kvm.qcow2.bz2 -h lxc -F</span></code></pre></td></tr></table></div></figure>


<p>注意替换以上命令里的镜像下载地址及安装目录.</p>

<h3>添加Zone</h3>

<p>先添加一个基本的Zone,注意选择hypervisor为LXC.  <br/>
添加一级/二级存储.  <br/>
添加完毕后, enable zone后, 下载模板, 注意不要选择HVM的选项.</p>

<p>到这里就可以开始创建实例了.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install CloudStack Mgmt Server on CentOS7]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/01/11/install-cloudstack-mgmt-server-on-centos7/"/>
    <updated>2016-01-11T15:03:38+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/01/11/install-cloudstack-mgmt-server-on-centos7</id>
    <content type="html"><![CDATA[<h3>Steps</h3>

<p>Disable selinux:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># setenforce permissive
</span><span class='line'># vim /etc/selinux/config 
</span><span class='line'>SELINUX=permissive</span></code></pre></td></tr></table></div></figure>


<p>Edit the hostname and hosts file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csman ~]# cat /etc/hostname 
</span><span class='line'>csman
</span><span class='line'>[root@csman ~]# cat /etc/hosts
</span><span class='line'>127.0.0.1 localhost localhost.cstack.local
</span><span class='line'>192.168.56.12 csman.cstack.local csman
</span><span class='line'>192.168.56.101 xenserver.cstack.local xenserver</span></code></pre></td></tr></table></div></figure>


<p>Enable the ntp server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y ntp
</span><span class='line'># chkconfig ntpd on
</span><span class='line'># service ntpd start</span></code></pre></td></tr></table></div></figure>


<p>Configure the nfs sharing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkdir /exports
</span><span class='line'># mkdir -p /exports/primary
</span><span class='line'># mkdir -p /exports/secondary
</span><span class='line'># chmod 777 -R /exports
</span><span class='line'># echo "/exports/primary 10.10.100.0/24(rw,async,no_root_squash)" &gt; /etc/exports
</span><span class='line'># echo "/exports/secondary 10.10.101.0/24(rw,async,no_root_squash)" &gt;&gt; /etc/exports
</span><span class='line'># exportfs -a</span></code></pre></td></tr></table></div></figure>


<p>Configure the nfs ruls:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sed -i -e '/#MOUNTD_NFS_V3="no"/ c\MOUNTD_NFS_V3="yes"' -e '/#RQUOTAD_PORT=875/ c\RQUOTAD_PORT=875' -e '/#LOCKD_TCPPORT=32803/ c\LOCKD_TCPPORT=32803' -e '/#LOCKD_UDPPORT=32769/ c\LOCKD_UDPPORT=32769' -e '/#MOUNTD_PORT=892/ c\MOUNTD_PORT=892' -e '/#STATD_PORT=662/ c\STATD_PORT=662' -e '/#STATD_OUTGOING_PORT=2020/ c\STATD_OUTGOING_PORT=2020' /etc/sysconfig/nfs
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 111 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 111 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 2049 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 2049 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 2020 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 32803 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 32769 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 892 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 892 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 875 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 875 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 662 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 662 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># service iptables restart
</span><span class='line'># chkconfig nfs on
</span><span class='line'># service nfs restart</span></code></pre></td></tr></table></div></figure>


<p>Install the packages:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y cloudstack-management
</span><span class='line'># yum -y install mariadb-server mariadb</span></code></pre></td></tr></table></div></figure>


<p>Configure the mariadb:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sed -i -e '/datadir/ a\innodb_rollback_on_timeout=1' -e '/datadir/ a\innodb_lock_wait_timeout=600' -e '/datadir/ a\max_connections=350' -e '/datadir/ a\log-bin=mysql-bin' -e "/datadir/ a\binlog-format = 'ROW'" -e "/datadir/ a\bind-address = 0.0.0.0" /etc/my.cnf
</span><span class='line'># systemctl enable mariadb
</span><span class='line'># systemctl start mariadb
</span><span class='line'># systemctl start mariadb.service
</span><span class='line'># mysql_secure_installation</span></code></pre></td></tr></table></div></figure>


<p>Setup the privileges:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csman system]# mysql -u root -pengine123
</span><span class='line'>MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
</span><span class='line'>MariaDB [(none)]&gt; quit</span></code></pre></td></tr></table></div></figure>


<p>Setup the management database and setup the managment server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cloudstack-setup-databases cloud:&lt;password&gt;@127.0.0.1 --deploy-as=root:&lt;password&gt;
</span><span class='line'># cloudstack-setup-management --tomcat7
</span><span class='line'># service cloudstack-management start
</span><span class='line'># /bin/systemctl enable  cloudstack-management.service</span></code></pre></td></tr></table></div></figure>


<p>Nginx:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># echo "[nginx]
</span><span class='line'>name=nginx repo
</span><span class='line'>baseurl=http://nginx.org/packages/centos/\$releasever/\$basearch/
</span><span class='line'>gpgcheck=0
</span><span class='line'>enabled=1" &gt; /etc/yum.repos.d/nginx.repo
</span><span class='line'># yum install nginx -y
</span><span class='line'># cd /usr/share/nginx/html
</span><span class='line'># wget -nc http://download.cloud.com/templates/builtin/centos56-x86_64.vhd.bz2
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># service iptables restart</span></code></pre></td></tr></table></div></figure>


<p>vhd-utils:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cd /usr/share/cloudstack-common/scripts/vm/hypervisor/xenserver/
</span><span class='line'># wget http://download.cloud.com.s3.amazonaws.com/tools/vhd-util
</span><span class='line'># chmod 755 /usr/share/cloudstack-common/scripts/vm/hypervisor/xenserver/vhd-util</span></code></pre></td></tr></table></div></figure>


<p>SystemVM Template:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># /usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m /exports/secondary -u http://xxxxxxxxxxxxx -h xenserver -F</span></code></pre></td></tr></table></div></figure>


<p>CloudStack usage server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install cloudstack-usage -y
</span><span class='line'># service cloudstack-usage start</span></code></pre></td></tr></table></div></figure>


<p>Mysql related:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mysql -p&lt;password&gt; cloud -e \ "INSERT INTO cloud.configuration (category, instance, component, name, value, description) VALUES ('Advanced', 'DEFAULT', 'management-server', 'xen.check.hvm', 'false', 'Shoud we allow only the XenServers support HVM');"
</span></code></pre></td></tr></table></div></figure>


<h3>If KVM</h3>

<p>Install bridge-utils:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y bridge-utils</span></code></pre></td></tr></table></div></figure>


<p>Edit the bridge connections:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /etc/sysconfig/network-scripts/ifcfg-eth0 
</span><span class='line'>DEVICE="eth0"
</span><span class='line'>ONBOOT="yes"
</span><span class='line'>BOOTPROTO=none
</span><span class='line'>NM_CONTROLLED="no"
</span><span class='line'>BRIDGE="cloudbr0"
</span><span class='line'>TYPE=Ethernet
</span><span class='line'># cat /etc/sysconfig/network-scripts/ifcfg-cloudbr0
</span><span class='line'>DEVICE="cloudbr0"
</span><span class='line'>ONBOOT="yes"
</span><span class='line'>NM_CONTROLLED=yes
</span><span class='line'>TYPE="Bridge"
</span><span class='line'>BOOTPROTO=static
</span><span class='line'>IPADDR=10.47.58.11
</span><span class='line'>NETMASK=255.255.255.0
</span><span class='line'>GATEWAY=10.47.58.1
</span><span class='line'>DNS1=223.5.5.5
</span><span class='line'>DEFROUTE=yes</span></code></pre></td></tr></table></div></figure>


<h3>Building 4.5.2/4.5.1 For CentOS 7</h3>

<p>Key-Step:</p>

<p><a href="http://zooi.widodh.nl/cloudstack/build-dep/cloud-manageontap.jar">http://zooi.widodh.nl/cloudstack/build-dep/cloud-manageontap.jar</a></p>

<h3>CentOS7 Isuse On CloudStack4.5.2</h3>

<p>Could not start the service of cloudstack-management, then you should manually add one
line in definition of the service file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csmgmt ~]# vim /usr/lib/systemd/system/cloudstack-management.service
</span><span class='line'>[Service]
</span><span class='line'>+ PermissionsStartOnly=true
</span><span class='line'>[root@csmgmt ~]# systemctl daemon-reload
</span><span class='line'>[root@csmgmt ~]# service cloudstack-management start
</span><span class='line'>Redirecting to /bin/systemctl start  cloudstack-management.service
</span><span class='line'>[root@csmgmt ~]# netstat -anp | grep 8080
</span><span class='line'>tcp6       0      0 :::8080                 :::*                    LISTEN
</span><span class='line'>5665/java  </span></code></pre></td></tr></table></div></figure>


<p>Another issue:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Could not load org.apache.commons.pool.impl.CursorableLinkedList$Cursor</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Purge CloudStack Env]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/01/04/purge-cloudstack-env/"/>
    <updated>2016-01-04T16:26:30+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/01/04/purge-cloudstack-env</id>
    <content type="html"><![CDATA[<p>For totally reset the configured cloudstack environment, do following commands:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># service cloudstack-management stop
</span><span class='line'># mysql -pengine123 -e 'drop database cloud'
</span><span class='line'># mysql -pengine123 -e 'drop database cloud_usage'
</span><span class='line'># cloudstack-setup-databases cloud:engine123@localhost --deploy-as=root:engine123
</span><span class='line'># rm -rf /var/log/cloud/management/*
</span><span class='line'># cloudstack-setup-management </span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on Veewee and Vagrant]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/01/03/tips-on-veewee-and-vagrant/"/>
    <updated>2016-01-03T15:56:09+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/01/03/tips-on-veewee-and-vagrant</id>
    <content type="html"><![CDATA[<h3>Install Veewee</h3>

<p>First you should get rvm avaiable, then use rvm for install ruby-2.2.1:  <br/>
Note: you should import gpg signature via commandline.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ proxychains4 curl -k --insecure  -L https://get.rvm.io | bash -s stable --ruby
</span><span class='line'>$ proxychains4 rvm install ruby-2.2.1 </span></code></pre></td></tr></table></div></figure>


<p>Install the veewee via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ proxychains4 gem install bundler
</span><span class='line'>$ git clone https://github.com/jedi4ever/veewee.git
</span><span class='line'>$ cd veewee
</span><span class='line'>$ proxychains4 gem install i18n -v '0.7.0'
</span><span class='line'>$ proxychains4 bundle install</span></code></pre></td></tr></table></div></figure>


<p>After installation createing an alias for quickly refers to veewee:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ alias veewee="bundle exec veewee version"</span></code></pre></td></tr></table></div></figure>


<p>Bug-fix: for adding <code>net/scp</code> in the Gemfile:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim Gemfile
</span><span class='line'>.......
</span><span class='line'>+ gem "net-scp"
</span><span class='line'>gemspec</span></code></pre></td></tr></table></div></figure>


<h3>Install Vagrant</h3>

<p>Since the vagrant provided via Ubuntu14.04 is pretty old, we have to download
it from vagrant&rsquo;s official website and dpkg install it.</p>

<p>Install veewee plugins:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ proxychains4 vagrant plugin install veewee</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>Create new definition</h3>

<p>Create new definition via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ veewee vbox define awesome-ubuntu-server ubuntu-14.04-server-amd64
</span><span class='line'>The basebox 'awesome-ubuntu-server' has been successfully created from the template
</span><span class='line'>'ubuntu-14.04-server-amd64'
</span><span class='line'>You can now edit the definition files stored in
</span><span class='line'>/home/dash/Code/veewee/definitions/awesome-ubuntu-server or build the box with:
</span><span class='line'>veewee vbox build 'awesome-ubuntu-server' --workdir=/home/dash/Code/veewee</span></code></pre></td></tr></table></div></figure>


<p>Now start building:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ veewee vbox build awesome-ubuntu-server</span></code></pre></td></tr></table></div></figure>


<h3>Speed-up Building</h3>

<p>Use Local Installation ISO:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim definitions/awesome-ubuntu-server/definition.rb
</span><span class='line'>+   :iso_src =&gt; "http://192.168.0.79/iso/ubuntu-14.04-server-amd64.iso",
</span><span class='line'>$ vim ./lib/veewee/provider/virtualbox/box/helper/guest_additions.rb
</span><span class='line'>+          url="http://192.168.0.79/iso/#{isofile}"</span></code></pre></td></tr></table></div></figure>


<p>Force ruby for using local installation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim definitions/awesome-ubuntu-server/ruby.sh
</span><span class='line'>......
</span><span class='line'>wget http://192.168.0.79/iso/veewee/ruby-$RUBY_VERSION.tar.gz
</span><span class='line'>tar xvzf ruby-$RUBY_VERSION.tar.gz
</span><span class='line'>......
</span><span class='line'>RUBYGEMS_VERSION=2.1.10
</span><span class='line'>wget http://192.168.0.79/iso/veewee/rubygems-$RUBYGEMS_VERSION.tgz</span></code></pre></td></tr></table></div></figure>


<h3>File Position</h3>

<p>The generated image position is listed in:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>➜  awesome-ubuntu-server  pwd
</span><span class='line'>/home/dash/VirtualBox VMs/awesome-ubuntu-server
</span><span class='line'>➜  awesome-ubuntu-server  du -hs *
</span><span class='line'>3.2G    awesome-ubuntu-server1.vdi
</span><span class='line'>8.0K    awesome-ubuntu-server.vbox
</span><span class='line'>8.0K    awesome-ubuntu-server.vbox-prev
</span><span class='line'>68K     Logs</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rtl-sdr Steps]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/30/rtl-sdr-steps/"/>
    <updated>2015-12-30T16:52:48+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/30/rtl-sdr-steps</id>
    <content type="html"><![CDATA[<p>Installing and configurating steps:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone https://github.com/balint256/gr-baz
</span><span class='line'>$ sudo apt-get install libboost-all-dev gr-osmosdr gnuradio-dev liblog4cpp5-dev 
</span><span class='line'>$ cd gr-baz
</span><span class='line'>$ mkdir build
</span><span class='line'>$ cd build
</span><span class='line'>$ cmake ..
</span><span class='line'>$ make && sudo make install</span></code></pre></td></tr></table></div></figure>


<p>Install rtl-sdr:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone git://git.osmocom.org/rtl-sdr.git 
</span><span class='line'>$ cd rtl-sdr 
</span><span class='line'>$ mkdir build
</span><span class='line'>$ cd build/
</span><span class='line'>$ cmake ../ -DINSTALL_UDEV_RULES=ON
</span><span class='line'>$ sudo make install
</span><span class='line'>$ sudo ldconfig </span></code></pre></td></tr></table></div></figure>


<p>Now you could use <code>sudo rtl_eeprom</code> for probing the rtl equipments.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo modprobe -r dvb_usb_rtl28xxu
</span><span class='line'>$ sudo apt-get install -y gqrx-sdr</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Using <code>gqrx</code> could scan the frequency and get the radio stations.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Integrate FreeNAS]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/30/integrate-freenas/"/>
    <updated>2015-12-30T09:56:50+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/30/integrate-freenas</id>
    <content type="html"><![CDATA[<p>Use Virtualbox for integrating FreeNAS.</p>

<h3>Add Disks</h3>

<p>Add a new SCSI controller and two disks:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_09_58_24_463x329.jpg" alt="/images/2015_12_30_09_58_24_463x329.jpg" /></p>

<p>Then in FreeNAS, import this new disks via:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_09_59_19_638x272.jpg" alt="/images/2015_12_30_09_59_19_638x272.jpg" /></p>

<h3>Volume Manager</h3>

<p>Add volume of added 2 disks:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_10_13_02_811x408.jpg" alt="/images/2015_12_30_10_13_02_811x408.jpg" /></p>

<p>Continue:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_10_13_13_589x407.jpg" alt="/images/2015_12_30_10_13_13_589x407.jpg" /></p>

<p>After added:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_10_14_56_1014x232.jpg" alt="/images/2015_12_30_10_14_56_1014x232.jpg" /></p>

<h3>ISCSI Sharing</h3>

<p>Create new sharing:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_10_19_26_499x354.jpg" alt="/images/2015_12_30_10_19_26_499x354.jpg" /></p>

<p>Add portal:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_10_20_53_417x362.jpg" alt="/images/2015_12_30_10_20_53_417x362.jpg" /></p>

<p>Add Initiator:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_10_22_11_456x202.jpg" alt="/images/2015_12_30_10_22_11_456x202.jpg" /></p>

<p>Add Target:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_10_25_57_574x436.jpg" alt="/images/2015_12_30_10_25_57_574x436.jpg" /></p>

<p>Add Extent:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_10_31_42_489x572.jpg" alt="/images/2015_12_30_10_31_42_489x572.jpg" /></p>

<p>Extend options:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_10_31_18_462x357.jpg" alt="/images/2015_12_30_10_31_18_462x357.jpg" /></p>

<p>Associate:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_10_33_49_663x363.jpg" alt="/images/2015_12_30_10_33_49_663x363.jpg" /></p>

<p>Enable the iscsi service:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_10_34_55_333x331.jpg" alt="/images/2015_12_30_10_34_55_333x331.jpg" /></p>

<h3>Integration</h3>

<p>Integaration with cloudstack would be looked like following:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_30_11_49_54_375x423.jpg" alt="/images/2015_12_30_11_49_54_375x423.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elastistor Data]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/28/elastistor-data/"/>
    <updated>2015-12-28T22:01:03+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/28/elastistor-data</id>
    <content type="html"><![CDATA[<p>Using NFS for testing.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dash@agent:/sdb4$ echo "iops 5"
</span><span class='line'>iops 5
</span><span class='line'>dash@agent:/sdb4$ time cp Kinetis\ SDK\ 1.3.0\ Mainline\ -\ Windows.exe /mnt/
</span><span class='line'>
</span><span class='line'>real    1m1.908s
</span><span class='line'>user    0m0.002s
</span><span class='line'>sys     0m0.156s
</span><span class='line'>dash@agent:/sdb4$ time cp Kinetis\ SDK\ 1.3.0\ Mainline\ -\ Windows.exe /mnt/2.exe
</span><span class='line'>
</span><span class='line'>real    0m59.375s
</span><span class='line'>user    0m0.001s
</span><span class='line'>sys     0m0.154s
</span><span class='line'>dash@agent:/sdb4$ rm -f /mnt/
</span><span class='line'>2.exe                                     Kinetis SDK 1.3.0 Mainline - Windows.exe  
</span><span class='line'>dash@agent:/sdb4$ rm -f /mnt/*
</span><span class='line'>dash@agent:/sdb4$ echo "iops 50"
</span><span class='line'>iops 50
</span><span class='line'>dash@agent:/sdb4$ time cp Kinetis\ SDK\ 1.3.0\ Mainline\ -\ Windows.exe /mnt/2.exe
</span><span class='line'>
</span><span class='line'>real    0m29.177s
</span><span class='line'>user    0m0.001s
</span><span class='line'>sys     0m0.144s
</span><span class='line'>dash@agent:/sdb4$ time cp Kinetis\ SDK\ 1.3.0\ Mainline\ -\ Windows.exe /mnt/
</span><span class='line'>
</span><span class='line'>real    0m29.798s
</span><span class='line'>user    0m0.002s
</span><span class='line'>sys     0m0.146s
</span><span class='line'>dash@agent:/sdb4$ rm -f /mnt/*
</span><span class='line'>dash@agent:/sdb4$ echo "iops 2"
</span><span class='line'>iops 2
</span><span class='line'>dash@agent:/sdb4$ time cp Kinetis\ SDK\ 1.3.0\ Mainline\ -\ Windows.exe /mnt/2.exe
</span><span class='line'>
</span><span class='line'>real    2m26.402s
</span><span class='line'>user    0m0.002s
</span><span class='line'>sys     0m0.151s
</span><span class='line'>dash@agent:/sdb4$ time cp Kinetis\ SDK\ 1.3.0\ Mainline\ -\ Windows.exe /mnt/
</span><span class='line'>
</span><span class='line'>real    2m24.976s
</span><span class='line'>user    0m0.002s
</span><span class='line'>sys     0m0.142s
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Re-Scan XenServer NICs]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/28/re-scan-xenserver-nics/"/>
    <updated>2015-12-28T15:25:45+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/28/re-scan-xenserver-nics</id>
    <content type="html"><![CDATA[<p>Since OpenXenManager could not scan the NICs, we need to scan the newly added NICs
under terminal.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># xe pif-list
</span><span class='line'># xe host-list
</span><span class='line'># xe pif-scan host-uuid=a7991728-a86f-4a9c-a163-9b819e444488</span></code></pre></td></tr></table></div></figure>


<p>Via <code>xe host-list</code> we could get the host-uuid, then pif-scan it via this host-uuid.</p>

<p>Now you could see the newly added NICs in openxenmanager:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_28_15_27_30_779x232.jpg" alt="/images/2015_12_28_15_27_30_779x232.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On Virtualbox Virtualized CS Env]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/27/on-virtualbox-virtualized-cs-env/"/>
    <updated>2015-12-27T10:07:39+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/27/on-virtualbox-virtualized-cs-env</id>
    <content type="html"><![CDATA[<p>Using Virtualbox for building the testing env of cloudstack together with
elastistor.</p>

<h3>Networking</h3>

<p>Host-only 1: 192.168.56.1/24, no DHCP.   <br/>
Host-only 2: 172.30.0.1/24, no DHCP.   <br/>
Host-only 3: 10.10.100.1/24, no DHCP.</p>

<h3>Virtual Machine</h3>

<h4>Machine 1</h4>

<p>For installing CentOS 6.7 based CloudStack 4.5.2.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>name: csman
</span><span class='line'>Type: Linux
</span><span class='line'>Version: Red Hat(64-bit) 
</span><span class='line'>Memory: 4096 MB
</span><span class='line'>Create  a virtual hard drive now
</span><span class='line'>Choosing VDI
</span><span class='line'>Choose Dynamically allocated
</span><span class='line'>Select the size: adjusting to 80.00 GB
</span><span class='line'>Setting: 
</span><span class='line'>Adjust CPU Processor to 2
</span><span class='line'>Storage: Choosing CentOS6.7 DVD 1. 
</span><span class='line'>Controller: SATA, Choosing "Use Host I/O Cache", this will greatly improve the
</span><span class='line'>speed.
</span><span class='line'>Network, The Adpter 1, choosing NAT for default. 
</span><span class='line'>Click Start for installing.   
</span><span class='line'>Choosing Basic Server in installing, enable eth0 for dhcp.    </span></code></pre></td></tr></table></div></figure>


<p>After installation, shutdown the VM, add the second adapter. <br/>
Configure the newly-added eth1:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/sysconfig/network-scripts/ifcfg-eth1 
</span><span class='line'>DEVICE=eth1
</span><span class='line'>TYPE=Ethernet
</span><span class='line'>IPADDR=192.168.56.11
</span><span class='line'>PREFIX=24
</span><span class='line'>ONBOOT=yes
</span><span class='line'>NM_CONTROLLED=no
</span><span class='line'>BOOTPROTO=none
</span><span class='line'>IPV4_FAILURE_FATAL=yes
</span><span class='line'>IPV6INIT=no
</span><span class='line'>NAME=MGMT</span></code></pre></td></tr></table></div></figure>


<p>Shutdown the vm again , add the third adapter, Configure the newly-added eth2:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csman ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth2 
</span><span class='line'>DEVICE=eth2
</span><span class='line'>TYPE=Ethernet
</span><span class='line'>IPADDR=172.30.0.11
</span><span class='line'>PREFIX=24
</span><span class='line'>ONBOOT=yes
</span><span class='line'>NM_CONTROLLED=no
</span><span class='line'>BOOTPROTO=none
</span><span class='line'>IPV4_FAILURE_FATAL=yes
</span><span class='line'>IPV6INIT=no
</span><span class='line'>NAME=PUBLIC
</span></code></pre></td></tr></table></div></figure>


<p>Shutdown the vm again ,this time add eth3, and configure it:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csman ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth3
</span><span class='line'>DEVICE=eth3
</span><span class='line'>TYPE=Ethernet
</span><span class='line'>IPADDR=10.10.100.11
</span><span class='line'>PREFIX=24
</span><span class='line'>NAME=STOR
</span><span class='line'>BOOTPROTO=none
</span><span class='line'>ONBOOT=yes
</span><span class='line'>MTU=9000
</span><span class='line'>VLAN=yes
</span><span class='line'>USERCTL=no
</span><span class='line'>MTU=9000
</span></code></pre></td></tr></table></div></figure>


<p>Comparing to the guideline, eth3 didn&rsquo;t add vlan tagged networking.</p>

<h4>Machine 2</h4>

<p>For installing Xenserver, which will connected to above cloudstack management
server.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>name: XenServer
</span><span class='line'>Type: Linux
</span><span class='line'>Version: Red Hat(64-bit)
</span><span class='line'>Memory: 8192 MB(more than 3072 is OK)
</span><span class='line'>Create a virtual hard drive now
</span><span class='line'>Choosing VDI
</span><span class='line'>Choose Dynamically allocated
</span><span class='line'>Select the size: adjusting to 120.00 GB
</span><span class='line'>Setting: 
</span><span class='line'>Adjust CPU Processor to 4
</span><span class='line'>Storage: Choosing XenServer-6.2.0-install-cd.iso
</span><span class='line'>Controller: SATA, "Use Host I/O Cache"
</span><span class='line'>Audio: Disable
</span><span class='line'>Network: Adapter 1, choosing Host-only Adapter, Name choosing vboxnet,
</span><span class='line'>Advanced choosing Promiscuous Mode: allow all. 
</span><span class='line'>Click Start for installing.  
</span><span class='line'>Networking: 192.168.56.101/255.255.255.0, gateway,192.168.56.1
</span><span class='line'>Hostname: xenserver
</span><span class='line'>DNS Server 1: 180.76.76.76
</span><span class='line'>DNS Server 2: 223.5.5.5
</span><span class='line'>DNS Server 3: 8.8.8.8
</span><span class='line'>Timezone: Asia/Shanghai
</span><span class='line'>NTP Server 1: 3.cn.pool.ntp.org
</span><span class='line'>NTP Server 2: 3.asia.pool.ntp.org
</span><span class='line'>NTP Server 3: cn.ntp.org.cn</span></code></pre></td></tr></table></div></figure>


<p>After installation, shutdown, and add a new adapter, scan it in XenCenter.</p>

<h4>Machine 3</h4>

<p>Windows 7, for installing xen desktop management tool. Which could attaches to
host-only adatper 1, with a 192.168.56.0/24 address.</p>

<h4>Machine 4</h4>

<p>4G/2 Core, For installing the Elastistor.</p>

<h4>CloudStack(Machine 1)</h4>

<p>Selinux:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sed -i "/SELINUX=enforcing/ c\SELINUX=permissive" /etc/selinux/config</span></code></pre></td></tr></table></div></figure>


<p>Hostname, change <code>/etc/hosts</code> file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>127.0.0.1 localhost localhost.cstack.local
</span><span class='line'>192.168.56.11 csman.cstack.local csman
</span><span class='line'>192.168.56.101 xenserver.cstack.local xenserver</span></code></pre></td></tr></table></div></figure>


<p>NTP Installation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y ntp
</span><span class='line'># chkconfig ntpd on
</span><span class='line'># service ntpd start</span></code></pre></td></tr></table></div></figure>


<p>Install cloudstack/mysql:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y cloudstack-management mysql-server</span></code></pre></td></tr></table></div></figure>


<p>NFS configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkdir /exports
</span><span class='line'># mkdir -p /exports/primary
</span><span class='line'># mkdir -p /exports/secondary
</span><span class='line'># chmod 777 -R /exports
</span><span class='line'># echo "/exports/primary 10.10.100.0/24(rw,async,no_root_squash)" &gt; /etc/exports
</span><span class='line'># echo "/exports/secondary 10.10.100.0/24(rw,async,no_root_squash)" &gt;&gt; /etc/exports
</span><span class='line'># exportfs -a</span></code></pre></td></tr></table></div></figure>


<p>sysconfig for nfs:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sed -i -e '/#MOUNTD_NFS_V3="no"/ c\MOUNTD_NFS_V3="yes"' -e '/#RQUOTAD_PORT=875/ c\RQUOTAD_PORT=875' -e '/#LOCKD_TCPPORT=32803/ c\LOCKD_TCPPORT=32803' -e '/#LOCKD_UDPPORT=32769/ c\LOCKD_UDPPORT=32769' -e '/#MOUNTD_PORT=892/ c\MOUNTD_PORT=892' -e '/#STATD_PORT=662/ c\STATD_PORT=662' -e '/#STATD_OUTGOING_PORT=2020/ c\STATD_OUTGOING_PORT=2020' /etc/sysconfig/nfs</span></code></pre></td></tr></table></div></figure>


<p>Iptables configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 111 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'>sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 111 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'>sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 2049 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'>sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 2049 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'>sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 2020 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'>sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 32803 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'>sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 32769 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'>sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 892 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'>sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 892 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'>sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 875 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'>sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 875 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'>sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 662 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'>sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 662 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'>service iptables restart</span></code></pre></td></tr></table></div></figure>


<p>nfs service:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># chkconfig nfs on
</span><span class='line'># service nfs start</span></code></pre></td></tr></table></div></figure>


<p>MySQL Server Configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sed -i -e '/datadir/ a\innodb_rollback_on_timeout=1' -e '/datadir/ a\innodb_lock_wait_timeout=600' -e '/datadir/ a\max_connections=350' -e '/datadir/ a\log-bin=mysql-bin' -e "/datadir/ a\binlog-format = 'ROW'" -e "/datadir/ a\bind-address = 0.0.0.0" /etc/my.cnf
</span><span class='line'># chkconfig mysqld on
</span><span class='line'># service mysqld start
</span><span class='line'># mysql_secure_installation
</span><span class='line'># mysql -u root -p  (enter password when prompted)
</span><span class='line'>mysql&gt; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
</span><span class='line'>mysql&gt; quit</span></code></pre></td></tr></table></div></figure>


<p>Setup Database:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cloudstack-setup-databases cloud:&lt;password&gt;@127.0.0.1 --deploy-as=root:&lt;password&gt;
</span><span class='line'># cloudstack-setup-management</span></code></pre></td></tr></table></div></figure>


<p>vhd-util:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cd /usr/share/cloudstack-common/scripts/vm/hypervisor/xenserver/
</span><span class='line'># wget http://download.cloud.com.s3.amazonaws.com/tools/vhd-util
</span><span class='line'># chmod 755 /usr/share/cloudstack-common/scripts/vm/hypervisor/xenserver/vhd-util</span></code></pre></td></tr></table></div></figure>


<p>System VM template:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># /usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m /exports/secondary/ -u http://192.168.177.13/systemvm64template-4.5-xen.vhd.bz2 -h xenserver -F</span></code></pre></td></tr></table></div></figure>


<h3>Customization</h3>

<p>Don&rsquo;t check hvm for xenserver:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mysql -p&lt;YOURPASSWORD&gt; cloud -e \ "INSERT INTO cloud.configuration (category, instance, component, name, value, description) VALUES ('Advanced', 'DEFAULT', 'management-server', 'xen.check.hvm', 'false', 'Shoud we allow only the XenServers support HVM');"
</span></code></pre></td></tr></table></div></figure>


<p>Install cloudstack-usage:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install cloudstack-usage -y
</span><span class='line'># service cloudstack-usage start</span></code></pre></td></tr></table></div></figure>


<p>Disable the HVM:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mysql -p&lt;password&gt; cloud -e \ "INSERT INTO cloud.configuration (category, instance, component, name, value, description) VALUES ('Advanced', 'DEFAULT', 'management-server', 'xen.check.hvm', 'false', 'Shoud we allow only the XenServers support HVM');"</span></code></pre></td></tr></table></div></figure>


<p>Global Setting:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql -u cloud -p&lt;password&gt;
</span><span class='line'>UPDATE cloud.configuration SET value='8096' WHERE name='integration.api.port';
</span><span class='line'>UPDATE cloud.configuration SET value='60' WHERE name='expunge.delay';
</span><span class='line'>UPDATE cloud.configuration SET value='60' WHERE name='expunge.interval';
</span><span class='line'>UPDATE cloud.configuration SET value='60' WHERE name='account.cleanup.interval';
</span><span class='line'>UPDATE cloud.configuration SET value='60' WHERE name='capacity.skipcounting.hours';
</span><span class='line'>UPDATE cloud.configuration SET value='0.99' WHERE name='cluster.cpu.allocated.capacity.disablethreshold';
</span><span class='line'>UPDATE cloud.configuration SET value='0.99' WHERE name='cluster.memory.allocated.capacity.disablethreshold';
</span><span class='line'>UPDATE cloud.configuration SET value='0.99' WHERE name='pool.storage.capacity.disablethreshold';
</span><span class='line'>UPDATE cloud.configuration SET value='0.99' WHERE name='pool.storage.allocated.capacity.disablethreshold';
</span><span class='line'>UPDATE cloud.configuration SET value='60000' WHERE name='capacity.check.period';
</span><span class='line'>UPDATE cloud.configuration SET value='1' WHERE name='event.purge.delay';
</span><span class='line'>UPDATE cloud.configuration SET value='60' WHERE name='network.gc.interval';
</span><span class='line'>UPDATE cloud.configuration SET value='60' WHERE name='network.gc.wait';
</span><span class='line'>UPDATE cloud.configuration SET value='600' WHERE name='vm.op.cleanup.interval';
</span><span class='line'>UPDATE cloud.configuration SET value='60' WHERE name='vm.op.cleanup.wait';
</span><span class='line'>UPDATE cloud.configuration SET value='600' WHERE name='vm.tranisition.wait.interval';
</span><span class='line'>UPDATE cloud.configuration SET value='60' WHERE name='vpc.cleanup.interval';
</span><span class='line'>UPDATE cloud.configuration SET value='4' WHERE name='cpu.overprovisioning.factor';
</span><span class='line'>UPDATE cloud.configuration SET value='8' WHERE name='storage.overprovisioning.factor';
</span><span class='line'>UPDATE cloud.configuration SET value='192.168.56.11/32' WHERE name='secstorage.allowed.internal.sites';
</span><span class='line'>UPDATE cloud.configuration SET value='192.168.56.0/24' WHERE name='management.network.cidr';
</span><span class='line'>UPDATE cloud.configuration SET value='192.168.56.11' WHERE name='host';
</span><span class='line'>UPDATE cloud.configuration SET value='false' WHERE name='check.pod.cidrs';
</span><span class='line'>UPDATE cloud.configuration SET value='0' WHERE name='network.throttling.rate';
</span><span class='line'>UPDATE cloud.configuration SET value='0' WHERE name='vm.network.throttling.rate';
</span><span class='line'>UPDATE cloud.configuration SET value='GMT' WHERE name='usage.execution.timezone';
</span><span class='line'>UPDATE cloud.configuration SET value='16:00' WHERE name='usage.stats.job.exec.time';
</span><span class='line'>UPDATE cloud.configuration SET value='true' WHERE name='enable.dynamic.scale.vm';
</span><span class='line'>UPDATE cloud.configuration SET value='9000' WHERE name='secstorage.vm.mtu.size';
</span><span class='line'>UPDATE cloud.configuration SET value='60' WHERE name='alert.wait';
</span><span class='line'>UPDATE cloud.service_offering SET ram_size='128', speed='128' WHERE vm_type='domainrouter';
</span><span class='line'>UPDATE cloud.service_offering SET ram_size='128', speed='128' WHERE vm_type='elasticloadbalancervm';
</span><span class='line'>UPDATE cloud.service_offering SET ram_size='128', speed='128' WHERE vm_type='secondarystoragevm';
</span><span class='line'>UPDATE cloud.service_offering SET ram_size='128', speed='128' WHERE vm_type='internalloadbalancervm';
</span><span class='line'>UPDATE cloud.service_offering SET ram_size='128', speed='128' WHERE vm_type='consoleproxy';
</span><span class='line'>UPDATE cloud.vm_template SET removed=now() WHERE id='2';
</span><span class='line'>UPDATE cloud.vm_template SET url='http://192.168.56.11/centos56-x86_64.vhd.bz2' WHERE unique_name='centos56-x86_64-xen';
</span><span class='line'>quit
</span><span class='line'>
</span><span class='line'>service cloudstack-management restart</span></code></pre></td></tr></table></div></figure>


<p>Add iptables rules and restart:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 8096 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># service iptables restart</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CloudStack Dev Env Setup]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/26/cloudstack-dev-env-setup/"/>
    <updated>2015-12-26T09:24:22+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/26/cloudstack-dev-env-setup</id>
    <content type="html"><![CDATA[<h3>Hypervisor Preparation</h3>

<p>Use Virtualbox for setting up the development env, the configuration of the
networking are lisetd as following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Host-Only 1: 192.168.56.1/255.255.255.0
</span><span class='line'>Host-Only 2: 172.30.0.1/255.255.255.0
</span><span class='line'>Host-Only 3: none
</span><span class='line'>NAT network: 10.0.2.0/24</span></code></pre></td></tr></table></div></figure>


<p>Host-Only 1:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_12_26_09_23_32_460x220.jpg" alt="/images/2015_12_26_09_23_32_460x220.jpg" />  <br/>
Host-Only 2:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_12_26_09_23_50_450x226.jpg" alt="/images/2015_12_26_09_23_50_450x226.jpg" />  <br/>
Host-Only 3:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_12_26_09_24_02_459x255.jpg" alt="/images/2015_12_26_09_24_02_459x255.jpg" />  <br/>
NAT:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_12_26_09_27_57_500x288.jpg" alt="/images/2015_12_26_09_27_57_500x288.jpg" /></p>

<h3>Virtual Machine</h3>

<p>Install CentOS6.7, the network configuration is listed as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>eth0 -&gt; Host-Only 1
</span><span class='line'>eth1 -&gt; NAT
</span><span class='line'>eth2 -&gt; Host-Only 2
</span><span class='line'>eth3 -&gt; Host-Only 3</span></code></pre></td></tr></table></div></figure>


<p>The configuration files for NAT working is listed as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@CSMAN yum.repos.d]# cat /etc/sysconfig/network-scripts/ifcfg-eth0
</span><span class='line'>DEVICE=eth0
</span><span class='line'>TYPE=Ethernet
</span><span class='line'>UUID=fc709b6b-54c0-4181-97cc-d91f14228fdc
</span><span class='line'>ONBOOT=yes
</span><span class='line'>NM_CONTROLLED=yes
</span><span class='line'>BOOTPROTO=none
</span><span class='line'>HWADDR=08:00:27:CC:35:D9
</span><span class='line'>IPADDR=192.168.56.11
</span><span class='line'>PREFIX=24
</span><span class='line'>GATEWAY=192.168.56.1
</span><span class='line'>#DNS1=223.5.5.5
</span><span class='line'>#DEFROUTE=yes
</span><span class='line'>IPV4_FAILURE_FATAL=yes
</span><span class='line'>IPV6INIT=no
</span><span class='line'>NAME="System eth0"
</span><span class='line'>[root@CSMAN yum.repos.d]# cat /etc/sysconfig/network-scripts/ifcfg-eth1
</span><span class='line'>DEVICE=eth1 
</span><span class='line'>TYPE=Ethernet 
</span><span class='line'>#IPADDR=10.0.2.11 
</span><span class='line'>#GATEWAY=10.0.2.22 
</span><span class='line'>PREFIX=24 
</span><span class='line'>ONBOOT=yes 
</span><span class='line'>NM_CONTROLLED=no 
</span><span class='line'>BOOTPROTO=dhcp
</span><span class='line'>DEFROUTE=yes 
</span><span class='line'>PEERROUTES=yes 
</span><span class='line'>IPV4_FAILURE_FATAL=yes 
</span><span class='line'>IPV6INIT=no 
</span><span class='line'>NAME=NAT 
</span><span class='line'>DNS1=180.76.76.76
</span><span class='line'>[root@CSMAN yum.repos.d]# cat /etc/sysconfig/network-scripts/ifcfg-eth2
</span><span class='line'>DEVICE=eth2 
</span><span class='line'>TYPE=Ethernet 
</span><span class='line'>IPADDR=172.30.0.11 
</span><span class='line'>PREFIX=24 
</span><span class='line'>ONBOOT=yes 
</span><span class='line'>NM_CONTROLLED=no 
</span><span class='line'>BOOTPROTO=none 
</span><span class='line'>IPV4_FAILURE_FATAL=yes 
</span><span class='line'>IPV6INIT=no 
</span><span class='line'>NAME=PUBLIC 
</span><span class='line'>[root@CSMAN yum.repos.d]# cat /etc/sysconfig/network-scripts/ifcfg-eth3
</span><span class='line'>CE=eth3 
</span><span class='line'>TYPE=Ethernet 
</span><span class='line'>BOOTPROTO=none 
</span><span class='line'>ONBOOT=yes 
</span><span class='line'>MTU=9000 
</span><span class='line'>VLAN=yes 
</span><span class='line'>USERCTL=no 
</span><span class='line'>MTU=9000 
</span><span class='line'>[root@CSMAN yum.repos.d]# cat /etc/sysconfig/network-scripts/ifcfg-eth3.100
</span><span class='line'>DEVICE=eth3.100 
</span><span class='line'>TYPE=Ethernet 
</span><span class='line'>IPADDR=10.10.100.11 
</span><span class='line'>PREFIX=24 
</span><span class='line'>ONBOOT=yes 
</span><span class='line'>BOOTPROTO=none 
</span><span class='line'>NAME=PRI-STOR 
</span><span class='line'>VLAN=yes 
</span><span class='line'>USERCTL=no 
</span><span class='line'>MTU=9000 
</span><span class='line'>[root@CSMAN yum.repos.d]# cat /etc/sysconfig/network-scripts/ifcfg-eth3.101
</span><span class='line'>DEVICE=eth3.101 
</span><span class='line'>TYPE=Ethernet 
</span><span class='line'>IPADDR=10.10.101.11 
</span><span class='line'>PREFIX=24 
</span><span class='line'>ONBOOT=yes 
</span><span class='line'>BOOTPROTO=none 
</span><span class='line'>NAME=SEC-STOR 
</span><span class='line'>VLAN=yes 
</span><span class='line'>USERCTL=no 
</span><span class='line'>MTU=9000 </span></code></pre></td></tr></table></div></figure>


<p>Be notice the networking of eth1 should changes to following, for NatNetwork
won&rsquo;t give us the priviledge of accessing internet.</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_26_13_23_34_509x313.jpg" alt="/images/2015_12_26_13_23_34_509x313.jpg" /></p>

<h3>CloudStack Configuration</h3>

<h4>SELinux</h4>

<p>Change selinux to permissive:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csman ~]# cat /etc/selinux/config 
</span><span class='line'>
</span><span class='line'>SELINUX=permissive
</span><span class='line'>[root@csman ~]# reboot
</span></code></pre></td></tr></table></div></figure>


<h4>Hostname</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csman ~]# cat /etc/sysconfig/network
</span><span class='line'>NETWORKING=yes
</span><span class='line'>HOSTNAME=csman
</span><span class='line'>GATEWAY=192.168.56.1
</span><span class='line'>[root@csman ~]# cat /etc/hosts
</span><span class='line'>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
</span><span class='line'>localhost.cstack.local
</span><span class='line'>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
</span><span class='line'>192.168.56.11   csman.cstack.local      csman
</span><span class='line'>192.168.56.101  xenserver.cstack.local  xenserver</span></code></pre></td></tr></table></div></figure>


<h4>NTP</h4>

<p>Install ntp service via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csman ~]# yum install -y ntp
</span><span class='line'>[root@csman ~]# service ntpd start
</span><span class='line'>Starting ntpd:                                             [  OK  ]
</span><span class='line'>[root@csman ~]# chkconfig ntpd on</span></code></pre></td></tr></table></div></figure>


<h4>Necessary Packages</h4>

<p>Install them via following command, for these tools will be useful during
installation.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y python-pip wget nethogs</span></code></pre></td></tr></table></div></figure>


<h4>MySQL</h4>

<p>Install and configure:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y mysql-server MySQL-python
</span><span class='line'># vim /etc/my.cnf
</span><span class='line'>    + # CloudStack MySQL settings
</span><span class='line'>    + innodb_rollback_on_timeout=1
</span><span class='line'>    + innodb_lock_wait_timeout=600
</span><span class='line'>    + max_connections=700
</span><span class='line'>    + log-bin=mysql-bin
</span><span class='line'>    + binlog-format = 'ROW'
</span><span class='line'>    + bind-address=0.0.0.0
</span><span class='line'>
</span><span class='line'>    [mysqld_safe]</span></code></pre></td></tr></table></div></figure>


<p>Save the service and start it:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># service mysqld start
</span><span class='line'># chkconfig mysqld on</span></code></pre></td></tr></table></div></figure>


<p>Drop the anonymous user and test database:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csman ~]# mysql
</span><span class='line'>Welcome to the MySQL monitor.  Commands end with ; or \g.
</span><span class='line'>Your MySQL connection id is 2
</span><span class='line'>Server version: 5.1.73-log Source distribution
</span><span class='line'>
</span><span class='line'>Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
</span><span class='line'>
</span><span class='line'>Oracle is a registered trademark of Oracle Corporation and/or its
</span><span class='line'>affiliates. Other names may be trademarks of their respective
</span><span class='line'>owners.
</span><span class='line'>
</span><span class='line'>Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
</span><span class='line'>
</span><span class='line'>mysql&gt; drop user ''@'csman';
</span><span class='line'>Query OK, 0 rows affected (0.00 sec)
</span><span class='line'>
</span><span class='line'>mysql&gt; drop user ''@'localhost';
</span><span class='line'>Query OK, 0 rows affected (0.00 sec)
</span><span class='line'>
</span><span class='line'>mysql&gt; select user,host,password from mysql.user;
</span><span class='line'>+------+-----------+----------+
</span><span class='line'>| user | host      | password |
</span><span class='line'>+------+-----------+----------+
</span><span class='line'>| root | localhost |          |
</span><span class='line'>| root | csman     |          |
</span><span class='line'>| root | 127.0.0.1 |          |
</span><span class='line'>+------+-----------+----------+
</span><span class='line'>3 rows in set (0.00 sec)
</span><span class='line'>
</span><span class='line'>mysql&gt; delete from mysql.db where db like 'test%';
</span><span class='line'>Query OK, 2 rows affected (0.00 sec)
</span><span class='line'>
</span><span class='line'>mysql&gt; select * from mysql.db;
</span><span class='line'>Empty set (0.01 sec)
</span><span class='line'>
</span><span class='line'>mysql&gt; drop database test;
</span><span class='line'>Query OK, 0 rows affected (0.00 sec)
</span><span class='line'>
</span><span class='line'>mysql&gt; flush privileges;
</span><span class='line'>Query OK, 0 rows affected (0.00 sec)
</span><span class='line'>
</span><span class='line'>mysql&gt; \q
</span><span class='line'>Bye</span></code></pre></td></tr></table></div></figure>


<p>Run <code>mysql_secure_installation</code> to set the user password, and remove anonymous
uses.</p>

<h4>CloudStack-Management</h4>

<p>Install via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install -y cloudstack-management</span></code></pre></td></tr></table></div></figure>


<h4>cloudmonkey</h4>

<p>Install it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pip install cloudmonkey</span></code></pre></td></tr></table></div></figure>


<p>But the installed cloudmonkey won&rsquo;t be used, later will be fixed.</p>

<h4>Configure database</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csman ~]# cloudstack-setup-databases cloud:engine123@127.0.0.1  --deploy-as root:engine123
</span><span class='line'>[root@csman ~]# cloudstack-setup-management</span></code></pre></td></tr></table></div></figure>


<h4>NFS</h4>

<p>Create the nfs related folders and configuration files.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csman ~]# mkdir /exports
</span><span class='line'>[root@csman ~]# mkdir -p /exports/secondary
</span><span class='line'>[root@csman ~]# mkdir -p /exports/primary
</span><span class='line'>[root@csman ~]# echo "/exports/primary 10.10.100.0/24(rw,async,no_root_squash)"&gt;/etc/exports
</span><span class='line'>[root@csman ~]# echo "/exports/primary 10.10.101.0/24(rw,async,no_root_squash)"&gt;&gt;/etc/exports
</span><span class='line'>[root@csman ~]# cat /etc/exports 
</span><span class='line'>/exports/primary 10.10.100.0/24(rw,async,no_root_squash)
</span><span class='line'>/exports/primary 10.10.101.0/24(rw,async,no_root_squash)
</span><span class='line'># service nfs start
</span><span class='line'># exportfs -a
</span><span class='line'># chkconfig nfs on
</span><span class='line'># chkconfig rpcbind on
</span><span class='line'># chmod 777 -R /exports/</span></code></pre></td></tr></table></div></figure>


<p>update the configuration of /etc/sysconfig/nfs:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sed -i -e '/#MOUNTD_NFS_V3="no"/ c\MOUNTD_NFS_V3="yes"' -e '/#RQUOTAD_PORT=875/ c\RQUOTAD_PORT=875' -e '/#LOCKD_TCPPORT=32803/ c\LOCKD_TCPPORT=32803' -e '/#LOCKD_UDPPORT=32769/ c\LOCKD_UDPPORT=32769' -e '/#MOUNTD_PORT=892/ c\MOUNTD_PORT=892' -e '/#STATD_PORT=662/ c\STATD_PORT=662' -e '/#STATD_OUTGOING_PORT=2020/ c\STATD_OUTGOING_PORT=2020' /etc/sysconfig/nfs</span></code></pre></td></tr></table></div></figure>


<h4>Iptables</h4>

<p>Add following configuraitons:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 111 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 111 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 2049 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 2049 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 2020 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 32803 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 32769 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 892 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 892 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 875 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 875 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 662 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p udp -m udp --dport 662 -j ACCEPT" /etc/sysconfig/iptables</span></code></pre></td></tr></table></div></figure>


<p>Restart the iptables restart:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># service iptables restart
</span><span class='line'># servcie nfs restart</span></code></pre></td></tr></table></div></figure>


<h4>nginx</h4>

<p>Install nginx via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># echo "[nginx]
</span><span class='line'>name=nginx repo
</span><span class='line'>baseurl=http://nginx.org/packages/centos/\$releasever/\$basearch/
</span><span class='line'>gpgcheck=0
</span><span class='line'>enabled=1" &gt; /etc/yum.repos.d/nginx.repo
</span><span class='line'># yum install nginx -y
</span><span class='line'># sed -i -e "/:OUTPUT/ a\-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT" /etc/sysconfig/iptables
</span><span class='line'># service iptables restart
</span><span class='line'># cd /usr/share/nginx/html/
</span><span class='line'># scp dash@192.168.177.11:/home/dash/Downloads/centos56-x86_64.vhd.bz2 ./</span></code></pre></td></tr></table></div></figure>


<h4>vhd-util</h4>

<p>Download the vhd-util, cause we want to use xenserver:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cd /usr/share/cloudstack-common/scripts/vm/hypervisor/xenserver/
</span><span class='line'># wget http://download.cloud.com.s3.amazonaws.com/tools/vhd-util
</span><span class='line'># chmod 777 vhd-util </span></code></pre></td></tr></table></div></figure>


<h4>Cloudstack Usage Server</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum install cloudstack-usage -y
</span><span class='line'># service cloudstack-usage start</span></code></pre></td></tr></table></div></figure>


<h4>System VM</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#  /usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m /exports/secondary -u http://192.168.177.13/systemvm64template-4.5-xen.vhd.bz2 -h xenserver -F</span></code></pre></td></tr></table></div></figure>


<h4>HVM Configuration</h4>

<p>Configure the management-server&rsquo;s configuration for xenserver&rsquo;s checking hvm to false:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csman ~]# mysql -pengine123 cloud -e \ "INSERT INTO cloud.configuration (category, instance, component, name, value, description) VALUES ('Advanced', 'DEFAULT', 'management-server', 'xen.check.hvm', 'false', 'Shoud we allow only the XenServers support HVM');"</span></code></pre></td></tr></table></div></figure>


<h3>XenServer</h3>

<p>Install it in virtualbox:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_26_16_28_02_719x443.jpg" alt="/images/2015_12_26_16_28_02_719x443.jpg" /></p>

<p>Usage of the disk:  <br/>
<img src="http://purplepalmdash.github.io/images/2015_12_26_16_29_55_722x406.jpg" alt="/images/2015_12_26_16_29_55_722x406.jpg" /></p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_26_16_31_36_717x401.jpg" alt="/images/2015_12_26_16_31_36_717x401.jpg" /></p>

<p>IP Address:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_26_16_33_27_719x403.jpg" alt="/images/2015_12_26_16_33_27_719x403.jpg" /></p>

<p>Network:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_26_16_34_39_444x261.jpg" alt="/images/2015_12_26_16_34_39_444x261.jpg" /></p>

<p>Change the timezone to <code>Asia/Shanghai</code>, and configure the ntp:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_26_16_36_39_535x239.jpg" alt="/images/2015_12_26_16_36_39_535x239.jpg" /></p>

<p>Click continue and run installation.</p>

<p>Skip the Supplemental Package:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_26_16_40_20_436x213.jpg" alt="/images/2015_12_26_16_40_20_436x213.jpg" /></p>

<p>After installation, the vm become like this:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_26_16_50_36_639x403.jpg" alt="/images/2015_12_26_16_50_36_639x403.jpg" /></p>

<h3>XenServer Plugin</h3>

<p>Configure the memory Usage:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@xenserver ~]# /opt/xensource/libexec/xen-cmdline --set-xen dom0_mem=400M,max:2248M</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>First without patch, adding to the cloudstack management server.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[集成elastistor到CloudStack中]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/25/ji-cheng-elastistordao-cloudstackzhong/"/>
    <updated>2015-12-25T15:43:34+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/25/ji-cheng-elastistordao-cloudstackzhong</id>
    <content type="html"><![CDATA[<h3>先决条件</h3>

<p>Cloudstack版本， 4.5.2:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_25_15_44_05_330x190.jpg" alt="/images/2015_12_25_15_44_05_330x190.jpg" /></p>

<p>CloudByte Elastistor已经搭建好。</p>

<p>下载Elastistor插件包:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># wget www.cloudbyte.com/cbftp/cloudStack.zip
</span><span class='line'># unzip cloudStack.zip 
</span><span class='line'># ls
</span><span class='line'>system.js docs.js     install.sh</span></code></pre></td></tr></table></div></figure>


<h3>移动javascript文件</h3>

<p>在安装插件前，移动下列文件:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mv /usr/share/cloudstack-management/webapps/client/scripts/system.js.gz \ 
</span><span class='line'>/usr/share/cloudstack-management/webapps/client/
</span><span class='line'># mv /usr/share/cloudstack-management/webapps/client/scripts/docs.js.gz  \
</span><span class='line'>/usr/share/cloudstack-management/webapps/client/</span></code></pre></td></tr></table></div></figure>


<h3>安装插件</h3>

<p>安装步骤如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csmgmt ~]# chmod 777 install.sh 
</span><span class='line'>[root@csmgmt ~]# ./install.sh 
</span><span class='line'>creating a backup dir @ /usr/share/cloudstack-management/backup
</span><span class='line'>taking backup of old js files : system.js and docs.js
</span><span class='line'>copying cloudbyte given system.js and docs.js
</span><span class='line'>restart cloudstack management server
</span><span class='line'>Starting to configure CloudStack Management Server:
</span><span class='line'>Configure sudoers ...         [OK]
</span><span class='line'>Configure Firewall ...        [OK]
</span><span class='line'>Configure CloudStack Management Server ...[OK]
</span><span class='line'>CloudStack Management Server setup is Done!</span></code></pre></td></tr></table></div></figure>


<h3>编辑属性文件</h3>

<p>添加下列定义到文件结尾:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@csmgmt ~]# vim /usr/share/cloudstack-management/webapps/client/WEB-INF/classes/commands.properties 
</span><span class='line'>        changeVolumeProperties=15
</span><span class='line'>        listElastistorPool=15
</span><span class='line'>        listElastistorVolume=15
</span><span class='line'>        listElastistorInterface=15</span></code></pre></td></tr></table></div></figure>


<h3>添加API KEY</h3>

<p>生成API KEY：</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_25_15_57_27_885x323.jpg" alt="/images/2015_12_25_15_57_27_885x323.jpg" /></p>

<p>填入API KEY, 在Global Settings选项下搜索cloudbyte即可得到:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_25_15_59_00_744x233.jpg" alt="/images/2015_12_25_15_59_00_744x233.jpg" /></p>

<p>添加一个Domain:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_25_16_02_54_388x251.jpg" alt="/images/2015_12_25_16_02_54_388x251.jpg" /></p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_25_16_04_03_425x266.jpg" alt="/images/2015_12_25_16_04_03_425x266.jpg" /></p>

<p>添加主存储，会出现问题，VSM可以创建成功，但是无法mount到NFS。登录到elastistor上，看不到
volume的创建。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ElastiStor与CloudStack集成]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/23/elastistoryu-cloudstackji-cheng/"/>
    <updated>2015-12-23T17:25:55+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/23/elastistoryu-cloudstackji-cheng</id>
    <content type="html"><![CDATA[<h3>安装ElastiStor</h3>

<p>建立虚拟机，4G内存， 2核，插入光盘后，进入到以下界面:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_23_17_25_15_759x415.jpg" alt="/images/2015_12_23_17_25_15_759x415.jpg" /></p>

<p>选择<code>both Center and Node</code>, 进入到以下界面后，配置网络相关信息:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_23_17_28_36_720x396.jpg" alt="/images/2015_12_23_17_28_36_720x396.jpg" /></p>

<p>search domain这一项配置如下， 随便添加某个域名，例如www.baidu.com:</p>

<p>安装过程:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_23_17_33_29_644x327.jpg" alt="/images/2015_12_23_17_33_29_644x327.jpg" /></p>

<p>选择时区：</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_23_17_36_34_712x398.jpg" alt="/images/2015_12_23_17_36_34_712x398.jpg" /></p>

<p>安装完毕后，进入到登录界面:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_23_17_38_40_539x422.jpg" alt="/images/2015_12_23_17_38_40_539x422.jpg" /></p>

<p>默认密码就是我们在前面设置的，默认用户名是root.</p>

<h3>登录</h3>

<p>首次登录会遇到问题的解决:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_23_18_11_05_844x186.jpg" alt="/images/2015_12_23_18_11_05_844x186.jpg" /></p>

<p>以及:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_23_18_12_25_866x213.jpg" alt="/images/2015_12_23_18_12_25_866x213.jpg" /></p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_23_18_15_43_647x176.jpg" alt="images/2015_12_23_18_15_43_647x176.jpg" /></p>

<p>现在可以访问登录界面, 默认用户名/密码为admin/password.</p>

<p><a href="http://purplepalmdash.github.io/images/2015_12_23_18_15_49_678x413.jpg">/images/2015_12_23_18_15_49_678x413.jpg</a></p>

<h3>配置</h3>

<p>后台可以可视化来配置， 从site-> HA Group-> Node， 添加完毕后我们可以看到以下界面：</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_23_19_32_13_819x326.jpg" alt="/images/2015_12_23_19_32_13_819x326.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CloudMonkey Issue]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/22/cloudmonkey-issue/"/>
    <updated>2015-12-22T21:18:21+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/22/cloudmonkey-issue</id>
    <content type="html"><![CDATA[<h3>Could not start cloudmonkey</h3>

<p>After installing cloudstack, cloudmonkey couldnot be used, the reason is
listed as following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% cloudmonkey
</span><span class='line'>Traceback (most recent call last):
</span><span class='line'>  File "/usr/local/bin/cloudmonkey", line 5, in &lt;module&gt;
</span><span class='line'>    from pkg_resources import load_entry_point
</span><span class='line'>  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py", line 2603, in &lt;module&gt;
</span><span class='line'>    working_set.require(__requires__)
</span><span class='line'>  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py", line 666, in require
</span><span class='line'>    needed = self.resolve(parse_requirements(requirements))
</span><span class='line'>  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py", line 565, in resolve
</span><span class='line'>    raise DistributionNotFound(req)  # XXX put more info here
</span><span class='line'>pkg_resources.DistributionNotFound: requests</span></code></pre></td></tr></table></div></figure>


<p>The solution is via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># easy_install --upgrade pip
</span><span class='line'># pip install --upgrade setuptools
</span><span class='line'># pip install --upgrade distribute
</span><span class='line'># wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | python</span></code></pre></td></tr></table></div></figure>


<p>So Now you could use cloudstack.</p>

<h3>Use Ansible Together With Cloudmonkey</h3>

<p>I think because my cloudstack agent didn&rsquo;t use a bridge, so the cloudmonkey runs failed.</p>

<h3>Cloudmonkey tips</h3>

<p>Configure the secstorage download address for local usage.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cloudmonkey update configuration name=secstorage.allowed.internal.sites
</span><span class='line'> value=192.168.0.0/16</span></code></pre></td></tr></table></div></figure>


<p>Create a new service offering:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cloudmonkey create serviceoffering cpunumber=1 cpuspeed=500 displaytext=monkeyking
</span><span class='line'>memory=256 name=monkeyking</span></code></pre></td></tr></table></div></figure>


<p>Register the new template:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cloudmonkey register template hypervisor=kvm zoneid=2ee04a60-499c-bcc6-c3ba92624b35 format=qcow2 name=tinycore displaytext=tinycoretemplate ispublic=true ostypeid=11 url=http://192.168.0.79/tiny.qcow2</span></code></pre></td></tr></table></div></figure>


<p>The ostypeid could be adjusted in the graphical interface, while the ostypeid for
<code>other Linux(64-bit)</code> is</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ostypeid = ff2564a4-a91e-11e5-9855-52540048638c</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Start an instance via cloudmonkey, refers to following command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ Deploy VirtualMachine ZoneID=&lt;zoneid&gt; ServiceOfferingID=&lt;serviceofferingid&gt; TemplateID=&lt;templateid&gt; StartVM=false IPAddress=192.168.30.10 Name=My-VirtualMachine DisplayName=“My Virtual Machine”</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NetScaler VPX初始化配置]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/17/netscaler-vpxchu-shi-hua-pei-zhi/"/>
    <updated>2015-12-17T14:08:35+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/17/netscaler-vpxchu-shi-hua-pei-zhi</id>
    <content type="html"><![CDATA[<h3>初始化配置</h3>

<p>启动虚拟机以后，通过nsroot/nsroot登录入VPX.</p>

<p>清除所有配置:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_17_14_20_54_580x93.jpg" alt="/images/2015_12_17_14_20_54_580x93.jpg" /></p>

<p>如下，做IP配置:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_17_14_23_29_728x153.jpg" alt="/images/2015_12_17_14_23_29_728x153.jpg" /></p>

<p>初始化配置完毕以后，即可在web后台进行配置。</p>

<h3>License</h3>

<p>申请license的时候注意，选择的MAC地址不能有任何的<code>:</code>符号， 例如52:54:00:这种就不能通过成
功。 在Netscaler上可以通过以下命令查看host id:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@ns# lmutil lmhostid 
</span><span class='line'>lmutil - Copyright (c) 1989-2013 Flexera Software LLC. All Rights Reserved. 
</span><span class='line'>The FlexNet host ID of this machine is "xxxxxxx"</span></code></pre></td></tr></table></div></figure>


<p>查看激活后的license情形:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; sh license
</span><span class='line'>        License status:
</span><span class='line'>                           Web Logging: YES
</span><span class='line'>                      Surge Protection: YES
</span><span class='line'>                        Load Balancing: YES
</span><span class='line'>                     Content Switching: YES
</span><span class='line'>....</span></code></pre></td></tr></table></div></figure>


<p>参考:   <br/>
<a href="http://sam.yeung.blog.163.com/blog/static/222663482013811102013782/">http://sam.yeung.blog.163.com/blog/static/222663482013811102013782/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Graphite呈现广州空气质量(4)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/16/yong-graphitecheng-xian-yan-zhou-kong-qi-zhi-liang-4/"/>
    <updated>2015-12-16T16:29:43+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/16/yong-graphitecheng-xian-yan-zhou-kong-qi-zhi-liang-4</id>
    <content type="html"><![CDATA[<h3>Tessera</h3>

<p>直接导入Graphite中定义好的dashboard即可，值得注意的是，如何创建模板，或者说，如何创建一
个template用于渲染我们导入的各个数据？</p>

<p>导入的时候出现了如下的问题:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_16_18_34_44_701x483.jpg" alt="/images/2015_12_16_18_34_44_701x483.jpg" /></p>

<p>可见tessera中对数据的定制化是必须的。</p>

<h3>Grafana</h3>

<p>安装及配置为自动启动:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget https://grafanarel.s3.amazonaws.com/builds/grafana_2.6.0_amd64.deb
</span><span class='line'>$ sudo dpkg -i grafana_2.6.0_amd64.deb
</span><span class='line'>$ sudo service grafana-server start
</span><span class='line'>$ sudo update-rc.d grafana-server defaults 95 10</span></code></pre></td></tr></table></div></figure>


<p>默认用户名/密码为 admin/admin.</p>

<p>现在添加graphite数据源，例如：</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_16_19_20_33_703x484.jpg" alt="/images/2015_12_16_19_20_33_703x484.jpg" /></p>
]]></content>
  </entry>
  
</feed>
