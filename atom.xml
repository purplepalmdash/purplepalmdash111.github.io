<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dash]]></title>
  <link href="http://purplepalmdash.github.io/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-12-08T19:36:24+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tessera How-to]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/08/tessera-how-to/"/>
    <updated>2015-12-08T10:26:48+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/08/tessera-how-to</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<p>Installation steps are listed as following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install -y python-virtualenv
</span><span class='line'># git clone git@github.com:urbanairship/tessera.git
</span><span class='line'># cd tessera
</span><span class='line'># virtualenv .
</span><span class='line'># . bin/activate
</span><span class='line'># cd tessera-server/
</span><span class='line'># pip install -r requirements.txt
</span><span class='line'># pip install -r dev-requirements.txt
</span><span class='line'># cd ../tessera-frontend
</span><span class='line'># apt-get install -y npm
</span><span class='line'># npm install -g grunt-cli
</span><span class='line'># npm install
</span><span class='line'># ln -s /usr/bin/nodejs /usr/bin/node
</span><span class='line'># grunt
</span><span class='line'># which inv
</span><span class='line'>/root/Code/second/tessera/bin/inv</span></code></pre></td></tr></table></div></figure>


<h3>Start</h3>

<p>Start the service via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cd /root/Code/second/tessera/tessera-server/
</span><span class='line'># inv db.init
</span><span class='line'># inv run &
</span><span class='line'># inv json.import 'demo/*'</span></code></pre></td></tr></table></div></figure>


<p>Open the browser and visit <code>http://localhost:5000</code>, you could see the tessera&rsquo;s web
front.</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_08_11_42_52_998x527.jpg" alt="/images/2015_12_08_11_42_52_998x527.jpg" /></p>

<h3>Import Graphite Data</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(tessera)root@monitorserver:~/Code/second/tessera/tessera-server# vim tessera/config.py 
</span><span class='line'>root@monitorserver:~/Code/second/tessera# cat tessera-server/tessera/config.py
</span><span class='line'>GRAPHITE_URL               = 'http://192.168.10.192'
</span><span class='line'># inv graphite.import</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Now you could see the imported graphite data.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rundeck Tips]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/07/rundeck-tips/"/>
    <updated>2015-12-07T11:58:55+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/07/rundeck-tips</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<p>Install the rundeck under CentOS 7:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># rpm -Uvh http://repo.rundeck.org/latest.rpm
</span><span class='line'># yum install rundeck</span></code></pre></td></tr></table></div></figure>


<h3>Configuration</h3>

<p>Configure some properties:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/rundeck/framework.properties
</span><span class='line'>framework.server.name = 192.168.0.79
</span><span class='line'>framework.server.hostname = 192.168.0.79
</span><span class='line'>framework.server.port = 4440
</span><span class='line'>framework.server.url = http://192.168.0.79:4440
</span><span class='line'># vim /etc/rundeck/rundeck-config.properties
</span><span class='line'>grails.serverURL=http://192.168.0.79:4440 </span></code></pre></td></tr></table></div></figure>


<p>Start the service:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># service rundeckd start
</span><span class='line'>Starting rundeckd (via systemctl):                         [  OK  ]</span></code></pre></td></tr></table></div></figure>


<p>You could check the status via <code># systemctl status rundeckd</code>.</p>

<p>Now visit the server via <a href="http://192.168.0.79:4440,">http://192.168.0.79:4440,</a> username/password are all <code>admin</code>, you should see following image:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_07_12_11_49_956x398.jpg" alt="/images/2015_12_07_12_11_49_956x398.jpg" /></p>

<p>Hint for creating project:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_12_07_12_13_56_694x389.jpg" alt="/images/2015_12_07_12_13_56_694x389.jpg" /></p>

<h3>Run</h3>

<p>Run command locally for creating an command based job.</p>

<p>In case of sudo requires a tty for executing the command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># visudo
</span><span class='line'>+ # Defaults    requiretty
</span><span class='line'>+ rundeck ALL=(ALL)   NOPASSWD: ALL </span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>Reference</h3>

<p><a href="http://www.tuicool.com/articles/zuI3ua">http://www.tuicool.com/articles/zuI3ua</a></p>

<p><a href="http://www.oschina.net/p/rundeck">http://www.oschina.net/p/rundeck</a></p>

<p><a href="http://gunner.me/archives/488">http://gunner.me/archives/488</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bluetooth NAP How-To]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/05/bluetooth-nap-how-to/"/>
    <updated>2015-12-05T20:03:41+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/05/bluetooth-nap-how-to</id>
    <content type="html"><![CDATA[<h3>Notice</h3>

<p>Notice, this way is only for Bluez-5!!!!</p>

<p>Refers to:  <br/>
<a href="https://wiki.gentoo.org/wiki/Bluetooth_Network_Aggregation_Point">https://wiki.gentoo.org/wiki/Bluetooth_Network_Aggregation_Point</a> <br/>
<a href="https://wiki.gentoo.org/wiki/Bluetooth">https://wiki.gentoo.org/wiki/Bluetooth</a>   <br/>
<a href="http://blog.fraggod.net/2015/03/28/bluetooth-pan-network-setup-with-bluez-5x.html">http://blog.fraggod.net/2015/03/28/bluetooth-pan-network-setup-with-bluez-5x.html</a></p>

<p>Bluez-4 could be much more easier via <code>pand</code>. For example, in ubuntu you could
setup the bluetooth PAN via:</p>

<p><a href="http://blog.sumostyle.net/2009/11/ubuntu-tethering-via-bluetooth-pan/">http://blog.sumostyle.net/2009/11/ubuntu-tethering-via-bluetooth-pan/</a></p>

<h3>RF-KILL</h3>

<p>Use rfkill for unblock the soft-blocked bluetooth adapter:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@xxxx dash]# rfkill list bluetooth
</span><span class='line'>2: hp-bluetooth: Bluetooth
</span><span class='line'>        Soft blocked: yes
</span><span class='line'>        Hard blocked: no
</span><span class='line'>5: hci1: Bluetooth
</span><span class='line'>        Soft blocked: yes
</span><span class='line'>        Hard blocked: no
</span><span class='line'>[root@xxxx dash]# rfkill unblock bluetooth
</span><span class='line'>
</span><span class='line'># rfkill list bluetooth
</span><span class='line'>2: hp-bluetooth: Bluetooth
</span><span class='line'>        Soft blocked: no
</span><span class='line'>        Hard blocked: no
</span><span class='line'>5: hci1: Bluetooth
</span><span class='line'>        Soft blocked: no
</span><span class='line'>        Hard blocked: no</span></code></pre></td></tr></table></div></figure>


<h3>bluetoothctl</h3>

<p>Use bluetoothctl for configurating the bluetooth adapter:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@xxxx ]# bluetoothctl 
</span><span class='line'>[NEW] Controller 40:2C:xx:xx:xx:xx xxxx #2 [default]
</span><span class='line'>[bluetooth]# power on
</span><span class='line'>Changing power on succeeded
</span><span class='line'>[bluetooth]# discoverable on
</span><span class='line'>Changing discoverable on succeeded
</span><span class='line'>[bluetooth]# agent on
</span><span class='line'>Agent registered
</span><span class='line'>[bluetooth]# scan on</span></code></pre></td></tr></table></div></figure>


<h3>PAN</h3>

<p>Refers to:  <br/>
<a href="http://blog.fraggod.net/2015/03/28/bluetooth-pan-network-setup-with-bluez-5x.html">http://blog.fraggod.net/2015/03/28/bluetooth-pan-network-setup-with-bluez-5x.html</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>--- machine-1
</span><span class='line'>% bluetoothctl
</span><span class='line'>[NEW] Controller 00:02:72:XX:XX:XX malediction [default]
</span><span class='line'>[bluetooth]# power on
</span><span class='line'>Changing power on succeeded
</span><span class='line'>[CHG] Controller 00:02:72:XX:XX:XX Powered: yes
</span><span class='line'>[bluetooth]# discoverable on
</span><span class='line'>Changing discoverable on succeeded
</span><span class='line'>[CHG] Controller 00:02:72:XX:XX:XX Discoverable: yes
</span><span class='line'>[bluetooth]# agent on
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>--- machine-2 (snipped)
</span><span class='line'>% bluetoothctl
</span><span class='line'>[NEW] Controller 00:02:72:YY:YY:YY rpbox [default]
</span><span class='line'>[bluetooth]# power on
</span><span class='line'>[bluetooth]# scan on
</span><span class='line'>[bluetooth]# agent on
</span><span class='line'>[bluetooth]# pair 00:02:72:XX:XX:XX
</span><span class='line'>[bluetooth]# trust 00:02:72:XX:XX:XX</span></code></pre></td></tr></table></div></figure>


<p>Then Download the script from:</p>

<p><a href="https://github.com/mk-fg/fgtk/blob/master/bt-pan">https://github.com/mk-fg/fgtk/blob/master/bt-pan</a></p>

<p>This <code>bt-pan</code> will setup both the server and the client.</p>

<p>In Server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bt-pan --debug server $br</span></code></pre></td></tr></table></div></figure>


<p>While the <code>$br</code> could be setup via following command(Take Gentoo for example):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/conf.d/net
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'># Comment out this line, and add the following lines:
</span><span class='line'>#config_eth0="dhcp"
</span><span class='line'>config_eth0="null"
</span><span class='line'>bridge_br1="eth0"
</span><span class='line'>config_br1="dhcp"
</span><span class='line'># Next two lines, to make two values work (keep setfd before stp):
</span><span class='line'>brctl_br1="setfd 1
</span><span class='line'>stp on"
</span><span class='line'>...
</span><span class='line'># ln -s net.lo /etc/init.d/net.br1
</span><span class='line'># rc-service net.eth0 stop && rc-service net.br1 start
</span><span class='line'># rc-update add net.br1 default </span></code></pre></td></tr></table></div></figure>


<p>In the Client side, do following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bt-pan client 00:02:72:XX:XX:XX</span></code></pre></td></tr></table></div></figure>


<p>Now check the both client and server, you will find <code>bnep0</code> interface has been
created, you could see it via <code>ifconfig bnep0</code>.</p>

<p>Assign the same IP network range address to the client side, as in the br1
side in server. After that you could ping each other via bluetooth!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On Bluetooth PAN]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/04/on-bluetooth-pan/"/>
    <updated>2015-12-04T10:51:10+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/04/on-bluetooth-pan</id>
    <content type="html"><![CDATA[<h3>AIM</h3>

<p>For sharing the internet connection from working PC to Surface Pro.</p>

<h3>Setup And Configuration</h3>

<h4>SurfacePro</h4>

<p>Install bluez/bluez-libs/bluez-utils:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo pacman -S bluez bluez-utils bluez-libs</span></code></pre></td></tr></table></div></figure>


<p>Modprobe the bnep kernel module:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@surfacepro ~]# modprobe bnep
</span><span class='line'>[root@surfacepro ~]# lsmod | grep bnep
</span><span class='line'>bnep                   20480  0
</span><span class='line'>bluetooth             450560  6 bnep,btbcm,btrtl,btusb,btintel
</span><span class='line'>[root@surfacepro ~]# modprobe btusb</span></code></pre></td></tr></table></div></figure>


<p>Start the bluetooth.service via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo systemctl start bluetooth.service</span></code></pre></td></tr></table></div></figure>


<p><code>bluetoothctl</code> will give access for configurating bluetooth equipment, following steps
shows how to connect to a bluetooth keyboard:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@surfacepro ~]# bluetoothctl 
</span><span class='line'>[NEW] Controller xx:xx:xx:xx:xx:xx surfacepro [default]
</span><span class='line'>[bluetooth]#
</span><span class='line'>[bluetooth]# agent KeyboardOnly 
</span><span class='line'>Agent registered
</span><span class='line'>[bluetooth]# default-agent      
</span><span class='line'>Default agent request successful
</span><span class='line'>[bluetooth]# power on
</span><span class='line'>[CHG] Controller xx:xx:xx:xx:xx:xx Class: 0x00011c
</span><span class='line'>Changing power on succeeded
</span><span class='line'>[CHG] Controller xx:XX:XX:XX:XX:XX Powered: yes
</span><span class='line'>[bluetooth]# scan on
</span><span class='line'>Discovery started
</span><span class='line'>[bluetooth]# pair D0:13:1E:11:F5:45
</span><span class='line'>Attempting to pair with D0:13:1E:11:F5:45
</span><span class='line'>[bluetooth]# connect D0:13:1E:11:F5:45</span></code></pre></td></tr></table></div></figure>


<p>Now try to connect to the keyboard, yes you could use keyboard for typing.</p>

<h4>PAN</h4>

<p>Network Aggregation Point - NAP</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Customize SurfacePro Kernel]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/03/customize-surfacepro-kernel/"/>
    <updated>2015-12-03T17:44:32+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/03/customize-surfacepro-kernel</id>
    <content type="html"><![CDATA[<h3>Preparation</h3>

<p>Get the kernel and patch file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>To be Written</span></code></pre></td></tr></table></div></figure>


<h3>Build</h3>

<p>Prepare for compiliation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ make mrproper</span></code></pre></td></tr></table></div></figure>


<p>Get the current running configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ zcat /proc/config.gz &gt; .config
</span><span class='line'>$ make menuconfig
</span><span class='line'>$ make -j3
</span><span class='line'>$ make modules_install</span></code></pre></td></tr></table></div></figure>


<p>Install Kernel, you newly generated kernel will be named as
<code>vmlinuz-4.1.13-surfacepro3</code>(Though surfacepro, surfacepro3 will remains its name) :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo cp -v arch/x86/boot/bzImage /boot/vmlinuz-4.1.13-surfacepro3</span></code></pre></td></tr></table></div></figure>


<p>Generate the initial RAM disk:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo mkinitcpio -k 4.1.13-surfacepro3 -c /etc/mkinitcpio.conf -g  \ 
</span><span class='line'>/boot/initramfs-4.1.13-surfacepro3.img</span></code></pre></td></tr></table></div></figure>


<p>Copy System.map, it contains a list of kernel symbols.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo cp System.map /boot/System.map-4.1.13-surfacepro3
</span><span class='line'>$ sudo ln -sf /boot/System.map-4.1.13-surfacepro3 /boot/System.map</span></code></pre></td></tr></table></div></figure>


<p>Install the grub&rsquo;s configuration into grub.cfg:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/default/grub
</span><span class='line'>Edit with the name specified
</span><span class='line'>$ sudo grub-mkconfig -o /boot/grub/grub.cfg</span></code></pre></td></tr></table></div></figure>


<p>But still this modification didn&rsquo;t solve surfacepro&rsquo;s wireless problem. finally I have
to fall back to using yaourt&rsquo;s surfac pro kernel.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Awesome's Battery Indicator]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/25/awesomes-battery-indicator/"/>
    <updated>2015-11-25T12:18:29+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/25/awesomes-battery-indicator</id>
    <content type="html"><![CDATA[<h3>Background</h3>

<p>I installed ArchLinux+Awesome On my SurfacePro, while the charger of Surface Pro is not
so tight to the pad. Thus I have to use a battery indicator in Awesome.</p>

<h3>Software</h3>

<p>Refers to:</p>

<p><a href="http://www.everythingisvoid.com/uncategorized/simple-battery-status-indicator-awesome-window-manager">http://www.everythingisvoid.com/uncategorized/simple-battery-status-indicator-awesome-window-manager</a></p>

<p>Install steps on ArchLinux:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo pacman -S luarocks5.1 gobject-introspection acpi
</span><span class='line'>$ sudo luarocks-5.1 install battery_status</span></code></pre></td></tr></table></div></figure>


<p>You could manually run <code>show_battery_status</code> or add it into your own rc.lua file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim ~/.config/awesome/rc.lua
</span><span class='line'>----.....................
</span><span class='line'>autorunApps =
</span><span class='line'>{
</span><span class='line'>--.........
</span><span class='line'>"synergyc 192.168.0.119",
</span><span class='line'>"sudo echo 1240&gt;/sys/class/backlight/intel_backlight/brightness", 
</span><span class='line'>"fcitx",
</span><span class='line'>"show_battery_status", 
</span><span class='line'>----.....................</span></code></pre></td></tr></table></div></figure>


<p>Now restart the awesome you could see the battery indicator.</p>

<h3>Add Charging Indicator</h3>

<p>First download the source code from github:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone https://github.com/svarogg/battery_status</span></code></pre></td></tr></table></div></figure>


<p>Debug with luarocks loader:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rocks-5.1   lua5.1 -lluarocks.loader
</span><span class='line'>Lua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio
</span><span class='line'>&gt; require("rex_posix")
</span><span class='line'>&gt; rex = require("rex_posix")
</span><span class='line'>&gt; battery_rex = rex.new([[([^,]{1,3})%]])
</span><span class='line'>&gt; rex=require("rex_posix")
</span><span class='line'>&gt; battery_rex=rex.new([[([^,]{1,3})%]])
</span><span class='line'>&gt; acpi=io.popen('acpi 2&gt;&1')
</span><span class='line'>&gt; acpi_res = acpi:read("*line")
</span><span class='line'>&gt; acpi:close()
</span><span class='line'>&gt; print (acpi_res)
</span><span class='line'>Battery 0: Full, 100%
</span><span class='line'>&gt; percentage=battery_rex:match(acpi_res)
</span><span class='line'>&gt; print (percentage)
</span><span class='line'>100
</span><span class='line'>&gt; print(type(percentage))
</span><span class='line'>string
</span><span class='line'>&gt; print(type(tonumber(percentage)))
</span><span class='line'>number
</span><span class='line'>&gt; adapter = io.popen('acpi -a 2&gt;&1')
</span><span class='line'>&gt; adapter_res = adapter:read("*line")
</span><span class='line'>&gt; adapter:close()
</span><span class='line'>&gt; print(adapter_res)
</span><span class='line'>Adapter 0: on-line
</span><span class='line'>&gt; charge_rex = rex.new([[(on|off)]])
</span><span class='line'>&gt; print(charge_rex:match(adapter_res))
</span><span class='line'>on</span></code></pre></td></tr></table></div></figure>


<p>We get the status of the charge, then update the corresponding icon to the systray.</p>

<p>The modified repository could be fetched from:</p>

<p><a href="https://github.com/purplepalmdash/Awesome-Battery-Indicator">https://github.com/purplepalmdash/Awesome-Battery-Indicator</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on ArchLinux on SSD for SurfacePro]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/18/tips-on-archlinux-on-ssd-for-surfacepro/"/>
    <updated>2015-11-18T16:59:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/18/tips-on-archlinux-on-ssd-for-surfacepro</id>
    <content type="html"><![CDATA[<h3>Hardware</h3>

<p>Surface Pro, KingShare 128G SSD(USB).</p>

<p>Picture will be updated after successfully installed.</p>

<h3>Virtualbox Way</h3>

<p>Make a vmdk file which actually points to the USB Disk:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo VBoxManage internalcommands createrawvmdk -filename ./rawusb1.vmdk -rawdisk \ 
</span><span class='line'>/dev/disk/by-id/usb-KINGSHAR_KS-CUTS25W_123456789010-0:0
</span><span class='line'>$ sudo chown -R YourName rawusb1.vmdk</span></code></pre></td></tr></table></div></figure>


<p>Now using this rawdisk for starting the VirtualBox based machine.</p>

<p><img src="http://purplepalmdash.github.io/images/2015_11_18_17_10_46_645x529.jpg" alt="/images/2015_11_18_17_10_46_645x529.jpg" /></p>

<h3>Installation</h3>

<p>The system installation is refers to following links:</p>

<p><a href="https://wiki.archlinux.org/index.php/Microsoft_Surface_Pro_3">https://wiki.archlinux.org/index.php/Microsoft_Surface_Pro_3</a></p>

<p><a href="https://wiki.archlinux.org/index.php/Installing_Arch_Linux_on_a_USB_key">https://wiki.archlinux.org/index.php/Installing_Arch_Linux_on_a_USB_key</a></p>

<h3>Updated Configuration</h3>

<p>Finally I installed the surface pro by using a usb dongle which burned the archlinux
installation iso, put it into the surface pro and startup the machine pressing power
key and volume down key, it will goes into the installtion steps.</p>

<p>Install the system on the SSD, the main steps are available at:</p>

<p><a href="http://purplepalmdash.github.io/blog/2014/06/16/archlinux-on-surface-pro/">http://purplepalmdash.github.io/blog/2014/06/16/archlinux-on-surface-pro/</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@archiso ~ # mount /dev/sdb2 /mnt
</span><span class='line'>root@archiso ~ # mount /dev/sdb1 /mnt/boot/EFI 
</span><span class='line'>root@archiso ~ # arch-chroot /mnt /bin/bash
</span><span class='line'>[root@archiso /]# grub-install --target=x86_64-efi --efi-directory=/boot/EFI \ 
</span><span class='line'>--bootloader-id=arch_grub --recheck
</span><span class='line'>[root@archiso /]# grub-mkconfig -o /boot/grub/grub.cfg</span></code></pre></td></tr></table></div></figure>


<p>Because I frequently change the installtion media(I have SSD and Harddisk), so
everytime I change the installtion media, I have to run above steps again.</p>

<h3>Kernel Configuration</h3>

<p>Install the kernel from yaourt, you could get the surfacepro3 compatiable linux kernel,
install it on surface pro will also be OK:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ yaourt surfacepro
</span><span class='line'>1 aur/linux-surfacepro3 4.3-1 [installed] (5)
</span><span class='line'>    The Linux-surfacepro3 kernel and modules
</span><span class='line'>2 aur/linux-surfacepro3-docs 4.3-1 (5)
</span><span class='line'>    Kernel hackers manual - HTML documentation that comes with the Linux-surfacepro3
</span><span class='line'>kernel
</span><span class='line'>3 aur/linux-surfacepro3-headers 4.3-1 (5)
</span><span class='line'>    Header files and scripts for building modules for Linux-surfacepro3 kernel</span></code></pre></td></tr></table></div></figure>


<p>After installation, you have to manually generate the grub items:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo grub-mkconfig -o /boot/grub/grub.cfg</span></code></pre></td></tr></table></div></figure>


<p>Now reboot the surface pro, you could view the kernel has been upgraded to our newly
installed version:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>➜  ~  uname -a
</span><span class='line'>Linux surfacepro 4.3.0-1-surfacepro3 #1 SMP PREEMPT Fri Nov 20 05:47:41 CST 2015 x86_64
</span><span class='line'>GNU/Linux</span></code></pre></td></tr></table></div></figure>


<p>With the new version of kernel, you won&rsquo;t face too much problems, my problem is when
using the official kernel, my wifi will get stucked, sometimes the machine will be
dead.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spice Client]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/16/spice-client/"/>
    <updated>2015-11-16T21:20:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/16/spice-client</id>
    <content type="html"><![CDATA[<h3>Image Conversion</h3>

<p>Convert the vdi files into qcow2 file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ qemu-img convert -f vdi -O qcow2 Windows81.vdi Windows81.qcow2</span></code></pre></td></tr></table></div></figure>


<p>Then continue to create the virtual machine via importing the img.</p>

<h3>Spice Client</h3>

<p>Using virtviewer for view the remote machine.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo pacman -S virtviewer
</span><span class='line'>$ remote-viewer spice://localhost:5900</span></code></pre></td></tr></table></div></figure>


<p>Or you could view the desktop via <code>spicec</code>.</p>

<p>The listening port could be view via <code>netstat -anp | grep 5900</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Win10 Tips for Using Xshell]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/13/win10-tips-for-using-xshell/"/>
    <updated>2015-11-13T15:59:16+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/13/win10-tips-for-using-xshell</id>
    <content type="html"><![CDATA[<p>Won&rsquo;t change the size of the window when you disable the window size:</p>

<p><img src="http://purplepalmdash.github.io/images/Xshell_1.jpg" alt="/images/Xshell_1.jpg" /></p>

<p>When using vim, the wrappered module should be disable, thus won&rsquo;t cause you
mis-editing the content of the file:</p>

<p><img src="http://purplepalmdash.github.io/images/Xshell_2.jpg" alt="/images/Xshell_2.jpg" /></p>

<p>The configuration should be applied to each session.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Variety]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/13/variety/"/>
    <updated>2015-11-13T11:05:05+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/13/variety</id>
    <content type="html"><![CDATA[<h3>参考</h3>

<p><a href="http://peterlevi.com/variety/how-to-install/">http://peterlevi.com/variety/how-to-install/</a></p>

<h3>安装</h3>

<p>Ubuntu上，从ppa安装:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo add-apt-repository ppa:peterlevi/ppa
</span><span class='line'>$ sudo apt-get update
</span><span class='line'>$ sudo apt-get install variety</span></code></pre></td></tr></table></div></figure>


<h3>配置</h3>

<p>安装完毕后，在终端下键入<code>variety</code>即可开始配置该软件，第一次会询问是否创建一个用于多终端
主机之间同步桌面壁纸的账户:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_11_13_11_10_35_755x507.jpg" alt="/images/2015_11_13_11_10_35_755x507.jpg" /></p>

<p>这一步是可选的，我们在这里先注册上. 需要注意的是，用翻墙后的浏览器完成注册.</p>

<p>一般情况下这里就能使用了，但是awesome桌面环境下需要增加一下这行:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim /home/XXXXXXX/.config/variety/scripts/set_wallpaper
</span><span class='line'>### Finally we comes to awesome!  
</span><span class='line'>awsetbg "$WP" 2&gt; /dev/null</span></code></pre></td></tr></table></div></figure>


<h3>进一步美化</h3>

<p>Awesome下就只能换换壁纸，本身终端也不支持透明度的配置，如果是gnome之类的桌面环境，可以
把terminal emulator的透明度打开，能获得很好的视觉效果。</p>

<p>默认的更新频率是5分钟更新一次，当然在配置界面下可以更改为更短/更长的时限。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Good Material]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/05/good-material/"/>
    <updated>2015-11-05T10:41:22+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/05/good-material</id>
    <content type="html"><![CDATA[<h3>Movie</h3>

<p>Sorted by director:  <br/>
<a href="http://pan.baidu.com/share/home?uk=72456331&amp;view=share#category/type=0">http://pan.baidu.com/share/home?uk=72456331&amp;view=share#category/type=0</a></p>

<h3>Good BookMark Of Zhihu</h3>

<p><a href="http://www.zhihu.com/collection/38938285?page=2">http://www.zhihu.com/collection/38938285?page=2</a></p>

<h3>Linux Wondering</h3>

<p><a href="http://i.linuxtoy.org/docs/guide/index.html">http://i.linuxtoy.org/docs/guide/index.html</a></p>

<h3>Oh My Zsh</h3>

<p><a href="https://github.com/robbyrussell/oh-my-zsh">https://github.com/robbyrussell/oh-my-zsh</a></p>

<p><a href="http://www.kafeitu.me/shell/2012/03/25/oh-my-zsh.html">http://www.kafeitu.me/shell/2012/03/25/oh-my-zsh.html</a></p>

<p><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes">https://github.com/robbyrussell/oh-my-zsh/wiki/themes</a></p>

<p><a href="http://segmentfault.com/a/1190000002658335">http://segmentfault.com/a/1190000002658335</a></p>

<h3>Wondering In Guangzhou</h3>

<p><a href="http://www.zhihu.com/question/36159147">http://www.zhihu.com/question/36159147</a></p>

<h3>Impress.js</h3>

<p>Use this javascript for writing the PPT. <br/>
<a href="https://github.com/impress/impress.js">https://github.com/impress/impress.js</a></p>

<h3>Programming On Dialog</h3>

<p><a href="http://www.cyberciti.biz/tips/spice-up-your-unix-linux-shell-scripts.html">http://www.cyberciti.biz/tips/spice-up-your-unix-linux-shell-scripts.html</a></p>

<p><a href="https://techbase.kde.org/Development/Tutorials/Shell_Scripting_with_KDE_Dialogs">https://techbase.kde.org/Development/Tutorials/Shell_Scripting_with_KDE_Dialogs</a></p>

<h3>Remote Control Of Arduino</h3>

<p><a href="http://www.geek-workshop.com/thread-25230-1-1.html">http://www.geek-workshop.com/thread-25230-1-1.html</a></p>

<h3>Processing</h3>

<p><a href="http://open.sina.com.cn/course/id_300/lesson_4094/">http://open.sina.com.cn/course/id_300/lesson_4094/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FRDM-KL02Z Tips(1)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/05/frdm-kl02z-tips-1/"/>
    <updated>2015-11-05T09:53:38+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/05/frdm-kl02z-tips-1</id>
    <content type="html"><![CDATA[<p>Reference Material: <br/>
<a href="http://www.freescale.com/zh-Hans/products/arm-processors/kinetis-cortex-m/l-series/freedom-development-platform-for-the-kinetis-kl02-family:FRDM-KL02Z?tab=In-Depth_Tab">http://www.freescale.com/zh-Hans/products/arm-processors/kinetis-cortex-m/l-series/freedom-development-platform-for-the-kinetis-kl02-family:FRDM-KL02Z?tab=In-Depth_Tab</a></p>

<h3>Minicom</h3>

<p>115200/data-bit: 8/ no parity/stop bit 1.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CloudStack VR连接数]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/04/cloudstack-vrlian-jie-shu/"/>
    <updated>2015-11-04T10:56:12+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/04/cloudstack-vrlian-jie-shu</id>
    <content type="html"><![CDATA[<h2>All-In-One VR性能测试</h2>

<h3>测试环境</h3>

<h4>硬件</h4>

<p><strong>CPU</strong>: Intel&reg; Core&trade; i7-3770 CPU @ 3.40GHz, 四核八线程。 <br/>
<strong>内存</strong>: 24 G。</p>

<h4>虚拟机网络</h4>

<p><strong>虚拟机网络</strong>: 新建网段为10.82.89.0/24, DHCP范围设置如下，NAT转发外网: <br/>
<img src="http://purplepalmdash.github.io/images/2015_11_04_09_24_37_479x293.jpg" alt="/images/2015_11_04_09_24_37_479x293.jpg" /></p>

<h4>All-In-One 虚拟机</h4>

<p><strong>CPU</strong>: 6 Core, Copy Host CPU Configuration。     <br/>
<strong>内存</strong>: 8 G。
<strong>硬盘</strong>: 200 G。
<strong>系统</strong>: Ubuntu 14.04 x86_64。  <br/>
<strong>CloudStack版本</strong>: 4.5.2。</p>

<h4>CloudStack环境</h4>

<p><strong>Zone</strong>: Advance Zone(PerfZone)。 <br/>
<strong>IP</strong>: 取10.82.89.0/24中DHCP尚未使用的IP地址。    <br/>
<strong>测试机模板</strong>: ubuntu64perftest.qcow2(<a href="http://192.168.0.79/ubuntu64perftest.qcow2">http://192.168.0.79/ubuntu64perftest.qcow2</a>) <br/>
<strong>测试机套餐</strong>: 2 Core, 内存3G。</p>

<h4>拓扑图及说明</h4>

<p><img src="http://purplepalmdash.github.io/images/allinone.jpeg" alt="/images/allinone.jpeg" /></p>

<p>IP地址说明:</p>

<p><strong>All-In-One</strong>:  10.82.89.89   <br/>
<strong>Test Server</strong>: CloudStack实例，NAT后的10.82.89.0/24地址  <br/>
<strong>VR</strong>: CloudStack自动分配的10.82.89.0/24地址  <br/>
<strong>KVM</strong>: All-In-One上运行的虚拟机，绑定8个IP地址, 10.82.89.11/10.82.89.254~10.82.89.247</p>

<h3>测试方法</h3>

<p>Test Server上运行一个可支持多用户长时间在线的服务端程序，并可统计同时在线人数，接受外部
客户端发来的服务请求。</p>

<p>Test Client上运行一个快速发起并保持连接的客户端程序，服务端地址指向Test Server, 服务端
口即Test Server上服务端程序监听的端口。</p>

<p>单个IP最多支持6万多个活动连接，为了提升单台机器能支持的同时在线人数，需要在Test Client
上同时绑定多个网卡，kvm最多支持8个网卡，60000*8=500000, 单台机可以发起并保持的连接数超
过50万。</p>

<p>Server端代码下载地址:  <br/>
<a href="https://gist.github.com/yongboy/5318930/raw/ccf8dc236da30fcf4f89567d567eaf295b363d47/server.c">https://gist.github.com/yongboy/5318930/raw/ccf8dc236da30fcf4f89567d567eaf295b363d47/server.c</a></p>

<p>Client端代码下载地址:</p>

<p><a href="https://gist.github.com/yongboy/5324779/raw/f29c964fcd67fefc3ce66e487a44298ced611cdc/client2.c">https://gist.github.com/yongboy/5324779/raw/f29c964fcd67fefc3ce66e487a44298ced611cdc/client2.c</a></p>

<h3>打开各节点限制</h3>

<p>在All-In-One机器/Test Server/Test Client上，均需要打开以下限制:</p>

<h4>最大文件句柄数</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/security/limits.conf
</span><span class='line'>
</span><span class='line'>* soft nofile 104857
</span><span class='line'>* hard nofile 104857</span></code></pre></td></tr></table></div></figure>


<h4>最大文件数限制</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/sysctl.conf
</span><span class='line'>fs.file-max=1048576
</span><span class='line'># sudo sysctl -p /etc/sysctl.conf</span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>conntrack最大连接数</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/sysctl.conf
</span><span class='line'>net.netfilter.nf_conntrack_max = 6553500
</span><span class='line'># sysctl -p /etc/sysctl.conf</span></code></pre></td></tr></table></div></figure>


<h4>可用端口数</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/sysctl.conf
</span><span class='line'>    net.ipv4.ip_local_port_range= 1024 65535
</span><span class='line'># sysctl -p /etc/sysctl.conf</span></code></pre></td></tr></table></div></figure>


<p>更改完毕后，需要重新启动机器生效，为了使sysctl的配置每次都生效，可以考虑将命令加到启动
项中。</p>

<h3>测试过程</h3>

<h4>启动Server端：</h4>

<p>Server端启动后将监听服务器端的8000端口：</p>

<p><img src="http://purplepalmdash.github.io/images/2015_11_04_10_25_54_816x191.jpg" alt="/images/2015_11_04_10_25_54_816x191.jpg" /></p>

<h4>启动Client端：</h4>

<p>单机多网卡</p>

<p>在All-In-One机器上，由下面的命令启动qemu实例,则可以得到8块网卡的虚拟机, 内存大小<code>-m
5120</code>可以调小，一般1024～2048就够:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo qemu-system-x86_64 -net nic,model=virtio,macaddr=52:54:00:12:34:56,vlan=1
</span><span class='line'>-net tap,vlan=1 -net nic,model=virtio,macaddr=52:54:00:12:34:57,vlan=2 -net
</span><span class='line'>tap,vlan=2 -net nic,model=virtio,macaddr=52:54:00:12:34:58,vlan=3 -net
</span><span class='line'>tap,vlan=3 -net nic,model=virtio,macaddr=52:54:00:12:34:59,vlan=4 -net
</span><span class='line'>tap,vlan=4 -net nic,model=virtio,macaddr=52:54:00:12:34:60,vlan=5 -net
</span><span class='line'>tap,vlan=5 -net nic,model=virtio,macaddr=52:54:00:12:34:61,vlan=6 -net
</span><span class='line'>tap,vlan=6 -net nic,model=virtio,macaddr=52:54:00:12:34:62,vlan=7 -net
</span><span class='line'>tap,vlan=7 -net nic,model=virtio,macaddr=52:54:00:12:34:63,vlan=8 -net
</span><span class='line'>tap,vlan=8 -hda ./ubuntu64perftest.qcow2 -m 5120 --enable-kvm</span></code></pre></td></tr></table></div></figure>


<p>启动虚拟机后, 在虚拟机里设置地址(默认只从eth0得到dhcp地址):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat ./ethernet.sh
</span><span class='line'>ifconfig eth1 up
</span><span class='line'>ifconfig eth1 192.168.1.254
</span><span class='line'>ifconfig eth2 up
</span><span class='line'>ifconfig eth2 192.168.1.253
</span><span class='line'>ifconfig eth3 up
</span><span class='line'>ifconfig eth3 192.168.1.252
</span><span class='line'>ifconfig eth4 up
</span><span class='line'>ifconfig eth4 192.168.1.251
</span><span class='line'>ifconfig eth5 up
</span><span class='line'>ifconfig eth5 192.168.1.250
</span><span class='line'>ifconfig eth6 up
</span><span class='line'>ifconfig eth6 192.168.1.249
</span><span class='line'>ifconfig eth7 up
</span><span class='line'>ifconfig eth7 192.168.1.248</span></code></pre></td></tr></table></div></figure>


<p>客户端中，发起海量连接的脚本:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> cat startbomb.sh 
</span><span class='line'>#!/bin/sh
</span><span class='line'>./client2 -h 192.168.1.109 -p 8000 -m 64000 -o
</span><span class='line'>192.168.1.16,192.168.1.254,192.168.1.253,192.168.1.252, 
</span><span class='line'>192.168.1.251,192.168.1.250,192.168.1.249,192.168.1.248</span></code></pre></td></tr></table></div></figure>


<p>调用<code>./startbomb.sh</code>即可开始对Server端发起大量在线连接</p>

<h3>测试截图</h3>

<p>这里记录一次完整的VR因为过多连接数造成内存耗尽自动重启的过程。</p>

<p>在CloudStack的实例上运行server端程序, 此时的输出如下:</p>

<p>VR的<code>top</code>输出:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_11_02_21_11_06_810x293.jpg" alt="/images/2015_11_02_21_11_06_810x293.jpg" /></p>

<p>Server输出:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_11_02_21_13_37_788x205.jpg" alt="/images/2015_11_02_21_13_37_788x205.jpg" /></p>

<p>客户端开始发包连接的过程中:</p>

<p>10W:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_11_02_21_15_11_794x589.jpg" alt="/images/2015_11_02_21_15_11_794x589.jpg" /></p>

<p>20W:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_11_02_21_15_53_841x563.jpg" alt="/images/2015_11_02_21_15_53_841x563.jpg" /></p>

<p>30W:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_11_02_21_16_35_902x622.jpg" alt="/images/2015_11_02_21_16_35_902x622.jpg" /></p>

<p>40W:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_11_02_21_17_19_869x654.jpg" alt="/images/2015_11_02_21_17_19_869x654.jpg" /></p>

<p>44W, VR轰挂:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_11_02_21_18_06_813x689.jpg" alt="/images/2015_11_02_21_18_06_813x689.jpg" /></p>

<p>此时查看VR的重启时间:</p>

<p><img src="http://purplepalmdash.github.io/images/2015_11_02_21_18_56_665x149.jpg" alt="/images/2015_11_02_21_18_56_665x149.jpg" /></p>

<p>可以看到VR启动时间很短，这证明VR由于内存耗尽已经自动重启了。</p>

<h3>应对策略</h3>

<h4>暂时应对</h4>

<p>在VR上对每个进/出 虚拟路由器的IP作连接数限制，TCP/UDP都需要设置。ICMP暂时未作限定:</p>

<p>Iptables规则如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-A PREROUTING -i eth0 -p tcp  -m connlimit --connlimit-above 1000 --connlimit-mask 32 
</span><span class='line'>--connlimit-saddr -j DROP
</span><span class='line'>-A PREROUTING -i eth2 -p tcp  -m connlimit --connlimit-above 1000 --connlimit-mask 32
</span><span class='line'>--connlimit-saddr -j DROP
</span><span class='line'>-A PREROUTING -i eth0 -p udp  -m connlimit --connlimit-above 1000 --connlimit-mask 32
</span><span class='line'>--connlimit-saddr -j DROP
</span><span class='line'>-A PREROUTING -i eth2 -p udp  -m connlimit --connlimit-above 1000 --connlimit-mask 32
</span><span class='line'>--connlimit-saddr -j DROP</span></code></pre></td></tr></table></div></figure>


<p>添加完此规则后，Test Server最多可接受1000个同时在线连接。这时在Client端发起大量连接超过
1000的都会被VR的iptables规则链丢弃。</p>

<h4>潜在问题</h4>

<p>对于过多过快的攻击性连接，VR匹配iptables会造成VR CPU占用率过高。建议采用硬件防火墙来阻
挡这类
攻击。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moving CloudStack From VM to Physical Node]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/01/moving-cloudstack-from-vm-to-physical-node/"/>
    <updated>2015-11-01T08:52:08+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/01/moving-cloudstack-from-vm-to-physical-node</id>
    <content type="html"><![CDATA[<h3>AIM</h3>

<p>To move the All-In-One CloudStack environment from kvm VM based to physical
machine.</p>

<h3>Copy VM Disk</h3>

<h3>Based On Ubuntu15.04</h3>

<p>First get all of the deb file from
<code>http://cloudstack.apt-get.eu/ubuntu/dists/trusty/4.5/pool/</code></p>

<p>Then setup a local repository, edit its <code>/etc/apt/sources.list</code> file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># vim /etc/apt/sources.list
</span><span class='line'>deb http://192.168.1.13/        cloudstackdeb/</span></code></pre></td></tr></table></div></figure>


<p>Problem, For we have setup the ovsbr0 on Ubuntu15.04, how to solve its
networking together with cloudstack?</p>

<h3>Newly installed CentOS7</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thinking in VR]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/29/thinking-in-vr/"/>
    <updated>2015-10-29T16:00:39+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/29/thinking-in-vr</id>
    <content type="html"><![CDATA[<p>Restriction of the connections.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://www.cnblogs.com/cmt/archive/2013/03/13/2957583.html
</span><span class='line'>http://bbs.m0n0china.org/viewthread.php?tid=16459
</span><span class='line'>http://my.oschina.net/u/1169079/blog/397705</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use AutoHotKey Together With Synergy]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/29/use-autohotkey-together-with-synergy/"/>
    <updated>2015-10-29T09:07:18+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/29/use-autohotkey-together-with-synergy</id>
    <content type="html"><![CDATA[<p>Recently I am using Surface Pro as my second screen, my main screen runs Linux, whose
Copy/Paste could be done via mouse(mouse left key for selecting and copy to clipboard,
middle key for pasting). While the Windows doesn&rsquo;t have the same configuration for
Copy/Paste(You could only use Ctrl+c/Ctrl+v), which makes me feels so low-efficiency.
That&rsquo;s why I use AutoHotKey.</p>

<h3>Installation</h3>

<p>Download the AutoHotKey from  <br/>
<a href="http://www.autohotkey.com/">http://www.autohotkey.com/</a></p>

<p>Install it on Windows 8.1.</p>

<h3>Configuration</h3>

<p>Create a directory named <code>AutoHotKey</code> on <code>C:\</code>, then create a file named
<code>CopyPaste.ahk</code>, then right-click it and select <code>Edit Script</code>, fill in following
content, which is copied from
<a href="http://autohotkey.com/board/topic/44064-copy-on-select-implementation/">http://autohotkey.com/board/topic/44064-copy-on-select-implementation/</a>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mousedrag_treshold := 20 ; pixels
</span><span class='line'>middleclick_available := 15 ; seconds
</span><span class='line'>
</span><span class='line'>Hotkey mbutton, paste_selection
</span><span class='line'>Hotkey mbutton, off
</span><span class='line'>Hotkey rbutton, cancel_paste
</span><span class='line'>Hotkey rbutton, off
</span><span class='line'>    
</span><span class='line'>    
</span><span class='line'>#IfWinNotActive ahk_class ConsoleWindowClass
</span><span class='line'>~lButton::
</span><span class='line'>  MouseGetPos, mousedrag_x, mousedrag_y
</span><span class='line'>  keywait lbutton
</span><span class='line'>  mousegetpos, mousedrag_x2, mousedrag_y2
</span><span class='line'>  if (abs(mousedrag_x2 - mousedrag_x) &gt; mousedrag_treshold
</span><span class='line'>    or abs(mousedrag_y2 - mousedrag_y) &gt; mousedrag_treshold)
</span><span class='line'>  {
</span><span class='line'>    wingetclass class, A
</span><span class='line'>    if (class == "Emacs")
</span><span class='line'>      sendinput !w
</span><span class='line'>    else
</span><span class='line'>      sendinput ^c
</span><span class='line'>    settimer follow_mouse, 100
</span><span class='line'>    settimer cleanup, % middleclick_available * 1000
</span><span class='line'>    hotkey mbutton, on
</span><span class='line'>    hotkey rbutton, on
</span><span class='line'>  }
</span><span class='line'>  return
</span><span class='line'>#IfWinNotActive
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>follow_mouse:
</span><span class='line'>  tooltip copy
</span><span class='line'>  return
</span><span class='line'>  
</span><span class='line'>paste_selection:
</span><span class='line'>  sendinput {lbutton}
</span><span class='line'>  WinGetClass class, A
</span><span class='line'>  if (class == "Emacs")
</span><span class='line'>    SendInput ^y
</span><span class='line'>  else
</span><span class='line'>    SendInput ^v
</span><span class='line'>  gosub cleanup
</span><span class='line'>  return
</span><span class='line'>  
</span><span class='line'>cancel_paste:
</span><span class='line'>  sendinput {rbutton}
</span><span class='line'>  gosub cleanup
</span><span class='line'>  return  
</span><span class='line'>  
</span><span class='line'>cleanup:
</span><span class='line'>  Hotkey mbutton, off
</span><span class='line'>  Hotkey rbutton, off
</span><span class='line'>  SetTimer cleanup, off
</span><span class='line'>  settimer follow_mouse, off
</span><span class='line'>  tooltip
</span><span class='line'>  Return
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>;; clipx
</span><span class='line'>^mbutton::
</span><span class='line'>  sendinput ^+{insert}
</span><span class='line'>  return</span></code></pre></td></tr></table></div></figure>


<p>Now double click it, test its functionality. On Windows, using the real mouse, you will
find the activity are the same as in Linux/Unix X.</p>

<p>But failed integration with Synergy!</p>

<h3>True X-Mouse Gizmo</h3>

<p>Since the AutoHotKey failed with synergy, I have to swith to another method.</p>

<p>Download it from:</p>

<p><a href="http://fy.chalmers.se/~appro/nt/TXMouse/">http://fy.chalmers.se/~appro/nt/TXMouse/</a></p>

<p>Add it into the startup file in Windows 8.</p>

<p>Add the shortlink into <code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code>
,then restart the computer, verify the modification.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenStack Liberty安装(1)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/25/openstack-libertyan-zhuang-1/"/>
    <updated>2015-10-25T12:05:58+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/25/openstack-libertyan-zhuang-1</id>
    <content type="html"><![CDATA[<h3>初始化准备</h3>

<p>用Packer.io制作Ubuntu14.04的qcow2文件镜像, 设定磁盘大小为100G, lvm分区.  <br/>
网络: 在virt-manager中制作一个网段为10.0.0.0/24的网段. 所有创建虚拟机的eth0均
加入到此网络中.   <br/>
<img src="http://purplepalmdash.github.io/images/2015_10_25_12_22_24_504x487.jpg" alt="/images/2015_10_25_12_22_24_504x487.jpg" /></p>

<p>To be Continued.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on Ceph on Docker]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/23/tips-on-ceph-on-docker/"/>
    <updated>2015-10-23T22:32:17+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/23/tips-on-ceph-on-docker</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<p>Pull the docker image via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo docker pull ceph/demo</span></code></pre></td></tr></table></div></figure>


<h3>Run Ceph</h3>

<p>Run the container via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sudo docker run -d --net=host -e MON_IP=192.168.10.190 -e CEPH_NETWORK=192.168.10.0/24
</span><span class='line'>ceph/demo</span></code></pre></td></tr></table></div></figure>


<p>View the docker instance via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># docker ps
</span><span class='line'>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
</span><span class='line'>cbe567594adb        ceph/demo           "/entrypoint.sh"    About an hour ago   Up About an hour                        furious_hopper 
</span><span class='line'># docker exec -it cbe567594adb</span></code></pre></td></tr></table></div></figure>


<h3>Ceph Operation</h3>

<p>View the ceph processes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@monitor:/# ps -ef | grep "ceph"                                                                                                                                 
</span><span class='line'>root         1     0  0 13:16 ?        00:00:00 /usr/bin/python /usr/bin/ceph -w
</span><span class='line'>root        32     1  0 13:16 ?        00:00:01 ceph-mon -i monitor --public-addr 192.168.10.190:6789
</span><span class='line'>root       201     1  0 13:16 ?        00:00:06 ceph-osd -i 0 -k /var/lib/ceph/osd/ceph-0/keyring
</span><span class='line'>root       412     1  0 13:16 ?        00:00:01 ceph-mds --cluster=ceph -i 0
</span><span class='line'>root       470     1  0 13:16 ?        00:00:03 radosgw -c /etc/ceph/ceph.conf -n client.radosgw.gateway -k /var/lib/ceph/radosgw/monitor/keyring --rgw-socket-path= --rgw-frontends=civetweb port=80
</span><span class='line'>root       473     1  0 13:16 ?        00:00:01 /usr/bin/python /usr/bin/ceph-rest-api -n client.admin
</span><span class='line'>root      1703  1557  0 14:37 ?        00:00:00 grep --color=auto ceph</span></code></pre></td></tr></table></div></figure>


<p>View Ceph Status:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@monitor:/# ceph -s
</span><span class='line'>    cluster c3470b36-8d03-4dbb-8af4-d4353ea54973
</span><span class='line'>     health HEALTH_OK
</span><span class='line'>     monmap e1: 1 mons at {monitor=192.168.10.190:6789/0}
</span><span class='line'>            election epoch 2, quorum 0 monitor
</span><span class='line'>     mdsmap e5: 1/1/1 up {0=0=up:active}
</span><span class='line'>     osdmap e22: 1 osds: 1 up, 1 in
</span><span class='line'>      pgmap v75: 144 pgs, 11 pools, 6796 bytes data, 70 objects
</span><span class='line'>            3789 MB used, 287 GB / 291 GB avail
</span><span class='line'>                 144 active+clean</span></code></pre></td></tr></table></div></figure>


<p>Create a new user:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># radosgw-admin user create --uid="xxxx" --display-name="XXXX YYYY" --email=xxxyyy@gmail.com</span></code></pre></td></tr></table></div></figure>


<p>Remember the output of the <code>access_key</code> and <code>secret_key</code>.</p>

<h3>Configure Ceph</h3>

<p>Install softwares:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get update -y
</span><span class='line'># apt-get install -y python
</span><span class='line'># apt-get install -y python-pip
</span><span class='line'># pip install boto
</span><span class='line'># pip install ipython
</span><span class='line'># pip install s3cmd
</span><span class='line'># apt-get install -y vim</span></code></pre></td></tr></table></div></figure>


<p>Use the <code>list_buckets.py</code> file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat list_buckets.py
</span><span class='line'>import boto
</span><span class='line'>import boto.s3.connection
</span><span class='line'>
</span><span class='line'>access_key =  '5S5YPYC46EVYG9MF0RSR'
</span><span class='line'>secret_key = 'hEcgOMoNOp6jmYnt3G6qqJiT7mV5A8zBR9g6o38Z'
</span><span class='line'>
</span><span class='line'>conn = boto.connect_s3(
</span><span class='line'>        aws_access_key_id = access_key,
</span><span class='line'>        aws_secret_access_key = secret_key,
</span><span class='line'>        host = 'localhost',
</span><span class='line'>        is_secure=False,
</span><span class='line'>        calling_format = boto.s3.connection.OrdinaryCallingFormat(),
</span><span class='line'>        )</span></code></pre></td></tr></table></div></figure>


<p>In ipython, use following commands for create a new bucket:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>In [8]: conn.create_bucket("fuck")                                        
</span><span class='line'>Out[8]: &lt;Bucket: fuck&gt;
</span><span class='line'>
</span><span class='line'>In [9]: conn.get_all_buckets()                                                 
</span><span class='line'>Out[9]: [&lt;Bucket: fuck&gt;]</span></code></pre></td></tr></table></div></figure>


<p>Download the s3cfg file from :</p>

<p><a href="https://github.com/tobegit3hub/.s3cfg/blob/master/.s3cfg">https://github.com/tobegit3hub/.s3cfg/blob/master/.s3cfg</a></p>

<p>Also configure its <code>access_key</code> and <code>secret_key</code>, save it in your root
directory, run following commands, you will see the buckets:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># s3cmd ls                                                                                                                                             
</span><span class='line'>2015-10-23 13:25  s3://fuck</span></code></pre></td></tr></table></div></figure>


<h3>Mount Ceph In Linux</h3>

<p>In Ubuntu machine, install ceph:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install ceph</span></code></pre></td></tr></table></div></figure>


<p>Get the admin&rsquo;s password(In Ceph Container):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ceph-authtool --print-key /etc/ceph/ceph.client.admin.keyring 
</span><span class='line'>AQAmMypWs06BGxAAQ1rQyFqFJ25xaDye4c9kyQ==</span></code></pre></td></tr></table></div></figure>


<p>Now mount it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo mount -t ceph 192.168.10.190:/ /mnt -o name=admin,secret=AQAmMypWs06BGxAAQ1rQyFqFJ25xaDye4c9kyQ==
</span><span class='line'>$ sudo touch /mnt/abc</span></code></pre></td></tr></table></div></figure>


<p>Via <code>ceph -s</code> we could see the <code>pgmap v86</code> changes, which indicates the data
has been written into the ceph.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ToDoThings(1)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/19/todothings-1/"/>
    <updated>2015-10-19T20:40:03+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/19/todothings-1</id>
    <content type="html"><![CDATA[<h3>1. Logsnash/Zabbix</h3>

<p>Use Zabbix for monitoring the CloudStack Agents/Management Node?</p>

<h3>2. OpenStack Liberty</h3>

<p><a href="http://docs.openstack.org/liberty/install-guide-ubuntu/">http://docs.openstack.org/liberty/install-guide-ubuntu/</a></p>

<h3>3. Newly added todoes</h3>

<p>Added todoes issue in .zshrc:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>alias vitodos='cdheroku && vim source/_posts/2015-10-19-todothings-1.markdown'
</span><span class='line'>alias cattodos='cdheroku && cat source/_posts/2015-10-19-todothings-1.markdown'</span></code></pre></td></tr></table></div></figure>


<h3>4. Improve Your Efficiency</h3>

<p><a href="http://embeddedlinux.org.cn/html/xingyexinwen/201510/19-3991.html?bsh_bid=768829175">Improve Linux efficiency</a></p>

<h3>5. BenchMarking</h3>

<p><a href="https://wiki.archlinux.org/index.php/Benchmarking">ArchLinux Tools For Benchmarking</a></p>

<h3>6. Performance Monitoring</h3>

<p>nagios and weixin.</p>

<h3>7. Data Visualization</h3>

<p>Draw air pollution in Graphite?   <br/>
Powermap?</p>

<h3>8. Autossh</h3>

<p>Auto ssh connection for some computer acrossing the internet.</p>

<h3>9. Quickly stack.sh</h3>

<p>I want to write some scripts for quickly setup the O..Stack env.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On VM Performance Test]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/19/on-vm-performance-test/"/>
    <updated>2015-10-19T09:54:45+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/19/on-vm-performance-test</id>
    <content type="html"><![CDATA[<h3>AIM</h3>

<p>To build the testing Framework.</p>

<h3>Reference Material</h3>

<p><a href="http://thesai.org/Downloads/Volume5No5/Paper_16-Performance_Evaluation_of_Private_Clouds.pdf">Paper_16-Performance_Evaluation_of_Private_Clouds.pdf</a></p>

<p><a href="http://www.junauza.com/2012/05/best-system-benchmarking-tools-for.html">http://www.junauza.com/2012/05/best-system-benchmarking-tools-for.html</a></p>

<h3>Software</h3>

<p>Install following software:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'># apt-get install -y  libx11-dev libgl1-mesa-dev libxext-dev perl perl-modules make gcc nfs-common
</span><span class='line'>postgresql-9.1 postgresql-contrib-9.1 mbw iperf</span></code></pre></td></tr></table></div></figure>


<h3>CPU</h3>

<p>The following software are introduced for testing CPU Performance:
* Linpack
* Lookbusy</p>

<h4>Linpack</h4>

<p>Note: Only works on INTEL CPU.</p>

<p><a href="http://registrationcenter-download.intel.com/akdlm/irc_nas/2169/l_lpk_p_10.3.4.007.tgz">Linux</a></p>

<p><a href="http://registrationcenter-download.intel.com/akdlm/irc_nas/2169/w_lpk_p_10.3.4.007.zip">Windows</a></p>

<p><a href="http://registrationcenter-download.intel.com/akdlm/irc_nas/2169/m_lpk_p_10.3.4.007.tgz">Mac</a></p>

<p>Linux Steps:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ tar xvf l_lpk_p_10.3.4.007.tgz
</span><span class='line'>$ cd linpack_10.3.4/benchmarks/linpack
</span><span class='line'>$ ./runme_xeon64</span></code></pre></td></tr></table></div></figure>


<p>You can see the testing result via <code>tail -f lin_xeon64.txt</code>.</p>

<p>Note your CPU&rsquo;s temperature and your system load are changing.</p>

<h4>Lookbusy</h4>

<p><a href="https://www.devin.com/lookbusy/">https://www.devin.com/lookbusy/</a>  <br/>
Download and install it via:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># wget https://www.devin.com/lookbusy/download/lookbusy-1.4.tar.gz
</span><span class='line'># tar xzvf lookbusy-1.4.tar.gz
</span><span class='line'># cd lookbusy-1.4/
</span><span class='line'># ./configure --prefix=/usr
</span><span class='line'># make && make install
</span><span class='line'># lookbusy</span></code></pre></td></tr></table></div></figure>


<p>Default will add 50% load to each CPU.</p>

<h4></h4>

<h3>Memory</h3>

<h4>Stream</h4>

<p><a href="https://www.cs.virginia.edu/stream/ref.html">https://www.cs.virginia.edu/stream/ref.html</a></p>

<p>Get the source code from:
<a href="https://www.cs.virginia.edu/stream/FTP/Code/">https://www.cs.virginia.edu/stream/FTP/Code/</a></p>

<p>Then compile it and run:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># make stream_c.exe
</span><span class='line'># ./stream_c.exe</span></code></pre></td></tr></table></div></figure>


<h3>Disk IO</h3>

<h4>Bonnie++</h4>

<p><a href="http://blog.csdn.net/choice_jj/article/details/8026130">测试工具Bonnie++的使用</a></p>

<h3>Network IO</h3>

<h4>Iperf</h4>

<p>To be added.</p>

<h3>OverAll</h3>

<p>System Level Testing Framework.</p>

<h4>UnixBench</h4>

<p>Download the source file, then run it, and see the result.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># wget http://byte-unixbench.googlecode.com/files/UnixBench5.1.3.tgz
</span><span class='line'># tar xvf UnixBench5.1.3.tgz
</span><span class='line'># cd UnixBench
</span><span class='line'># make
</span><span class='line'># ./Run 2&gt;&1 | tee RunResult.txt</span></code></pre></td></tr></table></div></figure>


<h4>LMBench</h4>

<p><a href="http://www.bitmover.com/lmbench/">http://www.bitmover.com/lmbench/</a></p>

<p><a href="http://blog.csdn.net/dianhuiren/article/details/7331777">LM Usage</a></p>
]]></content>
  </entry>
  
</feed>
