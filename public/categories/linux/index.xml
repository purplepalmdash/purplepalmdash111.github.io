<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Dash</title>
    <link>http://purplepalmdash.github.io/categories/linux/</link>
    <description>Recent content in Linux on Dash</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Oct 2016 14:40:34 +0800</lastBuildDate>
    <atom:link href="http://purplepalmdash.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>MyHugo</title>
      <link>http://purplepalmdash.github.io/blog/2016/10/09/myhugo/</link>
      <pubDate>Sun, 09 Oct 2016 14:40:34 +0800</pubDate>
      
      <guid>http://purplepalmdash.github.io/blog/2016/10/09/myhugo/</guid>
      <description>&lt;p&gt;Since I switched from octopress to hugo, hugo is wonderful, but I get used to use
Octopress&amp;rsquo;s naming method. For example, if I create a new post in Octopress I&amp;rsquo;d rather
using following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rake new_post[&amp;quot;PostName&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then the generated post name would be something like following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $ ls -lt | more
total 3632
-rw-rw-r--  1 dash dash  5292 Apr  1  2016 2015-11-05-good-material.markdown
-rw-rw-r--  1 dash dash   540 Apr  1  2016 2016-01-04-purge-cloudstack-env.markdown
-rw-rw-r--  1 dash dash 22256 Apr  1  2016 2016-01-15-linux-tips-4.markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While hugo use the origin name, like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new post/ABC.md
$ ls -lt content/post | more
-rw-rw-r--  1 dash dash  5292 Apr  1  2016 ABC.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So I wrote a small script for using the same naming principle of Octopress:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat /usr/bin/myhugo 
    #!/bin/sh
    # Create post using hugo.
    hugo new post/$1.md
    # Add current date timestamp.
    mv content/post/$1.md content/post/`date --rfc-3339=date`-$1.md
    # Hint for editing.
    echo &amp;quot;Please Edit&amp;quot; $PWD/content/post/`date --rfc-3339=date`-$1.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now using myhugo for creating the post will be looked like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $ ~/myhugo WriteLeetCode
/home/dash/Code/purplepalmdash.github.io/content/post/WriteLeetCode.md created
Please Edit
/home/dash/Code/purplepalmdash.github.io/content/post/2016-10-09-WriteLeetCode.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enjoy the &lt;code&gt;rake new_post&lt;/code&gt;style post name!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OnYoutube dl</title>
      <link>http://purplepalmdash.github.io/blog/2016/09/08/onyoutube-dl/</link>
      <pubDate>Thu, 08 Sep 2016 12:00:39 +0800</pubDate>
      
      <guid>http://purplepalmdash.github.io/blog/2016/09/08/onyoutube-dl/</guid>
      <description>

&lt;h3 id=&#34;background&#34;&gt;Background&lt;/h3&gt;

&lt;p&gt;If you download a playlist on youtube, your download files would be renamed as
following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -l -h /mnt/golang
total 4.8G
-rwxr--r-- 1 dash root  62M Sep  7 18:43 &#39;Aerospike Install Linux-bw0eipI7-4s.mp4&#39;
-rwxr--r-- 1 dash root 9.8M Sep  7 22:48 &#39;App Enginge Domains-rNI_PyNuS2o.mp4&#39;
-rwxr--r-- 1 dash root  28M Sep  7 21:52 &#39;General Overview of Networking &amp;amp; The
Internet-hZ7cX4fpMk4.mp4&#39;
-rwxr--r-- 1 dash root  51M Sep  7 22:25 &#39;Golang Aerospike-symvVMJlC3g.mp4&#39;
-rwxr--r-- 1 dash root 134M Sep  7 20:19 &#39;Golang AJAX-UkEuYXi36o8.mp4&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;

&lt;p&gt;Manually download the playlist.txt from the webpage, something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat /mnt/golang/playlist.txt
Who uses golang
Installing Golang
Golang Webstorm &amp;amp; Golang Atom
Golang Hello World - Part 1 of 2
Golang Hello World - Part 2 of 2
Golang variables and scope
Golang Go Get
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use following shell script for rename all of the downloaded files:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat rr.sh
#!/bin/bash
i=0
while IFS=&#39;&#39; read -r line || [[ -n &amp;quot;$line&amp;quot; ]]; do
    let i++
    prefix=`printf &amp;quot;%04d-&amp;quot; $i`
    content=`ls | grep &amp;quot;$line-&amp;quot;`
    cp &amp;quot;$content&amp;quot; ../golang1/&amp;quot;$prefix$line&amp;quot;.mp4
done &amp;lt; ./playlist.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your renamed files will be in the ../golang1 directory, now the name is listed as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -l ../golang1   
total 4984936
-rwxr--r-- 1 dash root  28352757 Sep  8 11:52 &#39;0001-Who uses golang.mp4&#39;
-rwxr--r-- 1 dash root  51195540 Sep  8 11:52 &#39;0002-Installing Golang.mp4&#39;
-rwxr--r-- 1 dash root  27507302 Sep  8 11:52 &#39;0003-Golang Webstorm &amp;amp; Golang Atom.mp4&#39;
-rwxr--r-- 1 dash root  22430385 Sep  8 11:52 &#39;0004-Golang Hello World - Part 1 of 2.mp4&#39;
-rwxr--r-- 1 dash root  37552977 Sep  8 11:52 &#39;0005-Golang Hello World - Part 2 of 2.mp4&#39;
-rwxr--r-- 1 dash root  27800500 Sep  8 11:52 &#39;0006-Golang variables and scope.mp4&#39;
-rwxr--r-- 1 dash root  19457050 Sep  8 11:52 &#39;0007-Golang Go Get.mp4&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>RHEL Working Tips</title>
      <link>http://purplepalmdash.github.io/blog/2016/09/05/rhel-working-tips/</link>
      <pubDate>Mon, 05 Sep 2016 10:42:24 +0800</pubDate>
      
      <guid>http://purplepalmdash.github.io/blog/2016/09/05/rhel-working-tips/</guid>
      <description>

&lt;h3 id=&#34;subscrition-manager&#34;&gt;Subscrition Manager&lt;/h3&gt;

&lt;p&gt;After install RHEL7, we could register it first:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# subscription-manager register
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List and register with the available pools:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# subscription-manager list --available --all
# subscription-manager subscribe --pool=XXXXXXXXX
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After registration, we could see all of the registered repos:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ subscription-manager repos --list
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;syncing-repos&#34;&gt;Syncing Repos&lt;/h3&gt;

&lt;p&gt;Because the openstack repo is the paid channel, skip for other options.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SendMessageToSlack</title>
      <link>http://purplepalmdash.github.io/blog/2016/08/03/sendmessagetoslack/</link>
      <pubDate>Wed, 03 Aug 2016 09:55:58 +0800</pubDate>
      
      <guid>http://purplepalmdash.github.io/blog/2016/08/03/sendmessagetoslack/</guid>
      <description>

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;p&gt;Mainly refers to:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://api.slack.com/incoming-webhooks&#34;&gt;https://api.slack.com/incoming-webhooks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.pragbits.com/it/2015/02/09/slack-notifications-via-curl/&#34;&gt;http://blog.pragbits.com/it/2015/02/09/slack-notifications-via-curl/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;incomming-webhooks&#34;&gt;Incomming webhooks&lt;/h3&gt;

&lt;p&gt;Create a incoming webhooks in:&lt;br /&gt;
&lt;a href=&#34;https://skyruntime.slack.com/apps/new/A0F7XDUAZ-incoming-webhooks&#34;&gt;https://skyruntime.slack.com/apps/new/A0F7XDUAZ-incoming-webhooks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_08_03_09_57_54_920x296.jpg&#34; alt=&#34;/images/2016_08_03_09_57_54_920x296.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After created the webhook use curl for sending out the direct message:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -X POST --data-urlencode &#39;payload={&amp;quot;channel&amp;quot;: &amp;quot;#general&amp;quot;, &amp;quot;username&amp;quot;:
&amp;quot;webhookbot&amp;quot;, &amp;quot;text&amp;quot;: &amp;quot;This is posted to #general and comes from a bot named
webhookbot.&amp;quot;, &amp;quot;icon_emoji&amp;quot;: &amp;quot;:ghost:&amp;quot;}&#39;
https://hooks.slack.com/services/xxxxxxxxxxxxxxxxxxxxxxxxxx
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;wrap-the-message&#34;&gt;Wrap the message&lt;/h3&gt;

&lt;p&gt;In Bash:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ proxychains4 curl -X POST --data-urlencode &#39;payload={&amp;quot;channel&amp;quot;: &amp;quot;#general&amp;quot;, &amp;quot;username&amp;quot;:
&amp;quot;webhookbot&amp;quot;, &amp;quot;text&amp;quot;: &amp;quot;&#39;$1&#39;&amp;quot;, &amp;quot;icon_emoji&amp;quot;: &amp;quot;:ghost:&amp;quot;}&#39;
https://hooks.slack.com/services/xxxxxxxxxxxxxxxxxxxxxxxxx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Turn it into a executable file under &lt;code&gt;bin&lt;/code&gt;, then you could use command like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ command1; sendSlack &#39;fcuk...&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Using Packer For Building VM Templates</title>
      <link>http://purplepalmdash.github.io/blog/2016/07/28/using-packer-for-building-vm-templates/</link>
      <pubDate>Thu, 28 Jul 2016 12:08:27 +0800</pubDate>
      
      <guid>http://purplepalmdash.github.io/blog/2016/07/28/using-packer-for-building-vm-templates/</guid>
      <description>

&lt;h3 id=&#34;background&#34;&gt;Background&lt;/h3&gt;

&lt;p&gt;Recently I am playing the jenkins and VM Templates, so I want to setup the CI(Continous
Integration) environment which could automatically finish the template building,
following are the tips on how to setup these environment and let everything working
together.&lt;/p&gt;

&lt;h3 id=&#34;using-makefile&#34;&gt;Using Makefile&lt;/h3&gt;

&lt;p&gt;boxcutter &lt;a href=&#34;https://github.com/boxcutter&#34;&gt;https://github.com/boxcutter&lt;/a&gt; has lots of
projects for packering the templates, directly clone them to local and run them, you
could get the standard vagrant box, which could be used via virtualbox/vmware/paralles.&lt;/p&gt;

&lt;p&gt;But what I wanna is the qemu images, or vhd files, which could be used under CloudStack/OpenStack, so I have to modify the Makefile and box system.&lt;/p&gt;

&lt;p&gt;Only build virtualbox, because we don&amp;rsquo;t have vmware/parallels hypervisor:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#BUILDER_TYPES ?= vmware virtualbox parallels
BUILDER_TYPES := virtualbox
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add libvirt box definition:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PARALLELS_BOX_FILES := $(foreach box_filename, $(PARALLELS_BOX_FILENAMES), $(PARALLELS_BOX_DIR)/$(box_filename))
LIBVIRT_BOX_DIR ?= box/libvirt
LIBVIRT_TEMPLATE_FILENAMES = $(TEMPLATE_FILENAMES)
LIBVIRT_BOX_FILENAMES := $(LIBVIRT_TEMPLATE_FILENAMES:.json=$(BOX_SUFFIX))
LIBVIRT_BOX_FILES := $(foreach box_filename, $(LIBVIRT_BOX_FILENAMES), $(LIBVIRT_BOX_DIR)/$(box_filename))
BOX_FILES := $(LIBVIRT_BOX_FILES)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using qemu for building the templates:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#box/virtualbox/%$(BOX_SUFFIX): %.json http/preseed.cfg
box/libvirt/%$(BOX_SUFFIX): %.json http/preseed.cfg
	bin/box build $&amp;lt; qemu
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Build options:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#all: build assure deliver
all: build

build: $(BOX_FILES)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now by &lt;code&gt;make&lt;/code&gt; you could make out the vagrant libvirt box.&lt;/p&gt;

&lt;h3 id=&#34;json-preseeding-and-scripts&#34;&gt;JSON, Preseeding and Scripts&lt;/h3&gt;

&lt;p&gt;Just some tips under this chapter during building.&lt;/p&gt;

&lt;h4 id=&#34;using-custom-mirror&#34;&gt;Using Custom Mirror&lt;/h4&gt;

&lt;p&gt;Following use &lt;code&gt;mirrors.aliyun.com/ubuntu&lt;/code&gt; for installation and use a apt-mirror proxy.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#Use mirror
d-i apt-setup/use_mirror boolean true
d-i     mirror/country          string manual
d-i mirror/protocol	string http
d-i mirror/http/hostname	string mirrors.aliyun.com
d-i mirror/http/directory	string /ubuntu
choose-mirror-bin mirror/http/proxy string http://192.168.1.69:3142/
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;partition-one-partition&#34;&gt;Partition(One Partition)&lt;/h4&gt;

&lt;p&gt;Only one partition which includes all of the filesystem(no swap partition):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Partition
d-i partman-auto/disk string /dev/vda
d-i partman-auto/method string regular
d-i partman-basicfilesystems/no_swap boolean false
d-i partman-auto/expert_recipe string root :: 1000 50 -1 ext4 \
     $primary{ } $bootable{ } method{ format } \
     format{ } use_filesystem{ } filesystem{ ext4 } \
     mountpoint{ / } \
    .
d-i partman-auto/choose_recipe select root
d-i partman/choose_partition select Finish partitioning and write changes to disk
d-i partman/confirm boolean true
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;permit-root-login-in&#34;&gt;Permit Root Login In&lt;/h4&gt;

&lt;p&gt;Change the default configuration of &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;d-i preseed/late_command string \
in-target sed -i &#39;s/PermitRootLogin.*/PermitRootLogin yes/g&#39; /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;root-password&#34;&gt;Root Password&lt;/h4&gt;

&lt;p&gt;We can set the encrypted password or plain secret for root:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Root password, either in clear text
#d-i passwd/root-password password engine
#d-i passwd/root-password-again password engine
# or encrypted using an MD5 hash.
d-i passwd/root-password-crypted password gowguowueogahwehoehjwouweouhow
d-i user-setup/allow-password-weak boolean true
d-i passwd/make-user boolean true  #Set true so we could make oridinary user. 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While the encryted password could be generated via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using openssl passwd:
$ openssl passwd -1 &amp;quot;password here&amp;quot;
Using grub-crypt (you will be prompted to enter a password after running the command):
$ grub-crypt --md5
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;packer-s-json-configuration&#34;&gt;Packer&amp;rsquo;s json configuration&lt;/h3&gt;

&lt;p&gt;The json configuration for importing qemu:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    {
      &amp;quot;boot_command&amp;quot;: [
        &amp;quot;{{ user `boot_command_prefix` }}&amp;quot;,
        &amp;quot;/install/vmlinuz noapic &amp;quot;,
        &amp;quot;initrd=/install/initrd.gz &amp;quot;,
        &amp;quot;file=/floppy/{{ user `preseed` }} &amp;quot;,
        &amp;quot;debian-installer=en_US auto locale=en_US kbd-chooser/method=us &amp;quot;,
        &amp;quot;hostname={{ user `hostname` }} &amp;quot;,
        &amp;quot;grub-installer/bootdev=/dev/vda&amp;lt;wait&amp;gt; &amp;quot;,
        &amp;quot;fb=false debconf/frontend=noninteractive &amp;quot;,
        &amp;quot;keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA &amp;quot;,
        &amp;quot;keyboard-configuration/variant=USA console-setup/ask_detect=false &amp;quot;,
        &amp;quot;passwd/user-fullname={{ user `ssh_fullname` }} &amp;quot;,
        &amp;quot;passwd/user-password={{ user `ssh_password` }} &amp;quot;,
        &amp;quot;passwd/user-password-again={{ user `ssh_password` }} &amp;quot;,
        &amp;quot;passwd/username={{ user `ssh_username` }} &amp;quot;,
        &amp;quot;-- &amp;lt;enter&amp;gt;&amp;quot;
      ],
      &amp;quot;disk_size&amp;quot;: &amp;quot;{{ user `disk_size` }}&amp;quot;,
      &amp;quot;floppy_files&amp;quot;: [
        &amp;quot;http/{{ user `preseed` }}&amp;quot;
      ],
      &amp;quot;boot_wait&amp;quot;: &amp;quot;10s&amp;quot;,
      &amp;quot;headless&amp;quot;: &amp;quot;{{ user `headless` }}&amp;quot;,
      &amp;quot;iso_checksum&amp;quot;: &amp;quot;{{ user `iso_checksum` }}&amp;quot;,
      &amp;quot;iso_checksum_type&amp;quot;: &amp;quot;{{ user `iso_checksum_type` }}&amp;quot;,
      &amp;quot;iso_urls&amp;quot;: [
        &amp;quot;{{ user `iso_path` }}/{{ user `iso_name` }}&amp;quot;,
        &amp;quot;{{ user `iso_url` }}&amp;quot;
      ],
      &amp;quot;output_directory&amp;quot;: &amp;quot;output-{{ user `vm_name` }}-qemu-iso&amp;quot;,
      &amp;quot;shutdown_command&amp;quot;: &amp;quot;echo &#39;{{ user `ssh_password` }}&#39;|sudo -S shutdown -P now&amp;quot;,
      &amp;quot;ssh_password&amp;quot;: &amp;quot;{{ user `ssh_password` }}&amp;quot;,
      &amp;quot;ssh_username&amp;quot;: &amp;quot;{{ user `ssh_username` }}&amp;quot;,
      &amp;quot;ssh_wait_timeout&amp;quot;: &amp;quot;10000s&amp;quot;,
      &amp;quot;type&amp;quot;: &amp;quot;qemu&amp;quot;,
      &amp;quot;format&amp;quot;: &amp;quot;qcow2&amp;quot;,
      &amp;quot;disk_interface&amp;quot;: &amp;quot;virtio&amp;quot;,
      &amp;quot;accelerator&amp;quot;: &amp;quot;kvm&amp;quot;,
      &amp;quot;vm_name&amp;quot;: &amp;quot;{{user `vm_name`}}&amp;quot;
    },
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Post-processors for generating vhd:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  &amp;quot;post-processors&amp;quot;: [
    {
      &amp;quot;output&amp;quot;: &amp;quot;box/vhd/{{user `vm_name`}}-{{user `cm`}}{{user `cm_version`}}-{{user `version`}}&amp;quot;,
      &amp;quot;type&amp;quot;: &amp;quot;vhd&amp;quot;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Post-postcessors for generating box file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  &amp;quot;post-processors&amp;quot;: [
    {
      &amp;quot;keep_input_artifact&amp;quot;: false,
      &amp;quot;output&amp;quot;: &amp;quot;box/{{.Provider}}/{{user `vm_name`}}-{{user `cm`}}{{user `cm_version`}}-{{user `version`}}.box&amp;quot;,
      &amp;quot;type&amp;quot;: &amp;quot;vagrant&amp;quot;,
      &amp;quot;vagrantfile_template&amp;quot;: &amp;quot;{{ user `vagrantfile_template` }}&amp;quot;
    }
  ],
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In some system which have lower memory, packer building will fail, because it will generating large
file under &lt;code&gt;/tmp&lt;/code&gt; directory, so we have to change the default PAKCER TMP via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir ./tmp
$ export PACKER_TMP=./tmp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By setting up the TMP file we could do building without any error.&lt;/p&gt;

&lt;h3 id=&#34;scripts&#34;&gt;scripts&lt;/h3&gt;

&lt;h4 id=&#34;network-manager-start-manually&#34;&gt;Network Manager Start Manually&lt;/h4&gt;

&lt;p&gt;By setting following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo echo &amp;quot;manual&amp;quot; | sudo tee /etc/init/network-manager.override
$ sudo /bin/sed -i &amp;quot;\$i sudo start network-manager&amp;quot; /etc/rc.local
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;upgrade&#34;&gt;Upgrade&lt;/h4&gt;

&lt;p&gt;For avoiding signature error, do following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# avoiding hashchecksum error. 
rm -rf /var/lib/apt/lists/*

# apt-get update does not actually perform updates, it just downloads and indexes the list of packages
apt-get -y update
apt-get -y upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;hvc0-terminal&#34;&gt;hvc0 terminal&lt;/h4&gt;

&lt;p&gt;XenServer use hvc0 for tty, so we have to manually configure its login:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Fix bug, no hvc0, then you won&#39;t get tty1 working under vnc
    echo &#39;start on stopped rc RUNLEVEL=[2345] and (&#39; &amp;gt; /etc/init/hvc0.conf
    echo &#39;not-container or&#39; &amp;gt;&amp;gt; /etc/init/hvc0.conf
    echo &#39;container CONTAINER=lxc or&#39; &amp;gt;&amp;gt; /etc/init/hvc0.conf
    echo &#39;container CONTAINER=lxc-libvirt)&#39; &amp;gt;&amp;gt; /etc/init/hvc0.conf
    echo &#39;stop on runlevel [!2345]&#39; &amp;gt;&amp;gt; /etc/init/hvc0.conf
    echo &#39;respawn&#39; &amp;gt;&amp;gt; /etc/init/hvc0.conf
    echo &#39;exec /sbin/getty -L hvc0 9600 linux&#39; &amp;gt;&amp;gt; /etc/init/hvc0.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After these modifications, now we could generate vhd file or vagrant-libvirt box files using Makefile.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>编译Packer及其插件</title>
      <link>http://purplepalmdash.github.io/blog/2016/07/21/%E7%BC%96%E8%AF%91packer%E5%8F%8A%E5%85%B6%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Thu, 21 Jul 2016 21:12:27 +0800</pubDate>
      
      <guid>http://purplepalmdash.github.io/blog/2016/07/21/%E7%BC%96%E8%AF%91packer%E5%8F%8A%E5%85%B6%E6%8F%92%E4%BB%B6/</guid>
      <description>

&lt;h3 id=&#34;install-go&#34;&gt;Install Go&lt;/h3&gt;

&lt;p&gt;In ArchLinux, do following for installing and configurating go:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim ~/.bash_profile
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Exit the terminal and relogin again, now you could verify your GOPATH and golang System Path.&lt;/p&gt;

&lt;p&gt;Install go in ArchLinux via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pacman -S go
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;installing-dev-packer&#34;&gt;Installing Dev Packer&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>使用Jenkins/PackerIO自动化编译虚拟机镜像</title>
      <link>http://purplepalmdash.github.io/blog/2016/07/18/%E4%BD%BF%E7%94%A8jenkins/packerio%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BC%96%E8%AF%91%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%95%9C%E5%83%8F/</link>
      <pubDate>Mon, 18 Jul 2016 14:53:58 +0800</pubDate>
      
      <guid>http://purplepalmdash.github.io/blog/2016/07/18/%E4%BD%BF%E7%94%A8jenkins/packerio%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BC%96%E8%AF%91%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%95%9C%E5%83%8F/</guid>
      <description>

&lt;h3 id=&#34;gitlab仓库&#34;&gt;GitLab仓库&lt;/h3&gt;

&lt;p&gt;在前面搭建的GitLab里创建一个新仓库，用于存储Packer.io脚本。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_07_18_14_57_26_995x911.jpg&#34; alt=&#34;/images/2016_07_18_14_57_26_995x911.jpg&#34; /&gt;&lt;br /&gt;
在编译机器的仓库里，运行以下命令，添加自己到新创建的仓库里:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd existing_folder
$ git init
$ git remote add origin http://192.168.1.79:10080/root/BuildUbuntu.git
$ git add .
$ git commit
$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;提交完毕之后，在GitLab服务器上就可以看到新添加的代码了。&lt;/p&gt;

&lt;h3 id=&#34;jenkins配置&#34;&gt;Jenkins配置&lt;/h3&gt;

&lt;p&gt;在Jenkins里创建一个新项目，选择&lt;code&gt;Freestyle Project&lt;/code&gt;， 默认创建完毕。&lt;/p&gt;

&lt;p&gt;在源代码管理的设置中，填入以下的条目:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_07_18_15_07_28_1366x467.jpg&#34; alt=&#34;/images/2016_07_18_15_07_28_1366x467.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Build Trigger&lt;/code&gt;中我们选择由GitLab触发：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_07_18_15_13_31_1154x436.jpg&#34; alt=&#34;/images/2016_07_18_15_13_31_1154x436.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在GitLab中我们需要添加相应的钩子(WebHook):&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_07_18_15_15_11_452x602.jpg&#34; alt=&#34;/images/2016_07_18_15_15_11_452x602.jpg&#34; /&gt;&lt;br /&gt;
设置:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_07_18_15_16_30_1044x427.jpg&#34; alt=&#34;/images/2016_07_18_15_16_30_1044x427.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;添加Build脚本(选择execute shell):&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_07_18_15_24_00_358x581.jpg&#34; alt=&#34;/images/2016_07_18_15_24_00_358x581.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;配置完毕后，就可以通过点击&lt;code&gt;Build Now&lt;/code&gt;来编译Packer.io工程了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>用Travis CI发布Hugo博客</title>
      <link>http://purplepalmdash.github.io/blog/2016/07/07/%E7%94%A8travis-ci%E5%8F%91%E5%B8%83hugo%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 07 Jul 2016 15:59:09 +0800</pubDate>
      
      <guid>http://purplepalmdash.github.io/blog/2016/07/07/%E7%94%A8travis-ci%E5%8F%91%E5%B8%83hugo%E5%8D%9A%E5%AE%A2/</guid>
      <description>

&lt;h3 id=&#34;背景&#34;&gt;背景&lt;/h3&gt;

&lt;p&gt;在前面的文章
&lt;a href=&#34;http://purplepalmdash.github.io/2016/07/04/using-hugo/&#34;&gt;Using hugo&lt;/a&gt;中我已经完成了从
Octopress到Hugo博客构建引擎的迁移，这篇文章将讲述如何进一步简化博客从撰写到发布的流程。
主要使用了Travis CI和Github Page.&lt;/p&gt;

&lt;p&gt;如果没有Travis帐号的，可以到&lt;a href=&#34;https://travis-ci.org/&#34;&gt;Travis-ci&lt;/a&gt;注册一个，也可以使用
github帐号连接使用。&lt;/p&gt;

&lt;h3 id=&#34;github-pages&#34;&gt;github pages&lt;/h3&gt;

&lt;p&gt;Github的pages遵循的命名原则非常简单，如果github在用户的账户下发现一个名字为
&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;的仓库，那它会将这个仓库的&lt;code&gt;master&lt;/code&gt;分支里的内容映射到
&lt;code&gt;http://&amp;lt;username&amp;gt;.github.io&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;以下创建出了一个名字为&lt;code&gt;purplepalmdash.github.io&lt;/code&gt;的github仓库, 并将hugo生成的&lt;code&gt;public/&lt;/code&gt;目
录下的所有内容(即整个静态网站)上传到了github。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:purplepalmdash/purplepalmdash.github.io.git
$ cp -r public/* purplepalmdash.github.io/
$ cd purplepalmdash.github.io
$ git add --all
$ git commit -m &amp;quot;First commit under hugo&amp;quot;
$ git push
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这时打开浏览器，访问&lt;code&gt;http://purplepalmdash.github.io&lt;/code&gt;就可以看到上传后的静态网站。&lt;/p&gt;

&lt;h3 id=&#34;github-pages代码分支&#34;&gt;github pages代码分支&lt;/h3&gt;

&lt;p&gt;仅仅拥有master分支用来存储静态网站是不够的，我们还需要创建一个用于存放网站源代码的
&lt;code&gt;source&lt;/code&gt;分支。以下命令创建出&lt;code&gt;source&lt;/code&gt;分支，并上传了hugo源代码内容.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd purplepalmdash.github.io
$ git checkout -b source
$ rm -rf *
$ cp -r ~/blog_source/* ./
$ git add --all
$ git commit -m &amp;quot;First commit for source code&amp;quot;
$ git push --set-upstream origin source
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在我们已经把源代码和生成的网站放在同一个仓库的不同分支了。&lt;/p&gt;

&lt;h3 id=&#34;使用travis自动生成网站&#34;&gt;使用travis自动生成网站&lt;/h3&gt;

&lt;h4 id=&#34;仓库设置&#34;&gt;仓库设置&lt;/h4&gt;

&lt;p&gt;如果每次都需要执行上述的操作来更新网站的话，那就显得太笨拙且太费时了。手动来执行的话我
们不得不在不同的分支之间切换。幸运的是travis可以自动化上述的操作。&lt;/p&gt;

&lt;p&gt;我们的目的是，任何提交给&lt;code&gt;source&lt;/code&gt;分支的改动，将触发出travis-ci里对网站的重新生成过程，并
把生成后的新的静态网站提交到github page上的&lt;code&gt;master&lt;/code&gt;分支。&lt;/p&gt;

&lt;p&gt;在travis-ci中，将&lt;code&gt;purplepalmdash.github.io&lt;/code&gt;仓库加到travis-ci:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_07_07_16_27_51_414x353.jpg&#34; alt=&#34;/images/2016_07_07_16_27_51_414x353.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;加入该仓库后，在Settings选项下，激活&lt;code&gt;Build only if .travis.yml is present&lt;/code&gt;和&lt;code&gt;Build
pushes&lt;/code&gt;选项:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_07_07_16_30_06_927x311.jpg&#34; alt=&#34;/images/2016_07_07_16_30_06_927x311.jpg&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;travis-yml文件设置&#34;&gt;.travis.yml文件设置&lt;/h4&gt;

&lt;p&gt;接下来我们需要在&lt;code&gt;source&lt;/code&gt;分支创建&lt;code&gt;.travis.yml&lt;/code&gt;文件，在这个文件中，我们将给予travis权限用
于推送仓库。使用&lt;code&gt;ssh-keygen&lt;/code&gt;可以创建出新的ssh key， 为了简单起见，我使用本机上已经有的
ssh key， 位置在&lt;code&gt;~/.ssh/&lt;/code&gt;下，文件名分别为&lt;code&gt;id_rsa&lt;/code&gt;和&lt;code&gt;id_rsa.pub&lt;/code&gt;。我们将使用&lt;code&gt;id_rsa&lt;/code&gt;文件
作为travis的认证, 以下是步骤.&lt;/p&gt;

&lt;p&gt;首先安装travis(ruby需要事先安装):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gem install travis
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在仓库中生成&lt;code&gt;.travis.yml&lt;/code&gt;文件， 这里是使用&lt;code&gt;id_rsa&lt;/code&gt;生成加密后的&lt;code&gt;id_rsa.enc&lt;/code&gt;文件:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git checkout source
$ touch .travis.yml
$ travis login --org
$ cp ~/.ssh/id_rsa ./
$ travis encrypt-file id_rsa --add
$ rm -f ./id_rsa
$ ls -l id_rsa.enc
-rw-r--r-- 1 dash root 1680 Jul  7 11:18 id_rsa.enc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为&lt;code&gt;id_rsa.pub&lt;/code&gt;已经被添加到github的无密码认证中，又因为我的travis-ci和github共享用户名
，所以无需对&lt;code&gt;id_rsa.pub&lt;/code&gt;做其他动作。&lt;/p&gt;

&lt;p&gt;如果是travis-ci的私有仓库，则需要手动添加&lt;code&gt;id_rsa.pub&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;到这里，travis已经有了对&lt;code&gt;master&lt;/code&gt;分支推送的权限，这种推送动作将被提交给&lt;code&gt;source&lt;/code&gt;的任何改
动所触发。这里我们需要告诉travis如何编译出网站。以下是我的&lt;code&gt;.travis.yml&lt;/code&gt;例子，供参考.&lt;/p&gt;

&lt;h4 id=&#34;travis-yml例子&#34;&gt;.travis.yml例子&lt;/h4&gt;

&lt;p&gt;以下是本站的&lt;code&gt;.travis.yml&lt;/code&gt;例子：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;language: go

go:
    - 1.6

env:
    global:
        - SSH_KEY=&amp;quot;id_rsa&amp;quot;
        - GIT_NAME=&amp;quot;purplepalmdash&amp;quot;
        - GIT_EMAIL=&amp;quot;purplepalm@gmail.com&amp;quot;
        - SOURCE_DIR=&amp;quot;public&amp;quot;
        - DEPLOY_BRANCH=&amp;quot;source&amp;quot;
git:
    submodules: false

before_install:
    - openssl aes-256-cbc -K $encrypted_b37d26c66aa0_key -iv $encrypted_b37d26c66aa0_iv -in id_rsa.enc -out id_rsa -d

install:
    - go get -u -v github.com/spf13/hugo

script:
    - git https://github.com/rcoedo/hugo-steam-theme ./themes/hugo-steam-theme
    - hugo

after_success:
    - echo &amp;quot;purplepalmdash.github.io&amp;quot; &amp;gt; ./public/CNAME
    - ./scripts/deploy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;scripts-deploy-sh&#34;&gt;scripts/deploy.sh&lt;/h3&gt;

&lt;p&gt;这个代码是直接拷贝别人的。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
set -e

# Deploy built docs to this branch
TARGET_BRANCH=master
 
if [ ! -d &amp;quot;$SOURCE_DIR&amp;quot; ]; then
  echo &amp;quot;SOURCE_DIR ($SOURCE_DIR) does not exist, build the source directory before deploying&amp;quot;
  exit 1
fi
 
REPO=$(git config remote.origin.url)
 
if [ -n &amp;quot;$TRAVIS_BUILD_ID&amp;quot; ]; then
  # When running on Travis we need to use SSH to deploy to GitHub
  #
  # The following converts the repo URL to an SSH location,
  # decrypts the SSH key and sets up the Git config with
  # the correct user name and email (globally as this is a
  # temporary travis environment)
  #
  # Set the following environment variables in the travis configuration (.travis.yml)
  #
  #   DEPLOY_BRANCH    - The only branch that Travis should deploy from
  #   ENCRYPTION_LABEL - The label assigned when encrypting the SSH key using travis encrypt-file
  #   GIT_NAME         - The Git user name
  #   GIT_EMAIL        - The Git user email
  #
  echo DEPLOY_BRANCH: $DEPLOY_BRANCH
  echo ENCRYPTION_LABEL: $ENCRYPTION_LABEL
  echo GIT_NAME: $GIT_NAME
  echo GIT_EMAIL: $GIT_EMAIL
  if [ &amp;quot;$TRAVIS_BRANCH&amp;quot; != &amp;quot;$DEPLOY_BRANCH&amp;quot; ]; then
    echo &amp;quot;Travis should only deploy from the DEPLOY_BRANCH ($DEPLOY_BRANCH) branch&amp;quot;
    exit 0
  else
    if [ &amp;quot;$TRAVIS_PULL_REQUEST&amp;quot; != &amp;quot;false&amp;quot; ]; then
      echo &amp;quot;Travis should not deploy from pull requests&amp;quot;
      exit 0
    else
      # switch both git and https protocols as we don&#39;t know which travis
      # is using today (it changed!)
      REPO=${REPO/git:\/\/github.com\//git@github.com:}
      REPO=${REPO/https:\/\/github.com\//git@github.com:}
      
      chmod 600 $SSH_KEY
      eval `ssh-agent -s`
      ssh-add $SSH_KEY
      git config --global user.name &amp;quot;$GIT_NAME&amp;quot;
      git config --global user.email &amp;quot;$GIT_EMAIL&amp;quot;
    fi
  fi
fi
 
REPO_NAME=$(basename $REPO)
TARGET_DIR=$(mktemp -d /tmp/$REPO_NAME.XXXX)
REV=$(git rev-parse HEAD)
git clone --branch ${TARGET_BRANCH} ${REPO} ${TARGET_DIR}
rsync -rt --delete --exclude=&amp;quot;.git&amp;quot; --exclude=&amp;quot;.travis.yml&amp;quot; $SOURCE_DIR/ $TARGET_DIR/
cd $TARGET_DIR
git add -A .
git commit --allow-empty -m &amp;quot;Built from commit $REV&amp;quot;
git push $REPO $TARGET_BRANCH

git config --global user.name &amp;quot;$GIT_NAME&amp;quot;
git config --global user.email &amp;quot;$GIT_EMAIL&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在万事就绪了，每一次对&lt;code&gt;source&lt;/code&gt;的提交都将触发travis-ci对整个网站的重构，并推送改动到
&lt;code&gt;master&lt;/code&gt;分支后，更新完成以后，&lt;code&gt;purplepalmdash.github.io&lt;/code&gt;看到的就是更新后的内容。&lt;/p&gt;

&lt;p&gt;Enjoy it!!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using hugo</title>
      <link>http://purplepalmdash.github.io/2016/07/04/using-hugo/</link>
      <pubDate>Mon, 04 Jul 2016 15:36:43 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/07/04/using-hugo/</guid>
      <description>

&lt;p&gt;For switching my blogging engine from octopress to hugo, following are the steps.&lt;/p&gt;

&lt;h3 id=&#34;installing-go&#34;&gt;Installing GO&lt;/h3&gt;

&lt;p&gt;ArchLinux installation is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pacman -S go
$ mkdir -p ~/go/{bin,src}
$ export GOPATH=~/go
$ export PATH=&amp;quot;$PATH:$GOPATH/bin&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-hugo&#34;&gt;Get Hugo&lt;/h3&gt;

&lt;p&gt;Hugo could be fetched directly from github, install it via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ Notice you have to use redsocks!
$ go get -u -v github.com/spf13/hugo
$ which hugo
/home/vagrant/go/bin/hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;first-blog&#34;&gt;First Blog&lt;/h3&gt;

&lt;p&gt;Create a new site:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site myblog
$ tree myblog
myblog/
|-- archetypes
|-- config.toml
|-- content
|-- data
|-- layouts
|-- static
`-- themes

6 directories, 1 file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Creat a new blog:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new post/hello.md
$ vim /home/vagrant/Code/myblog/content/post/hello.md
$ cd themes/
    git clone git@github.com:dim0627/hugo_theme_beg.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run preview of the blog:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server -w --theme=hugo_theme_beg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now open browser for visiting `&lt;a href=&#34;http://localhost:1313&amp;quot;&#34;&gt;http://localhost:1313&amp;quot;&lt;/a&gt;, you could see:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_07_04_16_35_26_464x401.jpg&#34; alt=&#34;/images/2016_07_04_16_35_26_464x401.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;import-from-octopress&#34;&gt;Import From Octopress&lt;/h3&gt;

&lt;p&gt;Import from existing Octopress via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo import jekyll /home/dash/Code/NewBlog/source hugodash
Importing...
Congratulations! 720 post(s) imported!
....
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A little tricky for changing the categories definitions:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd hugodash/content/post
$ vim change.sh
$ chmod 777 change.sh
$ ./change.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The content of the change.sh is listed as following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
for i in `ls ./*.markdown`
do
	# Generate the modified result, like categories: &amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;
	replaceline=`grep -i &amp;quot;categories:&amp;quot; $i|awk
&#39;{for(i=2;i&amp;lt;=NF;i++){if(i!=NF){$i=&amp;quot;\&amp;quot;&amp;quot;$i&amp;quot;\&amp;quot;&amp;quot;&amp;quot;,&amp;quot;}else{$i=&amp;quot;\&amp;quot;&amp;quot;$i&amp;quot;\&amp;quot;&amp;quot;}}}1&#39;`
	sed -i &amp;quot;2s|.*|$replaceline|&amp;quot; $i
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then run following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sed -i &#39;2s/\(:[[:blank:]]*\)\(.*\)/\1[\2]/&#39; *.markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now check your categories:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ grep -i &amp;quot;categories:&amp;quot; ./ -r
./2015-03-12-maas-deploy-3.markdown:categories: [&amp;quot;Virtualization&amp;quot;]
./2016-03-31-nodemcu-and-1602i2c.markdown:categories: [&amp;quot;embedded&amp;quot;]
....
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this format could our markdown files be analyzied via new theme.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd hugodash/themes
$ git clone https://github.com/zyro/hyde-x
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Preview the generated website via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd hugodash
$ hugo server --theme=hyde-x
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now open your browser and view &lt;code&gt;http://localhost:1313&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;publishment&#34;&gt;Publishment&lt;/h3&gt;

&lt;p&gt;Some work tips:&lt;/p&gt;

&lt;p&gt;Remove all of the fucking &lt;code&gt;codeblock&lt;/code&gt; in markdown:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sed -i -- &#39;s|{% endcodeblock%}|\`\`\`|&#39; *.markdown
$ sed -i -- &#39;s|{% codeblock *.*%}|\`\`\`|&#39; *.markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Remove all of the fucking backtick with language extended in markdown:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sed -i -r -e &#39;s|^\`\`\`.*|\`\`\`|&#39; *.markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now all of the syntax hightlight is OK.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>搭建基于docker的监控系统</title>
      <link>http://purplepalmdash.github.io/2016/06/20/da-jian-ji-yu-dockerde-jian-kong-xi-tong/</link>
      <pubDate>Mon, 20 Jun 2016 09:39:55 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/06/20/da-jian-ji-yu-dockerde-jian-kong-xi-tong/</guid>
      <description>

&lt;h3 id=&#34;graphite-grafana&#34;&gt;Graphite/Grafana&lt;/h3&gt;

&lt;p&gt;这两个用于记录和展示监控数据，通过以下命令可以快速搭建:&lt;/p&gt;

&lt;h4 id=&#34;graphite&#34;&gt;Graphite&lt;/h4&gt;

&lt;p&gt;开启容器:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir -p /local/path/to/graphite/storage/whisper/
$ sudo docker run -d \
  --name graphite \
  -p 8080:80 \
  -p 2003:2003 \
  -v /local/path/to/.htpasswd:/etc/nginx/.htpasswd \
  -v /local/path/to/graphite/storage/whisper:/opt/graphite/storage/whisper \
  sitespeedio/graphite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建htpasswd文件的方法可以参阅:&lt;br /&gt;
&lt;a href=&#34;http://httpd.apache.org/docs/2.2/programs/htpasswd.html&#34;&gt;http://httpd.apache.org/docs/2.2/programs/htpasswd.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;当然如果你使用默认的密码的话，用户名/密码是:guest/guest.&lt;/p&gt;

&lt;h4 id=&#34;grafana&#34;&gt;Grafana&lt;/h4&gt;

&lt;p&gt;开启容器:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mkdir -p /local/path/to/grafana
# docker run -d -p 3000:3000 --name=grafana -v /local/path/to/grafana:/var/lib/grafana  grafana/grafana
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;默认用户名/密码为admin/admin.&lt;/p&gt;

&lt;h3 id=&#34;collectd&#34;&gt;Collectd&lt;/h3&gt;

&lt;p&gt;用于采集节点机上的数据，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# docker run -d --net=host --privileged -v /:/hostfs:ro --name=collectd -e \
HOST_NAME=localhost -e \
GRAPHITE_HOST=192.168.1.79 andreasjansson/collectd-write-graphite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参数说明:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;--net=host : 	使用主机上的网络配置
GRAPHITE_HOST:  前面设置的graphite机器的地址
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;systemd-启动方式&#34;&gt;systemd 启动方式&lt;/h3&gt;

&lt;p&gt;collectd启动方式:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vim /usr/lib/systemd/system/collectddocker.service
[Unit]
Description=collectd container
Requires=docker.service
After=docker.service

[Service]
Restart=always
ExecStart=/usr/bin/docker start -a collectd
ExecStop=/usr/bin/docker stop -t 2 collectd

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动并使能服务:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl enable collectddocker.service
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>搭建无盘CentOS桌面环境</title>
      <link>http://purplepalmdash.github.io/2016/06/18/da-jian-wu-pan-centoszhuo-mian-huan-jing/</link>
      <pubDate>Sat, 18 Jun 2016 13:43:48 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/06/18/da-jian-wu-pan-centoszhuo-mian-huan-jing/</guid>
      <description>

&lt;h3 id=&#34;网络准备&#34;&gt;网络准备&lt;/h3&gt;

&lt;p&gt;创建一个无DHCP的网络:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_06_18_13_53_06_399x429.jpg&#34; alt=&#34;/images/2016_06_18_13_53_06_399x429.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;DHCP服务器我们将配置在PXE服务器节点上。&lt;/p&gt;

&lt;h3 id=&#34;pxe节点配置&#34;&gt;PXE节点配置&lt;/h3&gt;

&lt;h4 id=&#34;初始化配置&#34;&gt;初始化配置&lt;/h4&gt;

&lt;p&gt;最小化安装CentOS 7 Server。并配置其IP地址为&lt;code&gt;10.19.20.2&lt;/code&gt;.&lt;br /&gt;
关闭selinux和firewalld服务:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /etc/selinux/config 
SELINUX=disabled

# systemctl disable firewalld.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;使用dvd作为源&#34;&gt;使用DVD作为源&lt;/h4&gt;

&lt;p&gt;创建挂载目录并挂在DVD：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mkdir /cdrom
# mount -t iso9660 -o loop ./CentOS-7-x86_64-Everything-1511.iso /cdrom/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建新的repo文件:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /etc/yum.repos.d/local.repo

[LocalRepo]
name=Local Repository
baseurl=file:///cdrom
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成新的缓存：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mkdir back
# mv CentOS-* back
# yum makecache
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装一些必要的包:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum install -y vim wget
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;tftp-server&#34;&gt;TFTP Server&lt;/h4&gt;

&lt;p&gt;安装必要的包:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum -y install syslinux xinetd tftp-server
# mkdir /var/lib/tftpboot/pxelinux.cfg 
# cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置PXE：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vim /etc/xinetd.d/tftp 
disable = no
# systemctl start xinetd
# systemctl enable xinetd
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;dhcp服务器&#34;&gt;DHCP服务器&lt;/h4&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum install -y dhcp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vim /etc/dhcp/dhcpd.conf
    #
    # DHCP Server Configuration file.
    #   see /usr/share/doc/dhcp*/dhcpd.conf.example
    #   see dhcpd.conf(5) man page
    #
    # create new
    
    # specify domain name
    option domain-name &amp;quot;srv.world&amp;quot;;
    # specify name server&#39;s hostname or IP address
    option domain-name-servers dlp.srv.world;
    # default lease time
    default-lease-time 600;
    # max lease time
    max-lease-time 7200;
    # this DHCP server to be declared valid
    authoritative;
    # specify network address and subnet mask
    subnet 10.19.20.0 netmask 255.255.255.0 {
        # specify the range of lease IP address
        range dynamic-bootp 10.19.20.200 10.19.20.254;
        # specify broadcast address
        option broadcast-address 10.19.20.255;
        # specify default gateway
        option routers 10.19.20.1;
        option domain-name-servers   10.19.20.2;
        filename        &amp;quot;pxelinux.0&amp;quot;;
        next-server     10.19.20.2;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动并使能服务:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# systemctl start dhcpd 
# systemctl enable dhcpd 
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;pxe服务器&#34;&gt;PXE服务器&lt;/h4&gt;

&lt;p&gt;安装一些必要的包:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum -y install dracut-network nfs-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在PXE服务器上构建一个无盘系统用的文件系统&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mkdir -p /var/lib/tftpboot/centos7/root 
# yum groups -y install &amp;quot;Server with GUI&amp;quot; --releasever=7 --installroot=/var/lib/tftpboot/centos7/root/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;给出root用户的默认密码:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# python -c &#39;import crypt,getpass; \ 
print(crypt.crypt(getpass.getpass(), \
crypt.mksalt(crypt.METHOD_SHA512)))&#39; 
Password:
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;填入root密码到/etc/shadown中:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vim /var/lib/tftpboot/centos7/root/etc/shadow
root:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx:16372:0:99999:7:::
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;构建&lt;code&gt;/etc/fstab&lt;/code&gt;文件:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /var/lib/tftpboot/centos7/root/etc/fstab
 none    /tmp        tmpfs   defaults   0 0
tmpfs   /dev/shm    tmpfs   defaults   0 0
sysfs   /sys        sysfs   defaults   0 0
proc    /proc       proc    defaults   0 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下载pxe所需要的vmlinuz和initrd.img文件:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# wget -P /var/lib/tftpboot/centos7/ \
http://mirrors.aliyun.com/centos/7/os/x86_64/images/pxeboot/vmlinuz \
http://mirrors.aliyun.com/centos/7/os/x86_64/images/pxeboot/initrd.img
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建默认的pxe启动项目:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /var/lib/tftpboot/pxelinux.cfg/default
# create new
 default centos7

label centos7
    kernel centos7/vmlinuz
    append initrd=centos7/initrd.img root=nfs:10.19.20.2:/var/lib/tftpboot/centos7/root rw selinux=0 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;映射NFS服务器:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /etc/exports
/var/lib/tftpboot/centos7/root 10.19.20.0/24(rw,no_root_squash)
# systemctl start rpcbind nfs-server 
# systemctl enable rpcbind nfs-server 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在在网络中加入新的机器，从PXE启动后，将直接进入到CentOS7的桌面。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>不同桌面环境占用内存/CPU对比</title>
      <link>http://purplepalmdash.github.io/2016/05/31/bu-tong-zhuo-mian-huan-jing-zhan-yong-nei-cun-slash-cpudui-bi/</link>
      <pubDate>Tue, 31 May 2016 09:25:38 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/05/31/bu-tong-zhuo-mian-huan-jing-zhan-yong-nei-cun-slash-cpudui-bi/</guid>
      <description>

&lt;p&gt;对比xfce4, lxde, gnome, mate等桌面环境占用内存/CPU对比&lt;/p&gt;

&lt;h3 id=&#34;先决条件&#34;&gt;先决条件&lt;/h3&gt;

&lt;p&gt;使用vagrant的镜像(ubuntu14.04):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vagrant box list
ubuntu1404                                   (virtualbox, 0)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;每一个桌面环境的验证如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vagrant init ubuntu1404
$ vim Vagrantfile
  config.vm.provider &amp;quot;virtualbox&amp;quot; do |vb|
    # Display the VirtualBox GUI when booting the machine
  #  vb.gui = true
  
    # Customize the amount of memory on the VM:
    vb.memory = &amp;quot;1024&amp;quot;
  end
$ vagrant up
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;基础镜像占用内存&#34;&gt;基础镜像占用内存&lt;/h3&gt;

&lt;p&gt;用&lt;code&gt;free -m&lt;/code&gt;来查看系统运行时所占用内存：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_09_42_54_688x111.jpg&#34; alt=&#34;/images/2016_05_31_09_42_54_688x111.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;xfce4-xubuntu&#34;&gt;xfce4(xubuntu)&lt;/h3&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get install xubuntu-desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动xfce4桌面后，内存占用结果为：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_09_57_44_483x164.jpg&#34; alt=&#34;/images/2016_05_31_09_57_44_483x164.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;lxde-lubuntu&#34;&gt;lxde(lubuntu)&lt;/h3&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get install -y lubuntu-desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动lxde后，内存占用为:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_10_07_46_458x84.jpg&#34; alt=&#34;/images/2016_05_31_10_07_46_458x84.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;gnome-gnome-session-fallback&#34;&gt;gnome(gnome-session-fallback)&lt;/h3&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update; sudo apt-get install gnome-session-fallback
$ sudo apt-get install -y gdm xterm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动gnome-session-fallback后，内存占用为:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_10_22_08_490x185.jpg&#34; alt=&#34;/images/2016_05_31_10_22_08_490x185.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;unity&#34;&gt;unity&lt;/h3&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y ubuntu-desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动unity后，内存占用为:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_10_26_22_553x168.jpg&#34; alt=&#34;/images/2016_05_31_10_26_22_553x168.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;mate&#34;&gt;mate&lt;/h3&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-add-repository ppa:ubuntu-mate-dev/ppa
$ sudo apt-add-repository ppa:ubuntu-mate-dev/trusty-mate
$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade
$ sudo apt-get install --no-install-recommends ubuntu-mate-core ubuntu-mate-desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动mate后，内存占用为:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_10_50_58_486x148.jpg&#34; alt=&#34;/images/2016_05_31_10_50_58_486x148.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;kde&#34;&gt;KDE&lt;/h3&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y kubuntu-desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;内存占用:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_11_06_50_487x108.jpg&#34; alt=&#34;/images/2016_05_31_11_06_50_487x108.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;对比&#34;&gt;对比&lt;/h3&gt;

&lt;p&gt;统计结果:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_11_08_35_342x269.jpg&#34; alt=&#34;/images/2016_05_31_11_08_35_342x269.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;图例:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_11_10_32_896x593.jpg&#34; alt=&#34;/images/2016_05_31_11_10_32_896x593.jpg&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Working Tips on Ansible-cobbler(3)</title>
      <link>http://purplepalmdash.github.io/2016/05/18/working-tips-on-ansible-cobbler-3/</link>
      <pubDate>Wed, 18 May 2016 21:15:10 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/05/18/working-tips-on-ansible-cobbler-3/</guid>
      <description>

&lt;h3 id=&#34;apt-packages&#34;&gt;APT Packages&lt;/h3&gt;

&lt;p&gt;The downloaded deb files should be under &lt;code&gt;/var/cache/apt&lt;/code&gt;, use following command for copying to
another position:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find . | grep -i deb$ | xargs % cp % ~/Dest_Folder
$ scp -r ~/Dest_Folder Your_Cobbler_Machine
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;repositories&#34;&gt;Repositories&lt;/h3&gt;

&lt;p&gt;Install &lt;code&gt;dpkg-dev&lt;/code&gt; package, so we could generate the dpkg packages:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install -y dpkg-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a new repository:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_18_21_28_37_717x452.jpg&#34; alt=&#34;/images/2016_05_18_21_28_37_717x452.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Edit the advanced options:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_18_21_30_04_508x314.jpg&#34; alt=&#34;/images/2016_05_18_21_30_04_508x314.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Report the repository info via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@cobbler-ubuntu:~# cobbler repo report --name=ubuntu1604Mate
Name                           : ubuntu1604Mate
Apt Components (apt only)      : [&#39;main&#39;]
Apt Dist Names (apt only)      : [&#39;stable&#39;]
Arch                           : x86_64
Breed                          : apt
Comment                        : Ubuntu 16.04 Repository For installing MATE
Createrepo Flags               : &amp;lt;&amp;lt;inherit&amp;gt;&amp;gt;
Environment Variables          : {}
Keep Updated                   : False
Mirror                         : 
Mirror locally                 : True
Owners                         : [&#39;admin&#39;]
Priority                       : 99
External proxy URL             : 
RPM List                       : []
Yum Options                    : {}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Repository Structure Creation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir /srv/www/cobbler/repo_mirror/ubuntu1604Mate
$ cd /srv/www/cobbler/repo_mirror/ubuntu1604Mate
$ mkdir -p pool/main dists/stable/main/binary-i386 dists/stable/main/binary-amd64
$ cp ~/apt/debs/*.deb ./pool/main/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enable the &lt;code&gt;allow_unauthenticated&lt;/code&gt; options in kickstart file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /var/lib/cobbler/kickstarts/sample.seed
 d-i debian-installer/allow_unauthenticated boolean true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate the gpg key:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# gpg --gen-key
  gpg (GnuPG) 2.0.14; Copyright (C) 2009 Free Software Foundation, Inc.
  This is free software: you are free to change and redistribute it.
  There is NO WARRANTY, to the extent permitted by law.

  gpg: directory `/root/.gnupg&#39; created
  gpg: new configuration file `/root/.gnupg/gpg.conf&#39; created
  gpg: WARNING: options in `/root/.gnupg/gpg.conf&#39; are not yet active during this run
  gpg: keyring `/root/.gnupg/secring.gpg&#39; created
  gpg: keyring `/root/.gnupg/pubring.gpg&#39; created
 Please select what kind of key you want:
    (1) RSA and RSA (default)
    (2) DSA and Elgamal
    (3) DSA (sign only)
    (4) RSA (sign only)
 Your selection? 1
 RSA keys may be between 1024 and 4096 bits long.
 What keysize do you want? (2048)
 Requested keysize is 2048 bits
 Please specify how long the key should be valid.
          0 = key does not expire
       &amp;lt;n&amp;gt;  = key expires in n days
       &amp;lt;n&amp;gt;w = key expires in n weeks
       &amp;lt;n&amp;gt;m = key expires in n months
       &amp;lt;n&amp;gt;y = key expires in n years
 Key is valid for? (0)
 Key does not expire at all
 Is this correct? (y/N) y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For generating the random key, install the &lt;code&gt;haveged&lt;/code&gt; in system:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo aptitude install haveged
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List the keys via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# gpg --list-keys
/home/vagrant/.gnupg/pubring.gpg
--------------------------------
pub   2048R/16D87321 2016-05-18
uid                  xxxxx &amp;lt;xxxxxx@gmail.com&amp;gt;
sub   2048R/8C4A318A 2016-05-18
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate the pgp signature via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# gpg --export -a 16D87321&amp;gt;~/junk.key
# gpg --no-default-keyring --keyring /srv/www/cobbler/repo_mirror/ubuntu1604Mate/public.pgp --import ~/junk.key
# rm -f ~/junk.key
# chmod a+r /srv/www/cobbler/repo_mirror/ubuntu1604Mate/public.pgp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Re-Generate the repository infos via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /srv/www/cobbler/repo_mirror/ubuntu1604Mate/
$ vim reindex_apt.sh
$ chmod 777 reindex_apt.sh 
$ ./reindex_apt.sh 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The content of &lt;code&gt;reindex_apt.sh&lt;/code&gt; is listed as following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

GPG_NAME=16D87321
REPONAME=stable
VERSION=1.0

for bindir in `find dists/${REPONAME} -type d -name &amp;quot;binary*&amp;quot;`; do
    arch=`echo $bindir|cut -d&amp;quot;-&amp;quot; -f 2`
    echo &amp;quot;Processing ${bindir} with arch ${arch}&amp;quot;

    overrides_file=/tmp/overrides
    package_file=$bindir/Packages
    release_file=$bindir/Release

    # Create simple overrides file to stop warnings
    cat /dev/null &amp;gt; $overrides_file
    for pkg in `ls pool/main/ | grep -E &amp;quot;(all|${arch})\.deb&amp;quot;`; do
        pkg_name=`/usr/bin/dpkg-deb -f pool/main/${pkg} Package`
        echo &amp;quot;${pkg_name} Priority extra&amp;quot; &amp;gt;&amp;gt; $overrides_file
    done

    # Index of packages is written to Packages which is also zipped
    dpkg-scanpackages -a ${arch} pool/main $overrides_file &amp;gt; $package_file
    # The line above is also commonly written as:
    # dpkg-scanpackages -a ${arch} pool/main /dev/null &amp;gt; $package_file
    gzip -9c $package_file &amp;gt; ${package_file}.gz
    bzip2 -c $package_file &amp;gt; ${package_file}.bz2

    # Cleanup
    rm $overrides_file
done

# Release info goes into Release &amp;amp; Release.gpg which includes an md5 &amp;amp; sha1 hash of Packages.*
# Generate &amp;amp; sign release file
cd dists/${REPONAME}
cat &amp;gt; Release &amp;lt;&amp;lt;ENDRELEASE
Suite: ${REPONAME}
Version: ${VERSION}
Component: main
Origin: somewhere
Label: ubuntu1604Mate
Architecture: i386 amd64
Date: `date`
ENDRELEASE

# Generate hashes
echo &amp;quot;MD5Sum:&amp;quot; &amp;gt;&amp;gt; Release
for hashme in `find main -type f`; do
    md5=`openssl dgst -md5 ${hashme}|cut -d&amp;quot; &amp;quot; -f 2`
    size=`stat -c %s ${hashme}`
    echo &amp;quot; ${md5} ${size} ${hashme}&amp;quot; &amp;gt;&amp;gt; Release
done
echo &amp;quot;SHA1:&amp;quot; &amp;gt;&amp;gt; Release
for hashme in `find main -type f`; do
    sha1=`openssl dgst -sha1 ${hashme}|cut -d&amp;quot; &amp;quot; -f 2`
    size=`stat -c %s ${hashme}`
    echo &amp;quot; ${sha1} ${size} ${hashme}&amp;quot; &amp;gt;&amp;gt; Release
done

# Sign!
gpg --yes -u $GPG_NAME --sign -bao Release.gpg Release
cd -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now continue to modify the kickstart file for using the generated gpgs:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# pwd
/var/lib/cobbler/snippets
# cp preseed_apt_repo_config preseed_apt_repo_config_pgpkey
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;preseed_apt_repo_config_pgpkey&lt;/code&gt; should be listed as following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Additional repositories, local[0-9] available
#set $cur=1
#set $repo_data = $getVar(&amp;quot;repo_data&amp;quot;,[])
#for $repo in $repo_data
 #for $dist in $repo.apt_dists
 #set $comps = &amp;quot; &amp;quot;.join($repo.apt_components)
d-i apt-setup/local${cur}/repository string \
 #if $repo.mirror_locally
      http://$http_server/cblr/repo_mirror/${repo.name} $dist $comps
 #else
      ${repo.mirror} $dist $comps
 #end if
 #if $repo.comment != &amp;quot;&amp;quot;
d-i apt-setup/local${cur}/comment string ${repo.comment}
 #end if
 #if $repo.breed == &amp;quot;src&amp;quot;
# Enable deb-src lines
d-i apt-setup/local${cur}/source boolean false
 #end if
+++ # Add repo pgp pub key
+++ d-i apt-setup/local${cur}/key string \
+++       http://$http_server/cblr/repo_mirror/${repo.name}/public.pgp
 #set $cur=$cur+1
 #end for
#end for
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using the new preseed file, and changint the &lt;code&gt;preseed_apt_repo_config_pgpkey&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# pwd
/var/lib/cobbler/kickstarts
# cp sample.seed ubuntu1604.seed
# vim ubuntu1604.seed
-  $SNIPPET(&#39;preseed_apt_repo_config&#39;)
+  $SNIPPET(&#39;preseed_apt_repo_config_pgpkey&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Changing the seed in the &lt;code&gt;cobbler_web&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_18_22_25_48_732x294.jpg&#34; alt=&#34;/images/2016_05_18_22_25_48_732x294.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Use &lt;code&gt;cobbler sync&lt;/code&gt; for syncing the configuration.&lt;/p&gt;

&lt;h3 id=&#34;use-the-repository&#34;&gt;Use the Repository&lt;/h3&gt;

&lt;p&gt;Add the &lt;code&gt;ubuntu1604Mate&lt;/code&gt; into the Repos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_18_22_31_42_731x486.jpg&#34; alt=&#34;/images/2016_05_18_22_31_42_731x486.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After added, the configuration should be:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_18_22_33_00_471x149.jpg&#34; alt=&#34;/images/2016_05_18_22_33_00_471x149.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now &lt;code&gt;cobbler sync&lt;/code&gt; for syncing the configuration.&lt;/p&gt;

&lt;p&gt;Bug: you should move the &lt;code&gt;preseed_apt_repo_config&lt;/code&gt; and  then &lt;code&gt;cobbler sync&lt;/code&gt; then your deployment will be OK:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mv /var/lib/cobbler/snippets/preseed_apt_repo_config /root/
$ cobbler sync
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;added-mate-installation&#34;&gt;Added Mate Installation&lt;/h3&gt;

&lt;p&gt;Configure the preseed late:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cp /var/lib/cobbler/scripts/preseed_late_default /var/lib/cobbler/scripts/preseed_late_default_mate
# vim /var/lib/cobbler/scripts/preseed_late_default_mate
# vim preseed_late_default_mate 
$SNIPPET(&#39;post_install_network_config_deb&#39;)
$SNIPPET(&#39;late_apt_repo_config&#39;)
$SNIPPET(&#39;post_run_deb&#39;)
$SNIPPET(&#39;download_config_files&#39;)
+ $SNIPPET(&#39;ubuntumate&#39;)
$SNIPPET(&#39;kickstart_done&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now add the snippet of &lt;code&gt;ubuntumate&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cat ../snippets/ubuntumate 
echo &amp;quot;debconf debconf/frontend select noninteractive&amp;quot; | sudo debconf-set-selections
apt-get --allow-unauthenticated update -y
apt-get --allow-unauthenticated upgrade -y
apt-get --allow-unauthenticated install -y build-essential
### apt-get --allow-unauthenticated install -y ubuntu-mate-desktop
apt-get --allow-unauthenticated install -y vim
### apt-get --allow-unauthenticated install -y chromium-browser
### apt-get --allow-unauthenticated install -y meld vim-gtk
### apt-get --allow-unauthenticated install -y evince
### sudo apt-get --allow-unauthenticated install -y language-pack-zh-hans language-pack-zh-hans-base language-pack-gnome-zh-hans language-pack-gnome-zh-hans-base
### sudo apt-get --allow-unauthenticated install -y `check-language-support -l zh`
### sudo localectl set-locale LANG=zh_CN.UTF-8
### # TW/HK language support
### sudo apt-get --allow-unauthenticated install -y language-pack-zh-hant language-pack-zh-hant-base language-pack-gnome-zh-hant language-pack-gnome-zh-hant-base
### sudo apt-get --allow-unauthenticated install -y `check-language-support -l zh`
### apt-get --allow-unauthenticated install -y fcitx
### apt-get --allow-unauthenticated install -y fcitx-table-wubi fcitx-table-wubi-large
### apt-get --allow-unauthenticated install -y fcitx-googlepinyin
### apt-get --allow-unauthenticated install -y gimp
### apt-get --allow-unauthenticated install -y ibus-pinyin 
### apt-get --allow-unauthenticated install -y thunderbird-locale-en-us mythes-en-au hunspell-en-gb thunderbird-locale-en-gb fonts-arphic-ukai wbritish fcitx-sunpinyin openoffice.org-hyphenation language-pack-gnome-en hunspell-en-za fcitx-chewing fcitx-table-cangjie gimp-help-en language-pack-en mythes-en-us thunderbird-locale-en fcitx-module-cloudpinyin libreoffice-help-en-us firefox-locale-en libreoffice-help-en-gb fonts-arphic-uming hyphen-en-gb libreoffice-l10n-en-za fcitx-ui-qimpanel hunspell-en-au libreoffice-l10n-en-gb hyphen-en-us hunspell-en-ca 
### apt-get --allow-unauthenticated install -y zsh
### apt-get --allow-unauthenticated install -y fonts-wqy-zenhei fonts-wqy-microhei ttf-wqy-microhei  ttf-wqy-zenhei  xfonts-wqy
### apt-get --allow-unauthenticated install -y eclipse
### apt-get --allow-unauthenticated install -y gpicview
### apt-get --allow-unauthenticated install -y scrot
### apt-get --allow-unauthenticated install -y byobu
### apt-get --allow-unauthenticated install -y subversion git
### apt-get --allow-unauthenticated install -y kdiff3
### apt-get --allow-unauthenticated install -y docker

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use &lt;code&gt;cobbler sync&lt;/code&gt;, and now you could deploy mate desktop via cobbler.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tips On Maas 2.0</title>
      <link>http://purplepalmdash.github.io/2016/05/12/tips-on-maas-2-dot-0/</link>
      <pubDate>Thu, 12 May 2016 14:10:48 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/05/12/tips-on-maas-2-dot-0/</guid>
      <description>

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;p&gt;Based on Ubuntu16.04, install maas via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install -y maas
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After installation, create the default username/password via following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo maas-region createadmin --username=root --email=xxyy@xxyy.com
Password: 
Again: 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you could login to the &lt;code&gt;http://YourIP/MAAS&lt;/code&gt; via:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_12_14_25_12_456x494.jpg&#34; alt=&#34;/images/2016_05_12_14_25_12_456x494.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;using-api-to-talk&#34;&gt;Using API to talk&lt;/h3&gt;

&lt;p&gt;In maas cli, using following steps for generate the API key and use:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# sudo maas-region apikey --username=root
AYnuZY3gWTnpxJb7Kp:AtDG3yUmaDu8tXGzTc:tumR29xsRGL6A7T6M2G7LTETPP5kkDwC
# maas login mymaas http://10.17.17.2/MAAS/api/2.0
AYnuZY3gWTnpxJb7Kp:AtDG3yUmaDu8tXGzTc:tumR29xsRGL6A7T6M2G7LTETPP5kkDwC

You are now logged in to the MAAS server at
http://10.17.17.2/MAAS/api/2.0/ with the profile name &#39;mymaas&#39;.

For help with the available commands, try:

  maas mymaas --help

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Later we will use &lt;code&gt;mymaas&lt;/code&gt; for talk to MAAS Controller.&lt;/p&gt;

&lt;h3 id=&#34;add-boot-source&#34;&gt;Add Boot Source&lt;/h3&gt;

&lt;p&gt;Click &lt;code&gt;Images&lt;/code&gt;, you won&amp;rsquo;t see anything because the images are not downloaded. you could
download it manually via following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install simplestreams ubuntu-cloudimage-keyring apache2
$ sudo sstream-mirror --keyring=/usr/share/keyrings/ubuntu-cloudimage-keyring.gpg \
https://images.maas.io/ephemeral-v2/daily/ /var/www/html/maas/images/ephemeral-v2/daily \
&#39;arch=amd64&#39; &#39;subarch~(generic|hwe-t)&#39; &#39;release~(trusty|precise|xenial)&#39; --max=1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After downloading, the image content will be available under &lt;code&gt;/var/www/html/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Or, if you downloaded the html files before, do following steps for using your
pre-downloaded packages:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tar xJvf html.tar.bz2 -C /var/www/html/
$ sudo maas mymaas boot-sources create url=http://10.17.17.2/mirror/images/ephemeral-v2/releases/ keyring_filename=/usr/share/keyrings/ubuntu-cloudimage-keyring.gpg 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now there are two boot-sources in maas, delete the default one(Because we are in china,
and its goddamned GFW!)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dash@maascontroller:~$ sudo maas mymaas boot-source delete 1
Success.
Machine-readable output follows:

dash@maascontroller:~$ sudo maas mymaas boot-sources read
Success.
Machine-readable output follows:
[
    {
        &amp;quot;keyring_data&amp;quot;: &amp;quot;&amp;lt;memory at 0x7f4e9478b288&amp;gt;&amp;quot;,
        &amp;quot;resource_uri&amp;quot;: &amp;quot;/MAAS/api/2.0/boot-sources/2/&amp;quot;,
        &amp;quot;id&amp;quot;: 2,
        &amp;quot;url&amp;quot;: &amp;quot;http://10.17.17.2/mirror/images/ephemeral-v2/releases/&amp;quot;,
        &amp;quot;keyring_filename&amp;quot;: &amp;quot;/usr/share/keyrings/ubuntu-cloudimage-keyring.gpg&amp;quot;
    }
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Import boot-sources via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo maas mymaas boot-resources import
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will takes a little bit time for importing the boot images.&lt;/p&gt;

&lt;p&gt;For adding nodes:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://maas.ubuntu.com/docs2.0/nodes.html&#34;&gt;https://maas.ubuntu.com/docs2.0/nodes.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux Tips(5)</title>
      <link>http://purplepalmdash.github.io/2016/05/04/linux-tips-5/</link>
      <pubDate>Wed, 04 May 2016 20:03:21 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/05/04/linux-tips-5/</guid>
      <description>

&lt;h3 id=&#34;1-detach-running-tasks&#34;&gt;1. Detach Running Tasks&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Ctrl+Z&lt;/code&gt; for suspend the tasks, then &lt;code&gt;bg&lt;/code&gt; it, now you could use &lt;code&gt;disown %1&lt;/code&gt; for
detaching the running process.&lt;/p&gt;

&lt;p&gt;Next time you login, you will see this background task is also running.&lt;/p&gt;

&lt;h3 id=&#34;2-installation-of-cobbler&#34;&gt;2. Installation of Cobbler&lt;/h3&gt;

&lt;p&gt;Shell Scripts:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/luisbolson/1d0dc42976d2468171d0&#34;&gt;https://gist.github.com/luisbolson/1d0dc42976d2468171d0&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-yum-groups&#34;&gt;3. yum groups&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblings.narrabilis.com/creating-a-yum-repository-repo-and-creating-a-yum-group-to-install-kickstart&#34;&gt;http://ramblings.narrabilis.com/creating-a-yum-repository-repo-and-creating-a-yum-group-to-install-kickstart&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-rvm-issue&#34;&gt;4. rvm issue&lt;/h3&gt;

&lt;p&gt;rvm met &lt;code&gt;openssl.so (LoadError)&lt;/code&gt;, could be solved via following steps.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$  curl https://github.com/ruby/ruby/commit/801e1fe46d83c856844ba18ae4751478c59af0d1.diff &amp;gt; openssl.patch\n
$  rvm install 1.9.3 --with-openssl-dir=$HOME/.rvm/usr --patch ./openssl.patch 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-get-the-name-of-rpm-packages&#34;&gt;5. Get the name of rpm packages&lt;/h3&gt;

&lt;p&gt;Only print the name of the rpm package:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# rpm -qp --queryformat &#39;%{NAME}\n&#39; *.rpm&amp;gt;package.list
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-xargs-tips&#34;&gt;6. xargs tips&lt;/h3&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# find . -type f -exec grep -ilR &amp;quot;MY PATTERN&amp;quot; {} \; | xargs -I % cp % /dest/dir/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For me, I find out all of the packges in cache file, and copy them to another position:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find . | \grep rpm$ | xargs -I % cp % /home/dash/rpms
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-make-local-repo&#34;&gt;7. Make local repo&lt;/h3&gt;

&lt;p&gt;From the stackoverflow answers.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Yes as you&#39;ve described it, it sounds doable. I think I would be inclined to do the
following steps.

Setup directories
$ mkdir {Desktop,Desktop_Platform,X_Window_System,Fonts}
Download RPMs
Then run these types of commands to download the RPMs for the given groups:

$ repoquery --qf=%{name} -g --list --grouppkgs=all &amp;quot;Fonts&amp;quot; | \
     xargs -I{} repotrack -a x86_64 -p Fonts/ {}
You can wrap it in a for loop too:

$ for i in &amp;quot;Desktop&amp;quot; &amp;quot;Desktop_Platform&amp;quot; &amp;quot;X_Window_System&amp;quot; &amp;quot;Fonts&amp;quot;;do  
    repoquery --qf=%{name} -g --list --grouppkgs=all &amp;quot;$i&amp;quot; | \
       xargs -I{} repotrack -a x86_64 -p $i/ {}; 
  done
This will go through each group and download the packages into their respective
directories.

Re-installation
Then use the command as you&#39;ve described:

$ yum --nogpgcheck localinstall {Desktop,Desktop_Platform,X_Window_System,Fonts}/*.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;8-simple-screen-recorder&#34;&gt;8. Simple Screen Recorder&lt;/h3&gt;

&lt;p&gt;Ubuntu:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:maarten-baert/simplescreenrecorder
sudo apt-get update
sudo apt-get install simplescreenrecorder
# if you want to record 32-bit OpenGL applications on a 64-bit system:
sudo apt-get install simplescreenrecorder-lib:i386
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ArchLinux:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pacman -S simplescreenrecorder
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-convert-virtualbox-hd-to-qcow2&#34;&gt;9. Convert virtualbox hd to qcow2&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;VBoxManage clonehd /home/dash/VirtualBox\ VMs/ansible-cobbler_cobbler-ubuntu_1462410925173_15793/packer-virtualbox-iso-1454031074-disk1.vmdk /home/dash/output.img --format raw &amp;amp;&amp;amp; qemu-img convert -f raw /home/dash/output.img -O qcow2 /home/dash/ansible-cobbler.qcow2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;10-ansible-issue&#34;&gt;10. Ansible issue&lt;/h3&gt;

&lt;p&gt;The isssue is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ansible: ERROR: become is not a legal parameter in an Ansible Playbook
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Solved via upgrading to the newest version of ansible:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install software-properties-common
$ sudo apt-add-repository ppa:ansible/ansible
$ sudo apt-get update
$ sudo apt-get install ansible
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using the newest ansible you could aoid this error.&lt;/p&gt;

&lt;h3 id=&#34;11-create-customized-lxc-image&#34;&gt;11. Create customized lxc image&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;http://unix.stackexchange.com/questions/186638/how-to-make-a-local-template-for-a-linux-container-and-point-to-that
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://insights.ubuntu.com/2015/03/20/installing-lxd-and-the-command-line-tool/&#34;&gt;https://insights.ubuntu.com/2015/03/20/installing-lxd-and-the-command-line-tool/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.stgraber.org/2016/03/30/lxd-2-0-image-management-512/&#34;&gt;https://www.stgraber.org/2016/03/30/lxd-2-0-image-management-512/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://insights.ubuntu.com/2016/04/01/lxd-2-0-image-management-512/&#34;&gt;https://insights.ubuntu.com/2016/04/01/lxd-2-0-image-management-512/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;12-changing-to-eth0-in-ubuntu&#34;&gt;12. Changing to eth0 in Ubuntu&lt;/h3&gt;

&lt;p&gt;Modify the name of &lt;code&gt;enps*&lt;/code&gt; to &lt;code&gt;eth0/1/2/3/4/&lt;/code&gt;, via following steps:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;try this: Edit your /etc/default/grub. Change the line from

GRUB_CMDLINE_LINUX=&amp;quot;&amp;quot;
to

GRUB_CMDLINE_LINUX=&amp;quot;net.ifnames=0 biosdevname=0&amp;quot;
and, finally run:

# update-grub
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;13-maas-syncing-pxe-file&#34;&gt;13. MAAS Syncing PXE File&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://maas.ubuntu.com/docs/sstreams-mirror.html&#34;&gt;https://maas.ubuntu.com/docs/sstreams-mirror.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://ytooyama.hatenadiary.jp/entry/2016/05/11/002532&#34;&gt;http://ytooyama.hatenadiary.jp/entry/2016/05/11/002532&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For building our own MAAS image:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://askubuntu.com/questions/744966/how-do-you-install-the-maas-image-builder-on-14-04-lts&#34;&gt;http://askubuntu.com/questions/744966/how-do-you-install-the-maas-image-builder-on-14-04-lts&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;14-vagrant-for-maas&#34;&gt;14. Vagrant For MAAS&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/battlemidget/vagrant-maas&#34;&gt;https://github.com/battlemidget/vagrant-maas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/battlemidget/vagrant-maas-in-a-box/blob/master/Vagrantfile&#34;&gt;https://github.com/battlemidget/vagrant-maas-in-a-box/blob/master/Vagrantfile&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;15-convert-vm-to-physical&#34;&gt;15. Convert vm to physical&lt;/h3&gt;

&lt;p&gt;Thus you could enjoy packer building the physical machine! :)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /media/wherever-the-image-is/

# for VMWare
sudo apt-get install qemu-kvm
qemu-img convert your-vmware-disk.vmdk -O raw disk.img

# For VirtualBox
VBoxManage internalcommands converttoraw your-virtualbox-disk.vdi /dev/sdX
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;16-generate-random-seed&#34;&gt;16. Generate Random Seed&lt;/h3&gt;

&lt;p&gt;Error message is &lt;code&gt;Please do some other work to give
the OS a chance to collect more entropy!&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo aptitude install haveged
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;17-deb-repository-in-cobbler&#34;&gt;17. DEB Repository in Cobbler&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/cobbler/cobbler/wiki/Creating-custom-apt-repositories-in-centos-or-el-based-cobbler&#34;&gt;https://github.com/cobbler/cobbler/wiki/Creating-custom-apt-repositories-in-centos-or-el-based-cobbler&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Trouble-Shooting:&lt;br /&gt;
&lt;a href=&#34;https://github.com/cobbler/cobbler/issues/1530&#34;&gt;https://github.com/cobbler/cobbler/issues/1530&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;18-manually-install-mate-desktop&#34;&gt;18. Manually Install Mate Desktop&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;debconf debconf/frontend select noninteractive&amp;quot; | sudo debconf-set-selections
apt-get --allow-unauthenticated update -y
apt-get --allow-unauthenticated upgrade -y
apt-get --allow-unauthenticated install -y build-essential
apt-get --allow-unauthenticated install -y ubuntu-mate-desktop
apt-get --allow-unauthenticated install -y vim
apt-get --allow-unauthenticated install -y chromium-browser
apt-get --allow-unauthenticated install -y meld vim-gtk
apt-get --allow-unauthenticated install -y evince
sudo apt-get --allow-unauthenticated install -y language-pack-zh-hans language-pack-zh-hans-base language-pack-gnome-zh-hans language-pack-gnome-zh-hans-base
sudo apt-get --allow-unauthenticated install -y `check-language-support -l zh`
sudo localectl set-locale LANG=zh_CN.UTF-8
# TW/HK language support
sudo apt-get --allow-unauthenticated install -y language-pack-zh-hant language-pack-zh-hant-base language-pack-gnome-zh-hant language-pack-gnome-zh-hant-base
sudo apt-get --allow-unauthenticated install -y `check-language-support -l zh`
apt-get --allow-unauthenticated install -y fcitx
apt-get --allow-unauthenticated install -y fcitx-table-wubi fcitx-table-wubi-large
apt-get --allow-unauthenticated install -y fcitx-googlepinyin
apt-get --allow-unauthenticated install -y gimp
apt-get --allow-unauthenticated install -y ibus-pinyin 
apt-get --allow-unauthenticated install -y thunderbird-locale-en-us mythes-en-au hunspell-en-gb thunderbird-locale-en-gb fonts-arphic-ukai wbritish fcitx-sunpinyin openoffice.org-hyphenation language-pack-gnome-en hunspell-en-za fcitx-chewing fcitx-table-cangjie gimp-help-en language-pack-en mythes-en-us thunderbird-locale-en fcitx-module-cloudpinyin libreoffice-help-en-us firefox-locale-en libreoffice-help-en-gb fonts-arphic-uming hyphen-en-gb libreoffice-l10n-en-za fcitx-ui-qimpanel hunspell-en-au libreoffice-l10n-en-gb hyphen-en-us hunspell-en-ca 
apt-get --allow-unauthenticated install -y zsh
apt-get --allow-unauthenticated install -y fonts-wqy-zenhei fonts-wqy-microhei ttf-wqy-microhei  ttf-wqy-zenhei  xfonts-wqy
apt-get --allow-unauthenticated install -y eclipse
apt-get --allow-unauthenticated install -y gpicview
apt-get --allow-unauthenticated install -y scrot
apt-get --allow-unauthenticated install -y byobu
apt-get --allow-unauthenticated install -y subversion git
apt-get --allow-unauthenticated install -y kdiff3
apt-get --allow-unauthenticated install -y docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Final Version should be:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;debconf debconf/frontend select noninteractive&amp;quot; | sudo debconf-set-selections
unset DEBIAN_HAS_FRONTEND DEBIAN_FRONTEND DEBCONF_REDIR DEBCONF_OLD_FD_BASE
export DEBIAN_FRONTEND=noninteractive
apt-get update --assume-yes
apt-get dist-upgrade --assume-yes
apt-get install --assume-yes vim build-essential ubuntu-mate-desktop chromium-browser meld vim-gtk evince language-pack-zh-hans language-pack-zh-hans-base language-pack-gnome-zh-hans language-pack-gnome-zh-hans-base language-pack-zh-hant language-pack-zh-hant-base language-pack-gnome-zh-hant language-pack-gnome-zh-hant-base fcitx fcitx-table-wubi fcitx-table-wubi-large fcitx-googlepinyin gimp ibus-pinyin thunderbird-locale-en-us mythes-en-au hunspell-en-gb thunderbird-locale-en-gb fonts-arphic-ukai wbritish fcitx-sunpinyin openoffice.org-hyphenation language-pack-gnome-en hunspell-en-za fcitx-chewing fcitx-table-cangjie gimp-help-en language-pack-en mythes-en-us thunderbird-locale-en fcitx-module-cloudpinyin libreoffice-help-en-us firefox-locale-en libreoffice-help-en-gb fonts-arphic-uming hyphen-en-gb libreoffice-l10n-en-za fcitx-ui-qimpanel hunspell-en-au libreoffice-l10n-en-gb hyphen-en-us hunspell-en-ca zsh fonts-wqy-zenhei fonts-wqy-microhei ttf-wqy-microhei  ttf-wqy-zenhei  xfonts-wqy eclipse gpicview scrot byobu subversion git kdiff3 docker
apt-get install --assume-yes  `check-language-support -l zh`

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;19-use-rync-for-resume-tranferring&#34;&gt;19. Use rync for resume tranferring&lt;/h3&gt;

&lt;p&gt;Command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rsync -P -e ssh remoteuser@remotehost:/remote/path /local/path
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;20-rackhd-howto&#34;&gt;20. RackHD Howto&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://dojoblog.emc.com/rackhd-cpi/setting-up-rackhd/&#34;&gt;http://dojoblog.emc.com/rackhd-cpi/setting-up-rackhd/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;21-sync-repo&#34;&gt;21. sync repo&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;vagrant@ubuntu-1404:/etc/apt$ cat /var/mirrors/ubuntu/14.04/var/postmirror.sh 
#!/bin/sh -x 
# the udebs script gets the actual files we need 
#/mnt/repo/apt-mirror/var/udebs.sh  
# A quick apt directory structure primer: 
# an apt server (e.g. archive.ubuntu.com) contains repositories (e.g. trusty-backports), 
# which contain archives (e.g. multiverse), which contain directories 
# a complete example - http://archive.ubuntu.com/ubuntu/dists/trusty-backports/multiverse/debian-installer/  
# With this in mind, we create bash &#39;arrays&#39; of the structure: 
# server we&#39;re syncing against 
#MIRROR=&amp;quot;cn.archive.ubuntu.com&amp;quot; 
MIRROR=&amp;quot;archive.ubuntu.com&amp;quot; 
# repositories we&#39;re mirroring 
#REPOS=&amp;quot;trusty trusty-updates trusty-security trusty-proposed trusty-backports&amp;quot; 
REPOS=&amp;quot;trusty&amp;quot;
# archives in repositories 
#ARCHIVES=&amp;quot;main multiverse restricted universe&amp;quot; 
ARCHIVES=&amp;quot;main&amp;quot;
# installer location inside archive 
#DIRECTORIES=&amp;quot;debian-installer dist-upgrader-all installer-amd64 installer-i386&amp;quot; 
DIRECTORIES=&amp;quot;debian-installer installer-amd64&amp;quot;
#where we&#39;re storing it locally 
LOCALDIR=&amp;quot;/var/mirrors/ubuntu/14.04/mirror/mirrors.aliyun.com&amp;quot;
#LOCALDIR=&amp;quot;/mnt/repo/apt-mirror/mirror/archive.ubuntu.com&amp;quot;  
for REPO in $REPOS; do 
for ARCHIVE in $ARCHIVES; do 
for DIRECTORY in $DIRECTORIES;do 
# create directory structure 
if [ ! -e &amp;quot;$LOCALDIR/ubuntu/dists/$REPO/$ARCHIVE/$DIRECTORY&amp;quot; ]; then
mkdir -p &amp;quot;$LOCALDIR/ubuntu/dists/$REPO/$ARCHIVE/$DIRECTORY&amp;quot;
fi
# do the sync 
rsync --recursive --times --links --hard-links --delete --delete-after \
rsync://$MIRROR/ubuntu/dists/$REPO/$ARCHIVE/$DIRECTORY/ $LOCALDIR/ubuntu/dists/$REPO/$ARCHIVE/$DIRECTORY
done
done
done

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;22-vagrantfile-for-adding-more-disks&#34;&gt;22. Vagrantfile for adding more disks&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;To be done. 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;23-rvm-install-issue&#34;&gt;23. rvm install issue&lt;/h3&gt;

&lt;p&gt;With openssl patched you can install rvm successfully:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wget https://github.com/ruby/ruby/commit/801e1fe46d83c856844ba18ae4751478c59af0d1.diff -O openssl.patch
$ rvm install --patch ./openssl.patch 2.2.3
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;24-performance-tool&#34;&gt;24. performance tool&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.tecmint.com/linux-cpu-load-stress-test-with-stress-ng-tool/2/&#34;&gt;http://www.tecmint.com/linux-cpu-load-stress-test-with-stress-ng-tool/2/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;25-x11-forwarding-issue&#34;&gt;25. X11 Forwarding Issue&lt;/h3&gt;

&lt;p&gt;Problem:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;X11 forwarding request failed on channel 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Solved via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# pacman -S xorg-xauth
# vim /etc/ssh/sshd_config
AddressFamily any
X11Forwarding yes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then restart the sshd daemon, you will get X11 on ssh forwarding enabled.&lt;/p&gt;

&lt;p&gt;Add new user &lt;code&gt;clouder&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# useradd -d /home/clouder/ clouder
# chown -R clouder:clouder /home/clouder/
# usermod -aG kvm clouder
# usermod -aG libvirt clouder
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;polkit configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vim /etc/polkit-1/rules.d/50-libvirt.rules 
/* Allow users in kvm group to manage the libvirt
daemon without authentication */
polkit.addRule(function(action, subject) {
    if (action.id == &amp;quot;org.libvirt.unix.manage&amp;quot; &amp;amp;&amp;amp;
        subject.isInGroup(&amp;quot;kvm&amp;quot;)) {
            return polkit.Result.YES;
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install following packages:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# pacman -Syu ebtables dnsmasq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open nested kvm.&lt;/p&gt;

&lt;h3 id=&#34;26-hack-into-system&#34;&gt;26. Hack into system&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://null-byte.wonderhowto.com/how-to/hack-like-pro-hack-shellshock-vulnerability-0157651/&#34;&gt;http://null-byte.wonderhowto.com/how-to/hack-like-pro-hack-shellshock-vulnerability-0157651/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;27-quickly-setup-graphite-and-grafana&#34;&gt;27. Quickly setup graphite and grafana&lt;/h3&gt;

&lt;p&gt;On ArchLinux, do following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir -p /root/data/graphite/storage/whisper/
$ sudo docker run -d \
  --name graphite \
  -p 8080:80 \
  -p 2003:2003 \
  -v /local/path/to/.htpasswd:/etc/nginx/.htpasswd \
  -v /root/data/graphite/storage/whisper:/opt/graphite/storage/whisper \
  sitespeedio/graphite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now your graphite runs OK, default username/password is guest/guest.&lt;/p&gt;

&lt;p&gt;Continue setup the docker container for grafana:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run -i -p 3000:3000 grafana/grafana
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or, setup our own persistent storage via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir -p /root/data/grafana/
$ chmod 777 -R /root/data/grafana/
$ docker run -d -v /root/data/grafana:/var/lib/grafana --name grafana-storage busybox:latest
$ docker run  -d -p 3000:3000 --name=grafana --volumes-from grafana-storage grafana/grafana
$ docker logs grafana
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The correct way for running grfafana via following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# docker run -d -p 3000:3000 --name=grafana -v /root/data/grafana:/var/lib/grafana  grafana/grafana
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;28-docker-enter-issue&#34;&gt;28. docker-enter issue&lt;/h3&gt;

&lt;p&gt;If you met &lt;code&gt;importenv: not found&lt;/code&gt; issue, do following to let docker-enter running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# docker pull jpetazzo/nsenter
# docker run --rm -v /usr/local/bin:/target jpetazzo/nsenter
# docker-enter &amp;lt;container_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;29-docker-collectd&#34;&gt;29. Docker-Collectd&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# docker run -d --net=host --privileged -v /:/hostfs:ro --name=collectd -e HOST_NAME=localhost -e \
GRAPHITE_HOST=192.168.1.79 andreasjansson/collectd-write-graphite
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;30-for-using-bridged-vagrant-libvirt&#34;&gt;30. For using bridged vagrant-libvirt&lt;/h3&gt;

&lt;p&gt;An example Vagrantfile is listed as following , notice it&amp;rsquo;s using ovsbr0.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# -*- mode: ruby -*-
# vi: set ft=ruby :

############### Vagrant Configuration Here #############
Vagrant.configure(2) do |config|

  # vagrant issues #1673..fixes hang with configure_networks
  config.ssh.shell = &amp;quot;bash -c &#39;BASH_ENV=/etc/profile exec bash&#39;&amp;quot;
  config.ssh.username = &#39;vagrant&#39;
  config.ssh.password = &#39;vagrant&#39;
  config.ssh.insert_key = &#39;true&#39;
  config.vm.provider :libvirt do |domain|
    domain.nic_model_type = &#39;e1000&#39;
    domain.memory = 384
    domain.nested = true
    domain.cpu_mode = &#39;host-passthrough&#39;
  end

  # bridge node. 
  # Add one networking, modify hostname, define memory, CPU cores.
  config.vm.define :bridge do |bridge|
    bridge.vm.box = &amp;quot;csmgmtv4&amp;quot;
    bridge.vm.hostname = &amp;quot;bridgenode&amp;quot;
    bridge.vm.network :public_network, 
	:dev =&amp;gt; &amp;quot;ovsbr0&amp;quot;,
	:mode =&amp;gt; &amp;quot;bridge&amp;quot;,
	:type =&amp;gt; &amp;quot;bridge&amp;quot;,
	:ip =&amp;gt; &amp;quot;192.168.178.2&amp;quot;,
	:ovs =&amp;gt; &amp;quot;true&amp;quot;
    bridge.vm.provider :libvirt do |domain|
      domain.storage :file, :size =&amp;gt; &#39;100G&#39;
      domain.memory = 1024
      domain.cpus = 1
      domain.nested = true
      domain.disk_bus = &#39;virtio&#39;
      domain.nic_model_type = &#39;virtio&#39;
      domain.volume_cache = &#39;writeback&#39;
    end
  end
end

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;###31. Using VPN in CloudStack
&lt;a href=&#34;https://portal.redbridge.se/faq/getting-started/accessing-your-instance-from-the-outside/&#34;&gt;https://portal.redbridge.se/faq/getting-started/accessing-your-instance-from-the-outside/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.remibergsma.com/2012/11/18/securely-connect-an-advanced-private-cloudstack-network-by-using-a-vlan-aware-switch-and-a-basic-vpn-device/&#34;&gt;https://blog.remibergsma.com/2012/11/18/securely-connect-an-advanced-private-cloudstack-network-by-using-a-vlan-aware-switch-and-a-basic-vpn-device/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.furorteutonicus.eu/2013/08/04/enabling-host-guest-networking-with-kvm-macvlan-and-macvtap/&#34;&gt;http://www.furorteutonicus.eu/2013/08/04/enabling-host-guest-networking-with-kvm-macvlan-and-macvtap/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;32-python-issue-easy-install&#34;&gt;32. python issue(easy_install)&lt;/h3&gt;

&lt;p&gt;Solved via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wget https://bootstrap.pypa.io/ez_setup.py -O - | python
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;33-vpn-over-ssh&#34;&gt;33. VPN Over ssh&lt;/h3&gt;

&lt;p&gt;Established via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pppd updetach noauth silent nodeflate pty &amp;quot;/usr/bin/ssh root@192.168.1.79 \ 
/usr/bin/pppd nodetach notty noauth&amp;quot; ipparam vpn 10.0.8.1:10.0.8.2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;34-x-windows-for-normal-user&#34;&gt;34. X Windows for normal user&lt;/h3&gt;

&lt;p&gt;X Window for normal user&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;➜  ~ chmod u+s /usr/bin/Xorg 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;35-chromium-flash&#34;&gt;35. Chromium Flash&lt;/h3&gt;

&lt;p&gt;Install it via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ proxychains4 yaourt chromium-pepper-flash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then enable it in &lt;code&gt;chrome://plugins&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;36-junos-issue&#34;&gt;36. JunOS Issue&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.juniper.net/techpubs/en_US/junos-ansible1.0/topics/example/junos-ansible-playbooks-device-configuring.html&#34;&gt;http://www.juniper.net/techpubs/en_US/junos-ansible1.0/topics/example/junos-ansible-playbooks-device-configuring.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://ittechnologist.wordpress.com/2015/08/23/use-vagrant-with-juniper-junos-vms-on-ubuntu/&#34;&gt;https://ittechnologist.wordpress.com/2015/08/23/use-vagrant-with-juniper-junos-vms-on-ubuntu/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://atlas.hashicorp.com/juniper&#34;&gt;https://atlas.hashicorp.com/juniper&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;37-hugo-materials&#34;&gt;37. hugo materials&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://dongjian.github.io/post/howtobuildablog/&#34;&gt;http://dongjian.github.io/post/howtobuildablog/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://bling.github.io/blog/2015/12/31/migrating-from-jekyll-octopress-to-hugo/&#34;&gt;http://bling.github.io/blog/2015/12/31/migrating-from-jekyll-octopress-to-hugo/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://parsiya.net/blog/2016-02-02-from-octopress-to-hugo/&#34;&gt;https://parsiya.net/blog/2016-02-02-from-octopress-to-hugo/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://nathanleclaire.com/blog/2014/12/22/migrating-to-hugo-from-octopress/&#34;&gt;http://nathanleclaire.com/blog/2014/12/22/migrating-to-hugo-from-octopress/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;38-awk&#34;&gt;38. awk&lt;/h3&gt;

&lt;p&gt;Some tricks on awk:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ document_keywords=&amp;quot;categories: linux unix windows&amp;quot;
$ echo $document_keywords | awk &#39;{
for(i=2;i&amp;lt;=NF;i++){if(i!=NF){$i=&amp;quot;\&amp;quot;&amp;quot;$i&amp;quot;\&amp;quot;&amp;quot;&amp;quot;,&amp;quot;}else{$i=&amp;quot;\&amp;quot;&amp;quot;$i&amp;quot;\&amp;quot;&amp;quot;}}}1&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;39-sed-ways&#34;&gt;39. sed ways&lt;/h3&gt;

&lt;p&gt;Using sed for switching from octopress to hugo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$  cat edit.sh
    #!/bin/bash
    for i in `ls ./*.markdown`
    do
    	# Generate the modified result, like categories: &amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;
    	replaceline=`grep -i &amp;quot;categories:&amp;quot; $i|awk \
    &#39;{for(i=2;i&amp;lt;=NF;i++){if(i!=NF){$i=&amp;quot;\&amp;quot;&amp;quot;$i&amp;quot;\&amp;quot;&amp;quot;&amp;quot;,&amp;quot;}else{$i=&amp;quot;\&amp;quot;&amp;quot;$i&amp;quot;\&amp;quot;&amp;quot;}}}1&#39;`
    	sed -i &amp;quot;2s|.*|$replaceline|&amp;quot; $i
    done
$ sed -i &#39;2s/\(:[[:blank:]]*\)\(.*\)/\1[\2]/&#39; *.markdown
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;40-gnome-terminal-go-to-the-same-directory&#34;&gt;40. Gnome-terminal go to the same directory&lt;/h3&gt;

&lt;p&gt;Added following definition(this is a bug)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim ~/.zshrc
. /etc/profile.d/vte.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;41-asoundconf&#34;&gt;41. asoundconf&lt;/h3&gt;

&lt;p&gt;Since I used GigaByte Brix for working, the alsasound should be configured.&lt;/p&gt;

&lt;p&gt;Default card is via HDMI, but I want to use PCH. Following are the steps:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ yaourt asoundconf
$ asoundconf list
Names of available sound cards:
HDMI
PCH
$ asoundconf set-default-card PCH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you could enjoy the PCH output.&lt;/p&gt;

&lt;h3 id=&#34;42-ocr-under-linux&#34;&gt;42. OCR under Linux&lt;/h3&gt;

&lt;p&gt;Using tesseract:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ convert beforeconvert.jpg -auto-level -compress none converted.tiff
$ sudo pacman -S tesseract tesseract-data-eng
$ tesseract converted.tiff myoutput
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above commands first convert the jpg to tiff, then install tesseract and its
language pack, then we could recoginze the text out of the tiff picture.&lt;/p&gt;

&lt;h3 id=&#34;43-vagrant-provision-with-shell-scripts&#34;&gt;43. Vagrant Provision With Shell Scripts&lt;/h3&gt;

&lt;p&gt;Configuration for the Vagrantfile:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Vagrant.configure(2) do |config|

  config.ssh.shell = &amp;quot;bash -c &#39;BASH_ENV=/etc/profile exec bash&#39;&amp;quot;
  config.vm.provision :shell, path: &amp;quot;bootstrap.sh&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;bootstrap.sh&lt;/code&gt; configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env bash
# Use the proxy for apt-get
sudo echo &#39;Acquire::http::Proxy
&amp;quot;http://192.168.1.69:3142&amp;quot;;&#39;&amp;gt;/etc/apt/apt.conf.d/01proxy
# Replace the repository
sudo sed -i &#39;s/security.ubuntu.com/mirrors.aliyun.com/g&#39; /etc/apt/sources.list
sudo sed -i &#39;s/us.archive.ubuntu.com/mirrors.aliyun.com/g&#39; /etc/apt/sources.list
sudo apt-get -y update
sudo apt-get -y upgrade

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;44-python-ocr-web-appliation&#34;&gt;44. Python OCR Web Appliation&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://realpython.com/blog/python/setting-up-a-simple-ocr-server/&#34;&gt;https://realpython.com/blog/python/setting-up-a-simple-ocr-server/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;45-jenkins-user-priviledge&#34;&gt;45. Jenkins user priviledge&lt;/h3&gt;

&lt;p&gt;Run jenkins as the user &amp;ldquo;johndoe&amp;rdquo;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Let&#39;s say the user you want is called &amp;quot;johndoe&amp;quot; and it has an userid=2000 and
groupid=2004 in your box, do this:

1. Edit /etc/password

jenkins:x:2000:2004::/var/lib/jenkins:/bin/bash

2. Change permissions so they reflect the new ID

chown jenkins:jenkins -Rv /var/cache/jenkins/
chown -Rv jenkins:jenkins /var/lib/jenkins/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;46-disable-auto-detect-ethernet-name&#34;&gt;46. Disable auto detect Ethernet Name&lt;/h3&gt;

&lt;p&gt;On Ubuntu16.04:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Try this: Edit your /etc/default/grub. Change the line from

GRUB_CMDLINE_LINUX=&amp;quot;&amp;quot;
to

GRUB_CMDLINE_LINUX=&amp;quot;net.ifnames=0 biosdevname=0&amp;quot;
and, finally run:

# update-grub
as root, and reboot your system.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;47-centos-network-issue&#34;&gt;47. CentOS Network issue&lt;/h3&gt;

&lt;p&gt;eth0 works but eth1/2/3/4 failed, because those SB didn&amp;rsquo;t enable NetworkManager
Service!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl enable NetworkManager.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;48-vagrant-ansible&#34;&gt;48. Vagrant/Ansible&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.codementor.io/development-process/tutorial/wrapping-lamp-project-into-vagrant-with-ansible&#34;&gt;https://www.codementor.io/development-process/tutorial/wrapping-lamp-project-into-vagrant-with-ansible&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;49-install-vagrant-libvirt-in-archlinux&#34;&gt;49. Install vagrant-libvirt in ArchLinux&lt;/h3&gt;

&lt;p&gt;Via following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ CONFIGURE_ARGS=&#39;with-ldflags=-L/opt/vagrant/embedded/lib with-libvirt-include=/usr/include/libvirt with-libvirt-lib=/usr/lib&#39; \
  GEM_HOME=~/.vagrant.d/gems GEM_PATH=$GEM_HOME:/opt/vagrant/embedded/gems PATH=/opt/vagrant/embedded/bin:$PATH \
  vagrant plugin install vagrant-libvirt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fix bug:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export PATH=/opt/vagrant/embedded/bin:$PATH
export GEM_HOME=~/.vagrant.d/gems
export GEM_PATH=$GEM_HOME:/opt/vagrant/embedded/gems
gem uninstall ruby-libvirt
sudo mv /opt/vagrant/embedded/lib/libcurl.so{,.backup}
sudo mv /opt/vagrant/embedded/lib/libcurl.so.4{,.backup}
sudo mv /opt/vagrant/embedded/lib/libcurl.so.4.4.0{,.backup}
sudo mv /opt/vagrant/embedded/lib/pkgconfig/libcurl.pc{,.backup}
gem source -r https://rubygems.org
gem source -a http://mirrors.aliyun.com/rubygems
gem install ruby-libvirt
sudo mv /opt/vagrant/embedded/lib/libcurl.so{.backup,}
sudo mv /opt/vagrant/embedded/lib/libcurl.so.4{.backup,}
sudo mv /opt/vagrant/embedded/lib/libcurl.so.4.4.0{.backup,}
sudo mv /opt/vagrant/embedded/lib/pkgconfig/libcurl.pc{.backup,}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;50-update-ca-trust&#34;&gt;50. update-ca-trust&lt;/h3&gt;

&lt;p&gt;Using &lt;code&gt;update-ca-trust&lt;/code&gt; could solve curl&amp;rsquo;s CA ISSUE.&lt;/p&gt;

&lt;h3 id=&#34;51-squid-quickly&#34;&gt;51. Squid quickly&lt;/h3&gt;

&lt;p&gt;Install and run squid via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run --name squid -d --restart=always \
  --publish 3128:3128 \
  --volume /srv/docker/squid/cache:/var/spool/squid3 \
  sameersbn/squid:3.3.8-16
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;52-installing-haroopad-on-centos&#34;&gt;52. Installing Haroopad On CentOS&lt;/h3&gt;

&lt;p&gt;URL:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.bonashen.com/post/artifice/20140805-install-haroopad-on-fedora-20-64bit&#34;&gt;http://www.bonashen.com/post/artifice/20140805-install-haroopad-on-fedora-20-64bit&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;53-xen-tools-issue&#34;&gt;53. xen-tools issue&lt;/h3&gt;

&lt;p&gt;Switching keystroke.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hello! first install the xentools of your linux vm, then in the tools of xencenter hit
options , go to the console, change the keyboard shortcut for the fullscreen of vm from
ctrl alt to f12. then you can use the ctrl alt f1 to launch the console of your vm
linux
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;54-delete-sr-in-xenserver&#34;&gt;54. Delete sr in XenServer&lt;/h3&gt;

&lt;p&gt;Some tips, may be indentified later:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   15  service xapi restart
   16  exit
   17  xe list
   18  xe sr list
   19  xe sr-list
   20  xe pif 36be98fc-e046-44bf-aaa9-77e7c1f228b5
   21  xe pif-list sr-uuid=36be98fc-e046-44bf-aaa9-77e7c1f228b5
   22  xe pif-list sr_uuid=36be98fc-e046-44bf-aaa9-77e7c1f228b5
   23  xe pif-list sr-uuid=36be98fc-e046-44bf-aaa9-77e7c1f228b5
   24  xe pif-list help
   25  xe pif-list 
   26  help xe pif-list 
   27  xe help pif-list 
   28  xe help  pdp-list 
   29  xe  help
   30  xe  help --all 
   31  xe pbd-list
   32  xe pif-list 
   33  xe pif-list sr-uuid=36be98fc-e046-44bf-aaa9-77e7c1f228b5
   34  xe pbd-list sr-uuid=36be98fc-e046-44bf-aaa9-77e7c1f228b5
   35  xe pbd-unplug uuid=6f5d5678-87be-c5ba-7c57-8d01ba00c3ba
   36  xe pbd-list sr-uuid=36be98fc-e046-44bf-aaa9-77e7c1f228b5
   37  xe sr-unplug uuid=36be98fc-e046-44bf-aaa9-77e7c1f228b5
   38  xe help --all | grep sr
   39  xe sr-destroy uuid=36be98fc-e046-44bf-aaa9-77e7c1f228b5
   40  xe sr-detach uuid=36be98fc-e046-44bf-aaa9-77e7c1f228b5
   41  xe sr-forget uuid=36be98fc-e046-44bf-aaa9-77e7c1f228b5
   42  history
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;55-vagrant-for-junos&#34;&gt;55. Vagrant for junos&lt;/h3&gt;

&lt;p&gt;Quickly setup junos dev env.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vagrant box add hc-download --name &amp;quot;juniper/ffp-12.1X47-D15.4-packetmode&amp;quot;
$ vagrant init juniper/ffp-12.1X47-D15.4-packetmode
$ vagrant plugin install vagrant-junos
$ vagrant plugin install vagrant-host-shell
$ vagrant up --provider virtualbox
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;56-cloudmonkey-error&#34;&gt;56. cloudmonkey error&lt;/h3&gt;

&lt;p&gt;request-toolbelt missing, solved via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ easy_install --upgrade pip &amp;amp;&amp;amp; pip install --upgrade setuptools &amp;amp;&amp;amp; pip install --upgrade \
distribute &amp;amp;&amp;amp; wget https://bootstrap.pypa.io/ez_setup.py -O - | python
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Simple solved:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pip install --upgrade setuptools
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;57-cloudmonkey-for-installing-templates&#34;&gt;57. cloudmonkey for installing templates&lt;/h3&gt;

&lt;p&gt;Install templates via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cloudmonkey list zones name=FirstZone | grep ^id | awk {&#39;print $3&#39;}
$  cloudmonkey register template hypervisor=XenServer
zoneid=47865946-c129-424c-9fe4-a2e1786193cb format=vhd name=ubuntu1404
displaytext=ubuntu1404 ispublic=true ostypeid=8f94fb50-5561-11e6-993d-5254002a1e68
hvm=false passwordenabled=true url=http://192.168.1.69/ubuntu1404.vhd
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;58-make-specific-windows-image&#34;&gt;58. make specific windows image&lt;/h3&gt;

&lt;p&gt;Make the virtualbox based win2008 datacenter version:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ make virtualbox/eval-win2008r2-datacenter
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;59-pushbullet-app&#34;&gt;59. pushbullet app&lt;/h3&gt;

&lt;p&gt;Could use it in IOT projects:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.pushbullet.com/&#34;&gt;https://docs.pushbullet.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;60-virtualbox-and-cloudstack&#34;&gt;60. Virtualbox And Cloudstack&lt;/h3&gt;

&lt;p&gt;For building a minimum environment:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.shapeblue.com/virtualbox-test-env/&#34;&gt;http://www.shapeblue.com/virtualbox-test-env/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;61-windows-lifecycle&#34;&gt;61. Windows LifeCycle&lt;/h3&gt;

&lt;p&gt;Find out the lifecycle of windows:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://support.microsoft.com/en-us/lifecycle/search?sort=PN&amp;amp;alpha=Windows%20Server%202008%20R2&amp;amp;Filter=FilterNO&#34;&gt;https://support.microsoft.com/en-us/lifecycle/search?sort=PN&amp;amp;alpha=Windows%20Server%202008%20R2&amp;amp;Filter=FilterNO&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;62-creately-website&#34;&gt;62. Creately website&lt;/h3&gt;

&lt;p&gt;For drawing beautiful network diagrams:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://creately.com/app/#&#34;&gt;https://creately.com/app/#&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can login with your google profiles.&lt;/p&gt;

&lt;h3 id=&#34;63-default-route-for-centos&#34;&gt;63. Default route for CentOS&lt;/h3&gt;

&lt;p&gt;Add following in &lt;code&gt;/etc/sysconfig/network-scripts/ifcfg-cloudbr&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DEFROUTE=yes
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;64-ovs-bridge-example&#34;&gt;64. OVS Bridge example&lt;/h3&gt;

&lt;p&gt;You can remove some parameters, like intefaceid, target dev, alias name, etc.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;interface type=&#39;bridge&#39;&amp;gt;
      &amp;lt;mac address=&#39;52:54:00:63:d2:1e&#39;/&amp;gt;
      &amp;lt;source bridge=&#39;ovsbr0&#39;/&amp;gt;
      &amp;lt;virtualport type=&#39;openvswitch&#39;&amp;gt;
        &amp;lt;parameters interfaceid=&#39;3f320d2c-7adc-46dd-857c-fb04a96ab416&#39;/&amp;gt;
      &amp;lt;/virtualport&amp;gt;
      &amp;lt;target dev=&#39;vnet7&#39;/&amp;gt;
      &amp;lt;model type=&#39;virtio&#39;/&amp;gt;
      &amp;lt;alias name=&#39;net1&#39;/&amp;gt;
      &amp;lt;address type=&#39;pci&#39; domain=&#39;0x0000&#39; bus=&#39;0x00&#39; slot=&#39;0x07&#39; function=&#39;0x0&#39;/&amp;gt;
    &amp;lt;/interface&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;65-flatpak&#34;&gt;65. flatpak&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://linux.cn/article-7673-1.html?utm_source=weibo&amp;amp;utm_medium=weibo&#34;&gt;https://linux.cn/article-7673-1.html?utm_source=weibo&amp;amp;utm_medium=weibo&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;66-cloudstack-apis&#34;&gt;66. CloudStack APIs&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.idcf.jp/cloud/introduction/&#34;&gt;http://docs.idcf.jp/cloud/introduction/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/idcf/cloudstack-api&#34;&gt;https://github.com/idcf/cloudstack-api&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;67-specify-vagrant-deployment-vars-in-vagrantfile&#34;&gt;67. Specify vagrant deployment vars in Vagrantfile&lt;/h3&gt;

&lt;p&gt;An example in Vagrantfile:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  # Install CloudStack Agent node. 
  config.vm.define &amp;quot;allinone&amp;quot; do |allinone|
    allinone.vm.provision :ansible do |ansible|
      ansible.playbook = &amp;quot;./Ansible/CloudStackAgent.yml&amp;quot;
      ansible.limit = CLOUDSTACK_ALLINONE_HOSTNAME
      ansible.inventory_path = &amp;quot;./Ansible/vagrant&amp;quot;
      ansible.inventory_path = &amp;quot;./Ansible/vagrant&amp;quot;
      ansible.extra_vars = { ansible_ssh_user: &#39;vagrant&#39; }
      ansible.extra_vars = { ansible_ssh_pass: &#39;vagrant&#39; }
      ansible.verbose = &#39;vvvv&#39;
    end
  end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;68-ssh-login-with-rsa-issue&#34;&gt;68. ssh login with RSA Issue&lt;/h3&gt;

&lt;p&gt;First add following parameters:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vim /etc/ssh/sshd_config
RSAAuthentication yes
PubkeyAuthentication yes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then restart the sshd service and also change the priviledge of the ssh configuration
directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ chmod go-w ~/
$ chmod 700 ~/.ssh
$ chmod 600 ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now restart the sshd service and it will work properly.&lt;/p&gt;

&lt;h3 id=&#34;69-auto-hide-menubar-in-gnome-terminal&#34;&gt;69. Auto-Hide Menubar in gnome-terminal&lt;/h3&gt;

&lt;p&gt;Under ArchLinux + Awesome, configure it via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim ~/.config/rc.lua
terminal = &amp;quot;gnome-terminal --hide-menubar&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;70-qemu-qcow2-format-convertion&#34;&gt;70. Qemu qcow2 Format Convertion&lt;/h3&gt;

&lt;p&gt;Use following commands for convert to 0.10 version of qemu image:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ qemu-img convert -f qcow2 -O qcow2 -o compat=0.10 Origin.qcow2 Converted.qcow2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;71-grub-default-ok-for-packer&#34;&gt;71. grub default OK For packer&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;net.ifnames=0 biosdevname=0 quiet text splash nomodeset&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;hugo-after-changing-ssh-key&#34;&gt;Hugo After Changing ssh-key&lt;/h3&gt;

&lt;p&gt;Better if you remove the initial &lt;code&gt;.travis.yml&lt;/code&gt;, and touch again.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ touch .travis.yml
$ travis login --org
$ cp ~/.ssh/id_rsa ./
$ travis encrypt-file id_rsa --add
$ rm -f ./id_rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then add the hint message into your &lt;code&gt;.travis.yml&lt;/code&gt; file, update.&lt;/p&gt;

&lt;h3 id=&#34;72-on-installing-xenserver&#34;&gt;72. On installing XenServer&lt;/h3&gt;

&lt;p&gt;Use ultraiso could directly write XenServer iso into a flash disk, then you could use
this flash disk for booting up the machine.&lt;/p&gt;

&lt;h3 id=&#34;73-resume-ansible-playbook-running&#34;&gt;73. Resume ansible-playbook running&lt;/h3&gt;

&lt;p&gt;Command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ansible-playbook -i inventory OnecloudPlaybooks/LAMP/main.yml  --start-at-task=&amp;quot;Disable
Apache modules&amp;quot; -u vagrant -k
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;74-force-install&#34;&gt;74. Force install&lt;/h3&gt;

&lt;p&gt;apt-get method:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ /usr/bin/apt-get -y -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confold 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;75-slack-and-ssh&#34;&gt;75. slack and ssh&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000006681056&#34;&gt;https://segmentfault.com/a/1190000006681056&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;76-php-info&#34;&gt;76. php info&lt;/h3&gt;

&lt;p&gt;Display php info:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php

// Show all information, defaults to INFO_ALL
phpinfo();

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;77-wordpress&#34;&gt;77. WordPress&lt;/h3&gt;

&lt;p&gt;Edit the wordpress:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wp-config.php in the root of your website and add there two lines:
define(&#39;WP_DEBUG&#39;, true);
@ini_set(&#39;display_errors&#39;, 1);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;78-packer-specify-var&#34;&gt;78. Packer Specify var&lt;/h3&gt;

&lt;p&gt;For using ansible playbooks:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;packer build \
    -var &#39;aws_access_key=foo&#39; \
    -var &#39;aws_secret_key=bar&#39; \
    template.json
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;79-minimum-cloudstack-mem-usage&#34;&gt;79. Minimum CloudStack Mem Usage&lt;/h3&gt;

&lt;p&gt;To limit the memory usage.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u cloud -p&amp;lt;password&amp;gt;
UPDATE cloud.service_offering SET ram_size=&#39;128&#39;, speed=&#39;128&#39; WHERE vm_type=&#39;domainrouter&#39;;
UPDATE cloud.service_offering SET ram_size=&#39;128&#39;, speed=&#39;128&#39; WHERE vm_type=&#39;elasticloadbalancervm&#39;;
UPDATE cloud.service_offering SET ram_size=&#39;128&#39;, speed=&#39;128&#39; WHERE vm_type=&#39;secondarystoragevm&#39;;
UPDATE cloud.service_offering SET ram_size=&#39;128&#39;, speed=&#39;128&#39; WHERE vm_type=&#39;internalloadbalancervm&#39;;
UPDATE cloud.service_offering SET ram_size=&#39;128&#39;, speed=&#39;128&#39; WHERE vm_type=&#39;consoleproxy&#39;;
quit

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;80-nethogs-in-ubuntu14-04&#34;&gt;80. Nethogs In Ubuntu14.04&lt;/h3&gt;

&lt;p&gt;The default version of nethogs is too old, thus won&amp;rsquo;t be used properly.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# wget -c https://github.com/raboof/nethogs/archive/v0.8.5.tar.gz
# tar xf v0.8.5.tar.gz 
# cd ./nethogs-0.8.5/
# sudo apt-get install libncurses5-dev libpcap-dev
# make &amp;amp;&amp;amp; sudo make install 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;81-vagrant-disk-usage&#34;&gt;81. Vagrant Disk Usage&lt;/h3&gt;

&lt;p&gt;Standard VS LVM:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Standard: 
    qemu: Filesystem      Size  Used Avail Use% Mounted on
    qemu: udev            228M     0  228M   0% /dev
    qemu: tmpfs            49M  1.8M   48M   4% /run
    qemu: /dev/vda1       211G  1.1G  199G   1% /
    qemu: tmpfs           245M     0  245M   0% /dev/shm
    qemu: tmpfs           5.0M     0  5.0M   0% /run/lock
    qemu: tmpfs           245M     0  245M   0% /sys/fs/cgroup
    qemu: tmpfs            49M     0   49M   0% /run/user/0
LVM:
    qemu: Filesystem                   Size  Used Avail Use% Mounted on
    qemu: udev                         227M     0  227M   0% /dev
    qemu: tmpfs                         49M  1.9M   48M   4% /run
    qemu: /dev/mapper/ubuntu--vg-root  3.0G  1.1G  1.8G  37% /
    qemu: tmpfs                        245M     0  245M   0% /dev/shm
    qemu: tmpfs                        5.0M     0  5.0M   0% /run/lock
    qemu: tmpfs                        245M     0  245M   0% /sys/fs/cgroup
    qemu: /dev/vda1                    472M   53M  395M  12% /boot
    qemu: tmpfs                         49M     0   49M   0% /run/user/0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The standard will take very long time for shrinking the disk.&lt;/p&gt;

&lt;p&gt;So we have to choose lvm, and use vagrant command for enlarge it during start up.&lt;br /&gt;
An example of Vagrantfile is listed as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# -*- mode: ruby -*-
# vi: set ft=ruby :

############### Definitions Comes Here #################
OPENSTACK_HOSTNAME = &amp;quot;openstackallinone&amp;quot;


############### Vagrant Configuration Here #############
Vagrant.configure(2) do |config|

  # vagrant issues #1673..fixes hang with configure_networks
  config.ssh.shell = &amp;quot;bash -c &#39;BASH_ENV=/etc/profile exec bash&#39;&amp;quot;
  config.vm.provision :shell, path: &amp;quot;add_new_disk.sh&amp;quot;
  config.ssh.username = &#39;root&#39;
  config.ssh.password = &#39;YourPasswordForRoot&#39;
  config.ssh.insert_key = &#39;true&#39;
  config.vm.provider :libvirt do |domain|
    domain.nic_model_type = &#39;e1000&#39;
    domain.memory = 384
    domain.nested = true
    domain.cpu_mode = &#39;host-model&#39;
  end

  # openstackallinone node.
  # Add one networking, modify hostname, define memory, CPU cores.
  config.vm.define :openstackallinone do |openstackallinone|
    openstackallinone.vm.box = &amp;quot;Ubuntu1604OneLVM&amp;quot;
    openstackallinone.vm.boot_timeout = &#39;36000&#39;
    openstackallinone.vm.hostname = OPENSTACK_HOSTNAME
    openstackallinone.vm.network :public_network, 
	    :dev =&amp;gt; &amp;quot;br0&amp;quot;,
	    :mode =&amp;gt; &amp;quot;bridge&amp;quot;,
	    :type =&amp;gt; &amp;quot;bridge&amp;quot;,
	    :ip =&amp;gt; &amp;quot;192.168.10.33&amp;quot;
    # Disable mounting of vagrant folder as it&#39;s not supported on xenserver
    openstackallinone.vm.synced_folder &amp;quot;.&amp;quot;, &amp;quot;/vagrant&amp;quot;, disabled: true
    openstackallinone.vm.provider :libvirt do |domain|
      domain.memory = 10240
      domain.cpus = 8
      domain.storage :file, :size =&amp;gt; &#39;200G&#39;
      domain.storage_pool_name = &#39;XenStoragePool&#39;
      domain.nested = true
      domain.cpu_mode = &#39;host-model&#39;
      domain.nic_model_type = &#39;virtio&#39;
      domain.disk_bus = &#39;virtio&#39;
      domain.volume_cache = &#39;writeback&#39;
    end
  end

end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make sure your &lt;code&gt;add_new_disk.sh&lt;/code&gt; avaiable:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set -e
set -x

if [ -f /etc/disk_added_date ]
then
   echo &amp;quot;disk already added so exiting.&amp;quot;
   exit 0
fi


sudo fdisk -u /dev/vdb &amp;lt;&amp;lt;EOF
n
p
1


t
8e
w
EOF

pvcreate /dev/vdb1
vgextend ubuntu-vg /dev/vdb1
lvextend -l +100%FREE  /dev/ubuntu-vg/root
resize2fs /dev/ubuntu-vg/root 

date &amp;gt; /etc/disk_added_date
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;82-quickly-add-swapfile&#34;&gt;82. Quickly add swapfile&lt;/h3&gt;

&lt;p&gt;Add swapfile.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &#39;/swapfile none swap sw 0 0&#39; | sudo tee -a /etc/fstab
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;83-vmware-tips&#34;&gt;83. Vmware tips&lt;/h3&gt;

&lt;p&gt;Issue:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vmmon-only/linux/driver.c:390:8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fixed by:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cd /usr/lib/vmware/modules/source
# tar xf vmmon.tar
# nano ./vmmon-only/linux/driver.c
 #ifdef VMX86_DEVEL 
    unregister_chrdev(linuxState.major, linuxState.deviceName); 
 #else 
-   if (misc_deregister(&amp;amp;linuxState.misc)) { 
-      Warning(&amp;quot;Module %s: error unregistering\n&amp;quot;, linuxState.deviceName); 
-   } 
+   misc_deregister(&amp;amp;linuxState.misc); 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then recompile the modules via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# tar cf vmmon.tar ./vmmon-only
# vmware-modconfig --console --install-all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Before start vmware, you should include following library:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export LD_LIBRARY_PATH=/usr/lib/vmware/lib/libglibmm-2.4.so.1/:$LD_LIBRARY_PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;84-good-material-on-openstack-building&#34;&gt;84. Good Material On OpenStack building&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.l1n3.net/category/cloud/openstack/&#34;&gt;http://blog.l1n3.net/category/cloud/openstack/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://cunninghamshane.com/deploying-and-customizing-openstack-mitaka-with-openstack-ansible/&#34;&gt;https://cunninghamshane.com/deploying-and-customizing-openstack-mitaka-with-openstack-ansible/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;85-digital-ocean-docker-issue&#34;&gt;85. Digital Ocean docker issue&lt;/h3&gt;

&lt;p&gt;Issue:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DJANGO_APP=$(docker run -d -i -t -p 8000:8000 ubuntu /bin/bash)
WARNING: Docker detected local DNS server on resolv.conf. Using default external servers: [8.8.8.8 8.8.4.4]
WARNING: IPv4 forwarding is disabled.
2013/09/12 12:52:02 Error: Error starting container 037aac8ca3ab: iptables failed: iptables -t nat -A DOCKER -p tcp --dport 8000 ! -i docker0 -j DNAT --to-destination 172.17.0.3:8000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Solved by:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ modprobe xt_conntrack
$ sudo service docker restart
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;86-studying-material-in-weekend&#34;&gt;86. Studying material in weekend&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.zybuluo.com/gump88/note/440777&#34;&gt;https://www.zybuluo.com/gump88/note/440777&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://geek.csdn.net/news/detail/65292&#34;&gt;http://geek.csdn.net/news/detail/65292&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;87-xzoom&#34;&gt;87. xzoom&lt;/h3&gt;

&lt;p&gt;Could be a desktop magnifier. Install it via yaourt xzoom.&lt;/p&gt;

&lt;h3 id=&#34;88-questions&#34;&gt;88.  Questions&lt;/h3&gt;

&lt;p&gt;To be investigated:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
十台服务器，关于并发的问题
十台 8C 16G 100M 这样配置的服务器，要是求支持 3w 并发，简单的三台 web ，做 nginx ，两
台调度器，做 lvs+keepalived ，四台做数据库集群架构，用 amoeba 做读写分离，简单的主从复
制，，这样的一个简单的架构方案能抗住 3w 并发吗？？？
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;89-convertion-for-mobi&#34;&gt;89. Convertion for mobi&lt;/h3&gt;

&lt;p&gt;If your file extension is doc, then first convert it to rtf in libreoffice, then use
calibre for converting it to mobi.&lt;/p&gt;

&lt;h3 id=&#34;90-linux-pc-benchmark&#34;&gt;90. Linux PC Benchmark&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://linux.cn/article-7810-1.html?utm_source=weibo&amp;amp;utm_medium=weibo&#34;&gt;https://linux.cn/article-7810-1.html?utm_source=weibo&amp;amp;utm_medium=weibo&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>