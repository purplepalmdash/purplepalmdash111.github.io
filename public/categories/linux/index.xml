<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Dash</title>
    <link>http://purplepalmdash.github.io/categories/linux/</link>
    <description>Recent content in Linux on Dash</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Jul 2016 15:36:43 +0000</lastBuildDate>
    <atom:link href="http://purplepalmdash.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Using hugo</title>
      <link>http://purplepalmdash.github.io/2016/07/04/using-hugo/</link>
      <pubDate>Mon, 04 Jul 2016 15:36:43 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/07/04/using-hugo/</guid>
      <description>

&lt;p&gt;For switching my blogging engine from octopress to hugo, following are the steps.&lt;/p&gt;

&lt;h3 id=&#34;installing-go&#34;&gt;Installing GO&lt;/h3&gt;

&lt;p&gt;ArchLinux installation is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pacman -S go
$ mkdir -p ~/go/{bin,src}
$ export GOPATH=~/go
$ export PATH=&amp;quot;$PATH:$GOPATH/bin&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-hugo&#34;&gt;Get Hugo&lt;/h3&gt;

&lt;p&gt;Hugo could be fetched directly from github, install it via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ Notice you have to use redsocks!
$ go get -u -v github.com/spf13/hugo
$ which hugo
/home/vagrant/go/bin/hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;first-blog&#34;&gt;First Blog&lt;/h3&gt;

&lt;p&gt;Create a new site:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site myblog
$ tree myblog
myblog/
|-- archetypes
|-- config.toml
|-- content
|-- data
|-- layouts
|-- static
`-- themes

6 directories, 1 file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Creat a new blog:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new post/hello.md
$ vim /home/vagrant/Code/myblog/content/post/hello.md
$ cd themes/
    git clone git@github.com:dim0627/hugo_theme_beg.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run preview of the blog:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server -w --theme=hugo_theme_beg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now open browser for visiting `&lt;a href=&#34;http://localhost:1313&amp;quot;&#34;&gt;http://localhost:1313&amp;quot;&lt;/a&gt;, you could see:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_07_04_16_35_26_464x401.jpg&#34; alt=&#34;/images/2016_07_04_16_35_26_464x401.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;import-from-octopress&#34;&gt;Import From Octopress&lt;/h3&gt;

&lt;p&gt;Import from existing Octopress via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>搭建基于docker的监控系统</title>
      <link>http://purplepalmdash.github.io/2016/06/20/da-jian-ji-yu-dockerde-jian-kong-xi-tong/</link>
      <pubDate>Mon, 20 Jun 2016 09:39:55 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/06/20/da-jian-ji-yu-dockerde-jian-kong-xi-tong/</guid>
      <description>

&lt;h3 id=&#34;graphite-grafana&#34;&gt;Graphite/Grafana&lt;/h3&gt;

&lt;p&gt;这两个用于记录和展示监控数据，通过以下命令可以快速搭建:&lt;/p&gt;

&lt;h4 id=&#34;graphite&#34;&gt;Graphite&lt;/h4&gt;

&lt;p&gt;开启容器:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir -p /local/path/to/graphite/storage/whisper/
$ sudo docker run -d \
  --name graphite \
  -p 8080:80 \
  -p 2003:2003 \
  -v /local/path/to/.htpasswd:/etc/nginx/.htpasswd \
  -v /local/path/to/graphite/storage/whisper:/opt/graphite/storage/whisper \
  sitespeedio/graphite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建htpasswd文件的方法可以参阅:&lt;br /&gt;
&lt;a href=&#34;http://httpd.apache.org/docs/2.2/programs/htpasswd.html&#34;&gt;http://httpd.apache.org/docs/2.2/programs/htpasswd.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;当然如果你使用默认的密码的话，用户名/密码是:guest/guest.&lt;/p&gt;

&lt;h4 id=&#34;grafana&#34;&gt;Grafana&lt;/h4&gt;

&lt;p&gt;开启容器:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mkdir -p /local/path/to/grafana
# docker run -d -p 3000:3000 --name=grafana -v /local/path/to/grafana:/var/lib/grafana  grafana/grafana
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;默认用户名/密码为admin/admin.&lt;/p&gt;

&lt;h3 id=&#34;collectd&#34;&gt;Collectd&lt;/h3&gt;

&lt;p&gt;用于采集节点机上的数据，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# docker run -d --net=host --privileged -v /:/hostfs:ro --name=collectd -e \
HOST_NAME=localhost -e \
GRAPHITE_HOST=192.168.1.79 andreasjansson/collectd-write-graphite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参数说明:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;--net=host : 	使用主机上的网络配置
GRAPHITE_HOST:  前面设置的graphite机器的地址
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;systemd-启动方式&#34;&gt;systemd 启动方式&lt;/h3&gt;

&lt;p&gt;collectd启动方式:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vim /usr/lib/systemd/system/collectddocker.service
[Unit]
Description=collectd container
Requires=docker.service
After=docker.service

[Service]
Restart=always
ExecStart=/usr/bin/docker start -a collectd
ExecStop=/usr/bin/docker stop -t 2 collectd

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动并使能服务:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl enable collectddocker.service
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>搭建无盘CentOS桌面环境</title>
      <link>http://purplepalmdash.github.io/2016/06/18/da-jian-wu-pan-centoszhuo-mian-huan-jing/</link>
      <pubDate>Sat, 18 Jun 2016 13:43:48 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/06/18/da-jian-wu-pan-centoszhuo-mian-huan-jing/</guid>
      <description>

&lt;h3 id=&#34;网络准备&#34;&gt;网络准备&lt;/h3&gt;

&lt;p&gt;创建一个无DHCP的网络:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_06_18_13_53_06_399x429.jpg&#34; alt=&#34;/images/2016_06_18_13_53_06_399x429.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;DHCP服务器我们将配置在PXE服务器节点上。&lt;/p&gt;

&lt;h3 id=&#34;pxe节点配置&#34;&gt;PXE节点配置&lt;/h3&gt;

&lt;h4 id=&#34;初始化配置&#34;&gt;初始化配置&lt;/h4&gt;

&lt;p&gt;最小化安装CentOS 7 Server。并配置其IP地址为&lt;code&gt;10.19.20.2&lt;/code&gt;.&lt;br /&gt;
关闭selinux和firewalld服务:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /etc/selinux/config 
SELINUX=disabled

# systemctl disable firewalld.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;使用dvd作为源&#34;&gt;使用DVD作为源&lt;/h4&gt;

&lt;p&gt;创建挂载目录并挂在DVD：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mkdir /cdrom
# mount -t iso9660 -o loop ./CentOS-7-x86_64-Everything-1511.iso /cdrom/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建新的repo文件:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /etc/yum.repos.d/local.repo

[LocalRepo]
name=Local Repository
baseurl=file:///cdrom
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成新的缓存：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mkdir back
# mv CentOS-* back
# yum makecache
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装一些必要的包:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum install -y vim wget
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;tftp-server&#34;&gt;TFTP Server&lt;/h4&gt;

&lt;p&gt;安装必要的包:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum -y install syslinux xinetd tftp-server
# mkdir /var/lib/tftpboot/pxelinux.cfg 
# cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置PXE：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vim /etc/xinetd.d/tftp 
disable = no
# systemctl start xinetd
# systemctl enable xinetd
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;dhcp服务器&#34;&gt;DHCP服务器&lt;/h4&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum install -y dhcp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vim /etc/dhcp/dhcpd.conf
    #
    # DHCP Server Configuration file.
    #   see /usr/share/doc/dhcp*/dhcpd.conf.example
    #   see dhcpd.conf(5) man page
    #
    # create new
    
    # specify domain name
    option domain-name &amp;quot;srv.world&amp;quot;;
    # specify name server&#39;s hostname or IP address
    option domain-name-servers dlp.srv.world;
    # default lease time
    default-lease-time 600;
    # max lease time
    max-lease-time 7200;
    # this DHCP server to be declared valid
    authoritative;
    # specify network address and subnet mask
    subnet 10.19.20.0 netmask 255.255.255.0 {
        # specify the range of lease IP address
        range dynamic-bootp 10.19.20.200 10.19.20.254;
        # specify broadcast address
        option broadcast-address 10.19.20.255;
        # specify default gateway
        option routers 10.19.20.1;
        option domain-name-servers   10.19.20.2;
        filename        &amp;quot;pxelinux.0&amp;quot;;
        next-server     10.19.20.2;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动并使能服务:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# systemctl start dhcpd 
# systemctl enable dhcpd 
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;pxe服务器&#34;&gt;PXE服务器&lt;/h4&gt;

&lt;p&gt;安装一些必要的包:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum -y install dracut-network nfs-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在PXE服务器上构建一个无盘系统用的文件系统&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mkdir -p /var/lib/tftpboot/centos7/root 
# yum groups -y install &amp;quot;Server with GUI&amp;quot; --releasever=7 --installroot=/var/lib/tftpboot/centos7/root/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;给出root用户的默认密码:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# python -c &#39;import crypt,getpass; \ 
print(crypt.crypt(getpass.getpass(), \
crypt.mksalt(crypt.METHOD_SHA512)))&#39; 
Password:
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;填入root密码到/etc/shadown中:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vim /var/lib/tftpboot/centos7/root/etc/shadow
root:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx:16372:0:99999:7:::
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;构建&lt;code&gt;/etc/fstab&lt;/code&gt;文件:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /var/lib/tftpboot/centos7/root/etc/fstab
 none    /tmp        tmpfs   defaults   0 0
tmpfs   /dev/shm    tmpfs   defaults   0 0
sysfs   /sys        sysfs   defaults   0 0
proc    /proc       proc    defaults   0 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下载pxe所需要的vmlinuz和initrd.img文件:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# wget -P /var/lib/tftpboot/centos7/ \
http://mirrors.aliyun.com/centos/7/os/x86_64/images/pxeboot/vmlinuz \
http://mirrors.aliyun.com/centos/7/os/x86_64/images/pxeboot/initrd.img
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建默认的pxe启动项目:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /var/lib/tftpboot/pxelinux.cfg/default
# create new
 default centos7

label centos7
    kernel centos7/vmlinuz
    append initrd=centos7/initrd.img root=nfs:10.19.20.2:/var/lib/tftpboot/centos7/root rw selinux=0 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;映射NFS服务器:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vi /etc/exports
/var/lib/tftpboot/centos7/root 10.19.20.0/24(rw,no_root_squash)
# systemctl start rpcbind nfs-server 
# systemctl enable rpcbind nfs-server 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在在网络中加入新的机器，从PXE启动后，将直接进入到CentOS7的桌面。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>不同桌面环境占用内存/CPU对比</title>
      <link>http://purplepalmdash.github.io/2016/05/31/bu-tong-zhuo-mian-huan-jing-zhan-yong-nei-cun-slash-cpudui-bi/</link>
      <pubDate>Tue, 31 May 2016 09:25:38 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/05/31/bu-tong-zhuo-mian-huan-jing-zhan-yong-nei-cun-slash-cpudui-bi/</guid>
      <description>

&lt;p&gt;对比xfce4, lxde, gnome, mate等桌面环境占用内存/CPU对比&lt;/p&gt;

&lt;h3 id=&#34;先决条件&#34;&gt;先决条件&lt;/h3&gt;

&lt;p&gt;使用vagrant的镜像(ubuntu14.04):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vagrant box list
ubuntu1404                                   (virtualbox, 0)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;每一个桌面环境的验证如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vagrant init ubuntu1404
$ vim Vagrantfile
  config.vm.provider &amp;quot;virtualbox&amp;quot; do |vb|
    # Display the VirtualBox GUI when booting the machine
  #  vb.gui = true
  
    # Customize the amount of memory on the VM:
    vb.memory = &amp;quot;1024&amp;quot;
  end
$ vagrant up
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;基础镜像占用内存&#34;&gt;基础镜像占用内存&lt;/h3&gt;

&lt;p&gt;用&lt;code&gt;free -m&lt;/code&gt;来查看系统运行时所占用内存：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_09_42_54_688x111.jpg&#34; alt=&#34;/images/2016_05_31_09_42_54_688x111.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;xfce4-xubuntu&#34;&gt;xfce4(xubuntu)&lt;/h3&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get install xubuntu-desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动xfce4桌面后，内存占用结果为：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_09_57_44_483x164.jpg&#34; alt=&#34;/images/2016_05_31_09_57_44_483x164.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;lxde-lubuntu&#34;&gt;lxde(lubuntu)&lt;/h3&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get install -y lubuntu-desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动lxde后，内存占用为:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_10_07_46_458x84.jpg&#34; alt=&#34;/images/2016_05_31_10_07_46_458x84.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;gnome-gnome-session-fallback&#34;&gt;gnome(gnome-session-fallback)&lt;/h3&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update; sudo apt-get install gnome-session-fallback
$ sudo apt-get install -y gdm xterm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动gnome-session-fallback后，内存占用为:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_10_22_08_490x185.jpg&#34; alt=&#34;/images/2016_05_31_10_22_08_490x185.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;unity&#34;&gt;unity&lt;/h3&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y ubuntu-desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动unity后，内存占用为:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_10_26_22_553x168.jpg&#34; alt=&#34;/images/2016_05_31_10_26_22_553x168.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;mate&#34;&gt;mate&lt;/h3&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-add-repository ppa:ubuntu-mate-dev/ppa
$ sudo apt-add-repository ppa:ubuntu-mate-dev/trusty-mate
$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade
$ sudo apt-get install --no-install-recommends ubuntu-mate-core ubuntu-mate-desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动mate后，内存占用为:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_10_50_58_486x148.jpg&#34; alt=&#34;/images/2016_05_31_10_50_58_486x148.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;kde&#34;&gt;KDE&lt;/h3&gt;

&lt;p&gt;安装:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y kubuntu-desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;内存占用:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_11_06_50_487x108.jpg&#34; alt=&#34;/images/2016_05_31_11_06_50_487x108.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;对比&#34;&gt;对比&lt;/h3&gt;

&lt;p&gt;统计结果:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_11_08_35_342x269.jpg&#34; alt=&#34;/images/2016_05_31_11_08_35_342x269.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;图例:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_31_11_10_32_896x593.jpg&#34; alt=&#34;/images/2016_05_31_11_10_32_896x593.jpg&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Working Tips on Ansible-cobbler(3)</title>
      <link>http://purplepalmdash.github.io/2016/05/18/working-tips-on-ansible-cobbler-3/</link>
      <pubDate>Wed, 18 May 2016 21:15:10 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/05/18/working-tips-on-ansible-cobbler-3/</guid>
      <description>

&lt;h3 id=&#34;apt-packages&#34;&gt;APT Packages&lt;/h3&gt;

&lt;p&gt;The downloaded deb files should be under &lt;code&gt;/var/cache/apt&lt;/code&gt;, use following command for copying to
another position:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find . | grep -i deb$ | xargs % cp % ~/Dest_Folder
$ scp -r ~/Dest_Folder Your_Cobbler_Machine
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;repositories&#34;&gt;Repositories&lt;/h3&gt;

&lt;p&gt;Install &lt;code&gt;dpkg-dev&lt;/code&gt; package, so we could generate the dpkg packages:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install -y dpkg-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a new repository:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_18_21_28_37_717x452.jpg&#34; alt=&#34;/images/2016_05_18_21_28_37_717x452.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Edit the advanced options:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_18_21_30_04_508x314.jpg&#34; alt=&#34;/images/2016_05_18_21_30_04_508x314.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Report the repository info via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@cobbler-ubuntu:~# cobbler repo report --name=ubuntu1604Mate
Name                           : ubuntu1604Mate
Apt Components (apt only)      : [&#39;main&#39;]
Apt Dist Names (apt only)      : [&#39;stable&#39;]
Arch                           : x86_64
Breed                          : apt
Comment                        : Ubuntu 16.04 Repository For installing MATE
Createrepo Flags               : &amp;lt;&amp;lt;inherit&amp;gt;&amp;gt;
Environment Variables          : {}
Keep Updated                   : False
Mirror                         : 
Mirror locally                 : True
Owners                         : [&#39;admin&#39;]
Priority                       : 99
External proxy URL             : 
RPM List                       : []
Yum Options                    : {}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Repository Structure Creation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir /srv/www/cobbler/repo_mirror/ubuntu1604Mate
$ cd /srv/www/cobbler/repo_mirror/ubuntu1604Mate
$ mkdir -p pool/main dists/stable/main/binary-i386 dists/stable/main/binary-amd64
$ cp ~/apt/debs/*.deb ./pool/main/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enable the &lt;code&gt;allow_unauthenticated&lt;/code&gt; options in kickstart file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /var/lib/cobbler/kickstarts/sample.seed
 d-i debian-installer/allow_unauthenticated boolean true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate the gpg key:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# gpg --gen-key
  gpg (GnuPG) 2.0.14; Copyright (C) 2009 Free Software Foundation, Inc.
  This is free software: you are free to change and redistribute it.
  There is NO WARRANTY, to the extent permitted by law.

  gpg: directory `/root/.gnupg&#39; created
  gpg: new configuration file `/root/.gnupg/gpg.conf&#39; created
  gpg: WARNING: options in `/root/.gnupg/gpg.conf&#39; are not yet active during this run
  gpg: keyring `/root/.gnupg/secring.gpg&#39; created
  gpg: keyring `/root/.gnupg/pubring.gpg&#39; created
 Please select what kind of key you want:
    (1) RSA and RSA (default)
    (2) DSA and Elgamal
    (3) DSA (sign only)
    (4) RSA (sign only)
 Your selection? 1
 RSA keys may be between 1024 and 4096 bits long.
 What keysize do you want? (2048)
 Requested keysize is 2048 bits
 Please specify how long the key should be valid.
          0 = key does not expire
       &amp;lt;n&amp;gt;  = key expires in n days
       &amp;lt;n&amp;gt;w = key expires in n weeks
       &amp;lt;n&amp;gt;m = key expires in n months
       &amp;lt;n&amp;gt;y = key expires in n years
 Key is valid for? (0)
 Key does not expire at all
 Is this correct? (y/N) y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For generating the random key, install the &lt;code&gt;haveged&lt;/code&gt; in system:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo aptitude install haveged
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List the keys via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# gpg --list-keys
/home/vagrant/.gnupg/pubring.gpg
--------------------------------
pub   2048R/16D87321 2016-05-18
uid                  xxxxx &amp;lt;xxxxxx@gmail.com&amp;gt;
sub   2048R/8C4A318A 2016-05-18
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate the pgp signature via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# gpg --export -a 16D87321&amp;gt;~/junk.key
# gpg --no-default-keyring --keyring /srv/www/cobbler/repo_mirror/ubuntu1604Mate/public.pgp --import ~/junk.key
# rm -f ~/junk.key
# chmod a+r /srv/www/cobbler/repo_mirror/ubuntu1604Mate/public.pgp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Re-Generate the repository infos via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /srv/www/cobbler/repo_mirror/ubuntu1604Mate/
$ vim reindex_apt.sh
$ chmod 777 reindex_apt.sh 
$ ./reindex_apt.sh 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The content of &lt;code&gt;reindex_apt.sh&lt;/code&gt; is listed as following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

GPG_NAME=16D87321
REPONAME=stable
VERSION=1.0

for bindir in `find dists/${REPONAME} -type d -name &amp;quot;binary*&amp;quot;`; do
    arch=`echo $bindir|cut -d&amp;quot;-&amp;quot; -f 2`
    echo &amp;quot;Processing ${bindir} with arch ${arch}&amp;quot;

    overrides_file=/tmp/overrides
    package_file=$bindir/Packages
    release_file=$bindir/Release

    # Create simple overrides file to stop warnings
    cat /dev/null &amp;gt; $overrides_file
    for pkg in `ls pool/main/ | grep -E &amp;quot;(all|${arch})\.deb&amp;quot;`; do
        pkg_name=`/usr/bin/dpkg-deb -f pool/main/${pkg} Package`
        echo &amp;quot;${pkg_name} Priority extra&amp;quot; &amp;gt;&amp;gt; $overrides_file
    done

    # Index of packages is written to Packages which is also zipped
    dpkg-scanpackages -a ${arch} pool/main $overrides_file &amp;gt; $package_file
    # The line above is also commonly written as:
    # dpkg-scanpackages -a ${arch} pool/main /dev/null &amp;gt; $package_file
    gzip -9c $package_file &amp;gt; ${package_file}.gz
    bzip2 -c $package_file &amp;gt; ${package_file}.bz2

    # Cleanup
    rm $overrides_file
done

# Release info goes into Release &amp;amp; Release.gpg which includes an md5 &amp;amp; sha1 hash of Packages.*
# Generate &amp;amp; sign release file
cd dists/${REPONAME}
cat &amp;gt; Release &amp;lt;&amp;lt;ENDRELEASE
Suite: ${REPONAME}
Version: ${VERSION}
Component: main
Origin: somewhere
Label: ubuntu1604Mate
Architecture: i386 amd64
Date: `date`
ENDRELEASE

# Generate hashes
echo &amp;quot;MD5Sum:&amp;quot; &amp;gt;&amp;gt; Release
for hashme in `find main -type f`; do
    md5=`openssl dgst -md5 ${hashme}|cut -d&amp;quot; &amp;quot; -f 2`
    size=`stat -c %s ${hashme}`
    echo &amp;quot; ${md5} ${size} ${hashme}&amp;quot; &amp;gt;&amp;gt; Release
done
echo &amp;quot;SHA1:&amp;quot; &amp;gt;&amp;gt; Release
for hashme in `find main -type f`; do
    sha1=`openssl dgst -sha1 ${hashme}|cut -d&amp;quot; &amp;quot; -f 2`
    size=`stat -c %s ${hashme}`
    echo &amp;quot; ${sha1} ${size} ${hashme}&amp;quot; &amp;gt;&amp;gt; Release
done

# Sign!
gpg --yes -u $GPG_NAME --sign -bao Release.gpg Release
cd -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now continue to modify the kickstart file for using the generated gpgs:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# pwd
/var/lib/cobbler/snippets
# cp preseed_apt_repo_config preseed_apt_repo_config_pgpkey
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;preseed_apt_repo_config_pgpkey&lt;/code&gt; should be listed as following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Additional repositories, local[0-9] available
#set $cur=1
#set $repo_data = $getVar(&amp;quot;repo_data&amp;quot;,[])
#for $repo in $repo_data
 #for $dist in $repo.apt_dists
 #set $comps = &amp;quot; &amp;quot;.join($repo.apt_components)
d-i apt-setup/local${cur}/repository string \
 #if $repo.mirror_locally
      http://$http_server/cblr/repo_mirror/${repo.name} $dist $comps
 #else
      ${repo.mirror} $dist $comps
 #end if
 #if $repo.comment != &amp;quot;&amp;quot;
d-i apt-setup/local${cur}/comment string ${repo.comment}
 #end if
 #if $repo.breed == &amp;quot;src&amp;quot;
# Enable deb-src lines
d-i apt-setup/local${cur}/source boolean false
 #end if
+++ # Add repo pgp pub key
+++ d-i apt-setup/local${cur}/key string \
+++       http://$http_server/cblr/repo_mirror/${repo.name}/public.pgp
 #set $cur=$cur+1
 #end for
#end for
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using the new preseed file, and changint the &lt;code&gt;preseed_apt_repo_config_pgpkey&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# pwd
/var/lib/cobbler/kickstarts
# cp sample.seed ubuntu1604.seed
# vim ubuntu1604.seed
-  $SNIPPET(&#39;preseed_apt_repo_config&#39;)
+  $SNIPPET(&#39;preseed_apt_repo_config_pgpkey&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Changing the seed in the &lt;code&gt;cobbler_web&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_18_22_25_48_732x294.jpg&#34; alt=&#34;/images/2016_05_18_22_25_48_732x294.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Use &lt;code&gt;cobbler sync&lt;/code&gt; for syncing the configuration.&lt;/p&gt;

&lt;h3 id=&#34;use-the-repository&#34;&gt;Use the Repository&lt;/h3&gt;

&lt;p&gt;Add the &lt;code&gt;ubuntu1604Mate&lt;/code&gt; into the Repos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_18_22_31_42_731x486.jpg&#34; alt=&#34;/images/2016_05_18_22_31_42_731x486.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After added, the configuration should be:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_18_22_33_00_471x149.jpg&#34; alt=&#34;/images/2016_05_18_22_33_00_471x149.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now &lt;code&gt;cobbler sync&lt;/code&gt; for syncing the configuration.&lt;/p&gt;

&lt;p&gt;Bug: you should move the &lt;code&gt;preseed_apt_repo_config&lt;/code&gt; and  then &lt;code&gt;cobbler sync&lt;/code&gt; then your deployment will be OK:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mv /var/lib/cobbler/snippets/preseed_apt_repo_config /root/
$ cobbler sync
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;added-mate-installation&#34;&gt;Added Mate Installation&lt;/h3&gt;

&lt;p&gt;Configure the preseed late:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cp /var/lib/cobbler/scripts/preseed_late_default /var/lib/cobbler/scripts/preseed_late_default_mate
# vim /var/lib/cobbler/scripts/preseed_late_default_mate
# vim preseed_late_default_mate 
$SNIPPET(&#39;post_install_network_config_deb&#39;)
$SNIPPET(&#39;late_apt_repo_config&#39;)
$SNIPPET(&#39;post_run_deb&#39;)
$SNIPPET(&#39;download_config_files&#39;)
+ $SNIPPET(&#39;ubuntumate&#39;)
$SNIPPET(&#39;kickstart_done&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now add the snippet of &lt;code&gt;ubuntumate&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cat ../snippets/ubuntumate 
echo &amp;quot;debconf debconf/frontend select noninteractive&amp;quot; | sudo debconf-set-selections
apt-get --allow-unauthenticated update -y
apt-get --allow-unauthenticated upgrade -y
apt-get --allow-unauthenticated install -y build-essential
### apt-get --allow-unauthenticated install -y ubuntu-mate-desktop
apt-get --allow-unauthenticated install -y vim
### apt-get --allow-unauthenticated install -y chromium-browser
### apt-get --allow-unauthenticated install -y meld vim-gtk
### apt-get --allow-unauthenticated install -y evince
### sudo apt-get --allow-unauthenticated install -y language-pack-zh-hans language-pack-zh-hans-base language-pack-gnome-zh-hans language-pack-gnome-zh-hans-base
### sudo apt-get --allow-unauthenticated install -y `check-language-support -l zh`
### sudo localectl set-locale LANG=zh_CN.UTF-8
### # TW/HK language support
### sudo apt-get --allow-unauthenticated install -y language-pack-zh-hant language-pack-zh-hant-base language-pack-gnome-zh-hant language-pack-gnome-zh-hant-base
### sudo apt-get --allow-unauthenticated install -y `check-language-support -l zh`
### apt-get --allow-unauthenticated install -y fcitx
### apt-get --allow-unauthenticated install -y fcitx-table-wubi fcitx-table-wubi-large
### apt-get --allow-unauthenticated install -y fcitx-googlepinyin
### apt-get --allow-unauthenticated install -y gimp
### apt-get --allow-unauthenticated install -y ibus-pinyin 
### apt-get --allow-unauthenticated install -y thunderbird-locale-en-us mythes-en-au hunspell-en-gb thunderbird-locale-en-gb fonts-arphic-ukai wbritish fcitx-sunpinyin openoffice.org-hyphenation language-pack-gnome-en hunspell-en-za fcitx-chewing fcitx-table-cangjie gimp-help-en language-pack-en mythes-en-us thunderbird-locale-en fcitx-module-cloudpinyin libreoffice-help-en-us firefox-locale-en libreoffice-help-en-gb fonts-arphic-uming hyphen-en-gb libreoffice-l10n-en-za fcitx-ui-qimpanel hunspell-en-au libreoffice-l10n-en-gb hyphen-en-us hunspell-en-ca 
### apt-get --allow-unauthenticated install -y zsh
### apt-get --allow-unauthenticated install -y fonts-wqy-zenhei fonts-wqy-microhei ttf-wqy-microhei  ttf-wqy-zenhei  xfonts-wqy
### apt-get --allow-unauthenticated install -y eclipse
### apt-get --allow-unauthenticated install -y gpicview
### apt-get --allow-unauthenticated install -y scrot
### apt-get --allow-unauthenticated install -y byobu
### apt-get --allow-unauthenticated install -y subversion git
### apt-get --allow-unauthenticated install -y kdiff3
### apt-get --allow-unauthenticated install -y docker

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use &lt;code&gt;cobbler sync&lt;/code&gt;, and now you could deploy mate desktop via cobbler.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tips On Maas 2.0</title>
      <link>http://purplepalmdash.github.io/2016/05/12/tips-on-maas-2-dot-0/</link>
      <pubDate>Thu, 12 May 2016 14:10:48 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/05/12/tips-on-maas-2-dot-0/</guid>
      <description>

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;p&gt;Based on Ubuntu16.04, install maas via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install -y maas
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After installation, create the default username/password via following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo maas-region createadmin --username=root --email=xxyy@xxyy.com
Password: 
Again: 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you could login to the &lt;code&gt;http://YourIP/MAAS&lt;/code&gt; via:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_05_12_14_25_12_456x494.jpg&#34; alt=&#34;/images/2016_05_12_14_25_12_456x494.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;using-api-to-talk&#34;&gt;Using API to talk&lt;/h3&gt;

&lt;p&gt;In maas cli, using following steps for generate the API key and use:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# sudo maas-region apikey --username=root
AYnuZY3gWTnpxJb7Kp:AtDG3yUmaDu8tXGzTc:tumR29xsRGL6A7T6M2G7LTETPP5kkDwC
# maas login mymaas http://10.17.17.2/MAAS/api/2.0
AYnuZY3gWTnpxJb7Kp:AtDG3yUmaDu8tXGzTc:tumR29xsRGL6A7T6M2G7LTETPP5kkDwC

You are now logged in to the MAAS server at
http://10.17.17.2/MAAS/api/2.0/ with the profile name &#39;mymaas&#39;.

For help with the available commands, try:

  maas mymaas --help

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Later we will use &lt;code&gt;mymaas&lt;/code&gt; for talk to MAAS Controller.&lt;/p&gt;

&lt;h3 id=&#34;add-boot-source&#34;&gt;Add Boot Source&lt;/h3&gt;

&lt;p&gt;Click &lt;code&gt;Images&lt;/code&gt;, you won&amp;rsquo;t see anything because the images are not downloaded. you could
download it manually via following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install simplestreams ubuntu-cloudimage-keyring apache2
$ sudo sstream-mirror --keyring=/usr/share/keyrings/ubuntu-cloudimage-keyring.gpg \
https://images.maas.io/ephemeral-v2/daily/ /var/www/html/maas/images/ephemeral-v2/daily \
&#39;arch=amd64&#39; &#39;subarch~(generic|hwe-t)&#39; &#39;release~(trusty|precise|xenial)&#39; --max=1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After downloading, the image content will be available under &lt;code&gt;/var/www/html/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Or, if you downloaded the html files before, do following steps for using your
pre-downloaded packages:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tar xJvf html.tar.bz2 -C /var/www/html/
$ sudo maas mymaas boot-sources create url=http://10.17.17.2/mirror/images/ephemeral-v2/releases/ keyring_filename=/usr/share/keyrings/ubuntu-cloudimage-keyring.gpg 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now there are two boot-sources in maas, delete the default one(Because we are in china,
and its goddamned GFW!)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dash@maascontroller:~$ sudo maas mymaas boot-source delete 1
Success.
Machine-readable output follows:

dash@maascontroller:~$ sudo maas mymaas boot-sources read
Success.
Machine-readable output follows:
[
    {
        &amp;quot;keyring_data&amp;quot;: &amp;quot;&amp;lt;memory at 0x7f4e9478b288&amp;gt;&amp;quot;,
        &amp;quot;resource_uri&amp;quot;: &amp;quot;/MAAS/api/2.0/boot-sources/2/&amp;quot;,
        &amp;quot;id&amp;quot;: 2,
        &amp;quot;url&amp;quot;: &amp;quot;http://10.17.17.2/mirror/images/ephemeral-v2/releases/&amp;quot;,
        &amp;quot;keyring_filename&amp;quot;: &amp;quot;/usr/share/keyrings/ubuntu-cloudimage-keyring.gpg&amp;quot;
    }
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Import boot-sources via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo maas mymaas boot-resources import
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will takes a little bit time for importing the boot images.&lt;/p&gt;

&lt;p&gt;For adding nodes:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://maas.ubuntu.com/docs2.0/nodes.html&#34;&gt;https://maas.ubuntu.com/docs2.0/nodes.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux Tips(5)</title>
      <link>http://purplepalmdash.github.io/2016/05/04/linux-tips-5/</link>
      <pubDate>Wed, 04 May 2016 20:03:21 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/05/04/linux-tips-5/</guid>
      <description>

&lt;h3 id=&#34;1-detach-running-tasks&#34;&gt;1. Detach Running Tasks&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Ctrl+Z&lt;/code&gt; for suspend the tasks, then &lt;code&gt;bg&lt;/code&gt; it, now you could use &lt;code&gt;disown %1&lt;/code&gt; for
detaching the running process.&lt;/p&gt;

&lt;p&gt;Next time you login, you will see this background task is also running.&lt;/p&gt;

&lt;h3 id=&#34;2-installation-of-cobbler&#34;&gt;2. Installation of Cobbler&lt;/h3&gt;

&lt;p&gt;Shell Scripts:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/luisbolson/1d0dc42976d2468171d0&#34;&gt;https://gist.github.com/luisbolson/1d0dc42976d2468171d0&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-yum-groups&#34;&gt;3. yum groups&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblings.narrabilis.com/creating-a-yum-repository-repo-and-creating-a-yum-group-to-install-kickstart&#34;&gt;http://ramblings.narrabilis.com/creating-a-yum-repository-repo-and-creating-a-yum-group-to-install-kickstart&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-rvm-issue&#34;&gt;4. rvm issue&lt;/h3&gt;

&lt;p&gt;rvm met &lt;code&gt;openssl.so (LoadError)&lt;/code&gt;, could be solved via following steps.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$  curl https://github.com/ruby/ruby/commit/801e1fe46d83c856844ba18ae4751478c59af0d1.diff &amp;gt; openssl.patch\n
$  rvm install 1.9.3 --with-openssl-dir=$HOME/.rvm/usr --patch ./openssl.patch 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-get-the-name-of-rpm-packages&#34;&gt;5. Get the name of rpm packages&lt;/h3&gt;

&lt;p&gt;Only print the name of the rpm package:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# rpm -qp --queryformat &#39;%{NAME}\n&#39; *.rpm&amp;gt;package.list
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-xargs-tips&#34;&gt;6. xargs tips&lt;/h3&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# find . -type f -exec grep -ilR &amp;quot;MY PATTERN&amp;quot; {} \; | xargs -I % cp % /dest/dir/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For me, I find out all of the packges in cache file, and copy them to another position:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find . | \grep rpm$ | xargs -I % cp % /home/dash/rpms
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-make-local-repo&#34;&gt;7. Make local repo&lt;/h3&gt;

&lt;p&gt;From the stackoverflow answers.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Yes as you&#39;ve described it, it sounds doable. I think I would be inclined to do the
following steps.

Setup directories
$ mkdir {Desktop,Desktop_Platform,X_Window_System,Fonts}
Download RPMs
Then run these types of commands to download the RPMs for the given groups:

$ repoquery --qf=%{name} -g --list --grouppkgs=all &amp;quot;Fonts&amp;quot; | \
     xargs -I{} repotrack -a x86_64 -p Fonts/ {}
You can wrap it in a for loop too:

$ for i in &amp;quot;Desktop&amp;quot; &amp;quot;Desktop_Platform&amp;quot; &amp;quot;X_Window_System&amp;quot; &amp;quot;Fonts&amp;quot;;do  
    repoquery --qf=%{name} -g --list --grouppkgs=all &amp;quot;$i&amp;quot; | \
       xargs -I{} repotrack -a x86_64 -p $i/ {}; 
  done
This will go through each group and download the packages into their respective
directories.

Re-installation
Then use the command as you&#39;ve described:

$ yum --nogpgcheck localinstall {Desktop,Desktop_Platform,X_Window_System,Fonts}/*.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;8-simple-screen-recorder&#34;&gt;8. Simple Screen Recorder&lt;/h3&gt;

&lt;p&gt;Ubuntu:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:maarten-baert/simplescreenrecorder
sudo apt-get update
sudo apt-get install simplescreenrecorder
# if you want to record 32-bit OpenGL applications on a 64-bit system:
sudo apt-get install simplescreenrecorder-lib:i386
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ArchLinux:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pacman -S simplescreenrecorder
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-convert-virtualbox-hd-to-qcow2&#34;&gt;9. Convert virtualbox hd to qcow2&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;VBoxManage clonehd /home/dash/VirtualBox\ VMs/ansible-cobbler_cobbler-ubuntu_1462410925173_15793/packer-virtualbox-iso-1454031074-disk1.vmdk /home/dash/output.img --format raw &amp;amp;&amp;amp; qemu-img convert -f raw /home/dash/output.img -O qcow2 /home/dash/ansible-cobbler.qcow2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;10-ansible-issue&#34;&gt;10. Ansible issue&lt;/h3&gt;

&lt;p&gt;The isssue is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ansible: ERROR: become is not a legal parameter in an Ansible Playbook
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Solved via upgrading to the newest version of ansible:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install software-properties-common
$ sudo apt-add-repository ppa:ansible/ansible
$ sudo apt-get update
$ sudo apt-get install ansible
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using the newest ansible you could aoid this error.&lt;/p&gt;

&lt;h3 id=&#34;11-create-customized-lxc-image&#34;&gt;11. Create customized lxc image&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;http://unix.stackexchange.com/questions/186638/how-to-make-a-local-template-for-a-linux-container-and-point-to-that
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://insights.ubuntu.com/2015/03/20/installing-lxd-and-the-command-line-tool/&#34;&gt;https://insights.ubuntu.com/2015/03/20/installing-lxd-and-the-command-line-tool/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.stgraber.org/2016/03/30/lxd-2-0-image-management-512/&#34;&gt;https://www.stgraber.org/2016/03/30/lxd-2-0-image-management-512/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://insights.ubuntu.com/2016/04/01/lxd-2-0-image-management-512/&#34;&gt;https://insights.ubuntu.com/2016/04/01/lxd-2-0-image-management-512/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;12-changing-to-eth0-in-ubuntu&#34;&gt;12. Changing to eth0 in Ubuntu&lt;/h3&gt;

&lt;p&gt;Modify the name of &lt;code&gt;enps*&lt;/code&gt; to &lt;code&gt;eth0/1/2/3/4/&lt;/code&gt;, via following steps:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;try this: Edit your /etc/default/grub. Change the line from

GRUB_CMDLINE_LINUX=&amp;quot;&amp;quot;
to

GRUB_CMDLINE_LINUX=&amp;quot;net.ifnames=0 biosdevname=0&amp;quot;
and, finally run:

# update-grub
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;13-maas-syncing-pxe-file&#34;&gt;13. MAAS Syncing PXE File&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://maas.ubuntu.com/docs/sstreams-mirror.html&#34;&gt;https://maas.ubuntu.com/docs/sstreams-mirror.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://ytooyama.hatenadiary.jp/entry/2016/05/11/002532&#34;&gt;http://ytooyama.hatenadiary.jp/entry/2016/05/11/002532&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For building our own MAAS image:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://askubuntu.com/questions/744966/how-do-you-install-the-maas-image-builder-on-14-04-lts&#34;&gt;http://askubuntu.com/questions/744966/how-do-you-install-the-maas-image-builder-on-14-04-lts&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;14-vagrant-for-maas&#34;&gt;14. Vagrant For MAAS&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/battlemidget/vagrant-maas&#34;&gt;https://github.com/battlemidget/vagrant-maas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/battlemidget/vagrant-maas-in-a-box/blob/master/Vagrantfile&#34;&gt;https://github.com/battlemidget/vagrant-maas-in-a-box/blob/master/Vagrantfile&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;15-convert-vm-to-physical&#34;&gt;15. Convert vm to physical&lt;/h3&gt;

&lt;p&gt;Thus you could enjoy packer building the physical machine! :)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /media/wherever-the-image-is/

# for VMWare
sudo apt-get install qemu-kvm
qemu-img convert your-vmware-disk.vmdk -O raw disk.img

# For VirtualBox
VBoxManage internalcommands converttoraw your-virtualbox-disk.vdi /dev/sdX
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;16-generate-random-seed&#34;&gt;16. Generate Random Seed&lt;/h3&gt;

&lt;p&gt;Error message is &lt;code&gt;Please do some other work to give
the OS a chance to collect more entropy!&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo aptitude install haveged
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;17-deb-repository-in-cobbler&#34;&gt;17. DEB Repository in Cobbler&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/cobbler/cobbler/wiki/Creating-custom-apt-repositories-in-centos-or-el-based-cobbler&#34;&gt;https://github.com/cobbler/cobbler/wiki/Creating-custom-apt-repositories-in-centos-or-el-based-cobbler&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Trouble-Shooting:&lt;br /&gt;
&lt;a href=&#34;https://github.com/cobbler/cobbler/issues/1530&#34;&gt;https://github.com/cobbler/cobbler/issues/1530&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;18-manually-install-mate-desktop&#34;&gt;18. Manually Install Mate Desktop&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;debconf debconf/frontend select noninteractive&amp;quot; | sudo debconf-set-selections
apt-get --allow-unauthenticated update -y
apt-get --allow-unauthenticated upgrade -y
apt-get --allow-unauthenticated install -y build-essential
apt-get --allow-unauthenticated install -y ubuntu-mate-desktop
apt-get --allow-unauthenticated install -y vim
apt-get --allow-unauthenticated install -y chromium-browser
apt-get --allow-unauthenticated install -y meld vim-gtk
apt-get --allow-unauthenticated install -y evince
sudo apt-get --allow-unauthenticated install -y language-pack-zh-hans language-pack-zh-hans-base language-pack-gnome-zh-hans language-pack-gnome-zh-hans-base
sudo apt-get --allow-unauthenticated install -y `check-language-support -l zh`
sudo localectl set-locale LANG=zh_CN.UTF-8
# TW/HK language support
sudo apt-get --allow-unauthenticated install -y language-pack-zh-hant language-pack-zh-hant-base language-pack-gnome-zh-hant language-pack-gnome-zh-hant-base
sudo apt-get --allow-unauthenticated install -y `check-language-support -l zh`
apt-get --allow-unauthenticated install -y fcitx
apt-get --allow-unauthenticated install -y fcitx-table-wubi fcitx-table-wubi-large
apt-get --allow-unauthenticated install -y fcitx-googlepinyin
apt-get --allow-unauthenticated install -y gimp
apt-get --allow-unauthenticated install -y ibus-pinyin 
apt-get --allow-unauthenticated install -y thunderbird-locale-en-us mythes-en-au hunspell-en-gb thunderbird-locale-en-gb fonts-arphic-ukai wbritish fcitx-sunpinyin openoffice.org-hyphenation language-pack-gnome-en hunspell-en-za fcitx-chewing fcitx-table-cangjie gimp-help-en language-pack-en mythes-en-us thunderbird-locale-en fcitx-module-cloudpinyin libreoffice-help-en-us firefox-locale-en libreoffice-help-en-gb fonts-arphic-uming hyphen-en-gb libreoffice-l10n-en-za fcitx-ui-qimpanel hunspell-en-au libreoffice-l10n-en-gb hyphen-en-us hunspell-en-ca 
apt-get --allow-unauthenticated install -y zsh
apt-get --allow-unauthenticated install -y fonts-wqy-zenhei fonts-wqy-microhei ttf-wqy-microhei  ttf-wqy-zenhei  xfonts-wqy
apt-get --allow-unauthenticated install -y eclipse
apt-get --allow-unauthenticated install -y gpicview
apt-get --allow-unauthenticated install -y scrot
apt-get --allow-unauthenticated install -y byobu
apt-get --allow-unauthenticated install -y subversion git
apt-get --allow-unauthenticated install -y kdiff3
apt-get --allow-unauthenticated install -y docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Final Version should be:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;debconf debconf/frontend select noninteractive&amp;quot; | sudo debconf-set-selections
unset DEBIAN_HAS_FRONTEND DEBIAN_FRONTEND DEBCONF_REDIR DEBCONF_OLD_FD_BASE
export DEBIAN_FRONTEND=noninteractive
apt-get update --assume-yes
apt-get dist-upgrade --assume-yes
apt-get install --assume-yes vim build-essential ubuntu-mate-desktop chromium-browser meld vim-gtk evince language-pack-zh-hans language-pack-zh-hans-base language-pack-gnome-zh-hans language-pack-gnome-zh-hans-base language-pack-zh-hant language-pack-zh-hant-base language-pack-gnome-zh-hant language-pack-gnome-zh-hant-base fcitx fcitx-table-wubi fcitx-table-wubi-large fcitx-googlepinyin gimp ibus-pinyin thunderbird-locale-en-us mythes-en-au hunspell-en-gb thunderbird-locale-en-gb fonts-arphic-ukai wbritish fcitx-sunpinyin openoffice.org-hyphenation language-pack-gnome-en hunspell-en-za fcitx-chewing fcitx-table-cangjie gimp-help-en language-pack-en mythes-en-us thunderbird-locale-en fcitx-module-cloudpinyin libreoffice-help-en-us firefox-locale-en libreoffice-help-en-gb fonts-arphic-uming hyphen-en-gb libreoffice-l10n-en-za fcitx-ui-qimpanel hunspell-en-au libreoffice-l10n-en-gb hyphen-en-us hunspell-en-ca zsh fonts-wqy-zenhei fonts-wqy-microhei ttf-wqy-microhei  ttf-wqy-zenhei  xfonts-wqy eclipse gpicview scrot byobu subversion git kdiff3 docker
apt-get install --assume-yes  `check-language-support -l zh`

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;19-use-rync-for-resume-tranferring&#34;&gt;19. Use rync for resume tranferring&lt;/h3&gt;

&lt;p&gt;Command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rsync -P -e ssh remoteuser@remotehost:/remote/path /local/path
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;20-rackhd-howto&#34;&gt;20. RackHD Howto&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://dojoblog.emc.com/rackhd-cpi/setting-up-rackhd/&#34;&gt;http://dojoblog.emc.com/rackhd-cpi/setting-up-rackhd/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;21-sync-repo&#34;&gt;21. sync repo&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;vagrant@ubuntu-1404:/etc/apt$ cat /var/mirrors/ubuntu/14.04/var/postmirror.sh 
#!/bin/sh -x 
# the udebs script gets the actual files we need 
#/mnt/repo/apt-mirror/var/udebs.sh  
# A quick apt directory structure primer: 
# an apt server (e.g. archive.ubuntu.com) contains repositories (e.g. trusty-backports), 
# which contain archives (e.g. multiverse), which contain directories 
# a complete example - http://archive.ubuntu.com/ubuntu/dists/trusty-backports/multiverse/debian-installer/  
# With this in mind, we create bash &#39;arrays&#39; of the structure: 
# server we&#39;re syncing against 
#MIRROR=&amp;quot;cn.archive.ubuntu.com&amp;quot; 
MIRROR=&amp;quot;archive.ubuntu.com&amp;quot; 
# repositories we&#39;re mirroring 
#REPOS=&amp;quot;trusty trusty-updates trusty-security trusty-proposed trusty-backports&amp;quot; 
REPOS=&amp;quot;trusty&amp;quot;
# archives in repositories 
#ARCHIVES=&amp;quot;main multiverse restricted universe&amp;quot; 
ARCHIVES=&amp;quot;main&amp;quot;
# installer location inside archive 
#DIRECTORIES=&amp;quot;debian-installer dist-upgrader-all installer-amd64 installer-i386&amp;quot; 
DIRECTORIES=&amp;quot;debian-installer installer-amd64&amp;quot;
#where we&#39;re storing it locally 
LOCALDIR=&amp;quot;/var/mirrors/ubuntu/14.04/mirror/mirrors.aliyun.com&amp;quot;
#LOCALDIR=&amp;quot;/mnt/repo/apt-mirror/mirror/archive.ubuntu.com&amp;quot;  
for REPO in $REPOS; do 
for ARCHIVE in $ARCHIVES; do 
for DIRECTORY in $DIRECTORIES;do 
# create directory structure 
if [ ! -e &amp;quot;$LOCALDIR/ubuntu/dists/$REPO/$ARCHIVE/$DIRECTORY&amp;quot; ]; then
mkdir -p &amp;quot;$LOCALDIR/ubuntu/dists/$REPO/$ARCHIVE/$DIRECTORY&amp;quot;
fi
# do the sync 
rsync --recursive --times --links --hard-links --delete --delete-after \
rsync://$MIRROR/ubuntu/dists/$REPO/$ARCHIVE/$DIRECTORY/ $LOCALDIR/ubuntu/dists/$REPO/$ARCHIVE/$DIRECTORY
done
done
done

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;22-vagrantfile-for-adding-more-disks&#34;&gt;22. Vagrantfile for adding more disks&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;To be done. 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;23-rvm-install-issue&#34;&gt;23. rvm install issue&lt;/h3&gt;

&lt;p&gt;With openssl patched you can install rvm successfully:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wget https://github.com/ruby/ruby/commit/801e1fe46d83c856844ba18ae4751478c59af0d1.diff -O openssl.patch
$ rvm install --patch ./openssl.patch 2.2.3
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;24-performance-tool&#34;&gt;24. performance tool&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.tecmint.com/linux-cpu-load-stress-test-with-stress-ng-tool/2/&#34;&gt;http://www.tecmint.com/linux-cpu-load-stress-test-with-stress-ng-tool/2/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;25-x11-forwarding-issue&#34;&gt;25. X11 Forwarding Issue&lt;/h3&gt;

&lt;p&gt;Problem:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;X11 forwarding request failed on channel 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Solved via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# pacman -S xorg-xauth
# vim /etc/ssh/sshd_config
AddressFamily any
X11Forwarding yes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then restart the sshd daemon, you will get X11 on ssh forwarding enabled.&lt;/p&gt;

&lt;p&gt;Add new user &lt;code&gt;clouder&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# useradd -d /home/clouder/ clouder
# chown -R clouder:clouder /home/clouder/
# usermod -aG kvm clouder
# usermod -aG libvirt clouder
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;polkit configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# vim /etc/polkit-1/rules.d/50-libvirt.rules 
/* Allow users in kvm group to manage the libvirt
daemon without authentication */
polkit.addRule(function(action, subject) {
    if (action.id == &amp;quot;org.libvirt.unix.manage&amp;quot; &amp;amp;&amp;amp;
        subject.isInGroup(&amp;quot;kvm&amp;quot;)) {
            return polkit.Result.YES;
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install following packages:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# pacman -Syu ebtables dnsmasq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open nested kvm.&lt;/p&gt;

&lt;h3 id=&#34;26-hack-into-system&#34;&gt;26. Hack into system&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://null-byte.wonderhowto.com/how-to/hack-like-pro-hack-shellshock-vulnerability-0157651/&#34;&gt;http://null-byte.wonderhowto.com/how-to/hack-like-pro-hack-shellshock-vulnerability-0157651/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;27-quickly-setup-graphite-and-grafana&#34;&gt;27. Quickly setup graphite and grafana&lt;/h3&gt;

&lt;p&gt;On ArchLinux, do following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir -p /root/data/graphite/storage/whisper/
$ sudo docker run -d \
  --name graphite \
  -p 8080:80 \
  -p 2003:2003 \
  -v /local/path/to/.htpasswd:/etc/nginx/.htpasswd \
  -v /root/data/graphite/storage/whisper:/opt/graphite/storage/whisper \
  sitespeedio/graphite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now your graphite runs OK, default username/password is guest/guest.&lt;/p&gt;

&lt;p&gt;Continue setup the docker container for grafana:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run -i -p 3000:3000 grafana/grafana
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or, setup our own persistent storage via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir -p /root/data/grafana/
$ chmod 777 -R /root/data/grafana/
$ docker run -d -v /root/data/grafana:/var/lib/grafana --name grafana-storage busybox:latest
$ docker run  -d -p 3000:3000 --name=grafana --volumes-from grafana-storage grafana/grafana
$ docker logs grafana
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The correct way for running grfafana via following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# docker run -d -p 3000:3000 --name=grafana -v /root/data/grafana:/var/lib/grafana  grafana/grafana
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;28-docker-enter-issue&#34;&gt;28. docker-enter issue&lt;/h3&gt;

&lt;p&gt;If you met &lt;code&gt;importenv: not found&lt;/code&gt; issue, do following to let docker-enter running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# docker pull jpetazzo/nsenter
# docker run --rm -v /usr/local/bin:/target jpetazzo/nsenter
# docker-enter &amp;lt;container_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;29-docker-collectd&#34;&gt;29. Docker-Collectd&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# docker run -d --net=host --privileged -v /:/hostfs:ro --name=collectd -e HOST_NAME=localhost -e \
GRAPHITE_HOST=192.168.1.79 andreasjansson/collectd-write-graphite
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;30-for-using-bridged-vagrant-libvirt&#34;&gt;30. For using bridged vagrant-libvirt&lt;/h3&gt;

&lt;p&gt;An example Vagrantfile is listed as following , notice it&amp;rsquo;s using ovsbr0.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# -*- mode: ruby -*-
# vi: set ft=ruby :

############### Vagrant Configuration Here #############
Vagrant.configure(2) do |config|

  # vagrant issues #1673..fixes hang with configure_networks
  config.ssh.shell = &amp;quot;bash -c &#39;BASH_ENV=/etc/profile exec bash&#39;&amp;quot;
  config.ssh.username = &#39;vagrant&#39;
  config.ssh.password = &#39;vagrant&#39;
  config.ssh.insert_key = &#39;true&#39;
  config.vm.provider :libvirt do |domain|
    domain.nic_model_type = &#39;e1000&#39;
    domain.memory = 384
    domain.nested = true
    domain.cpu_mode = &#39;host-passthrough&#39;
  end

  # bridge node. 
  # Add one networking, modify hostname, define memory, CPU cores.
  config.vm.define :bridge do |bridge|
    bridge.vm.box = &amp;quot;csmgmtv4&amp;quot;
    bridge.vm.hostname = &amp;quot;bridgenode&amp;quot;
    bridge.vm.network :public_network, 
	:dev =&amp;gt; &amp;quot;ovsbr0&amp;quot;,
	:mode =&amp;gt; &amp;quot;bridge&amp;quot;,
	:type =&amp;gt; &amp;quot;bridge&amp;quot;,
	:ip =&amp;gt; &amp;quot;192.168.178.2&amp;quot;,
	:ovs =&amp;gt; &amp;quot;true&amp;quot;
    bridge.vm.provider :libvirt do |domain|
      domain.storage :file, :size =&amp;gt; &#39;100G&#39;
      domain.memory = 1024
      domain.cpus = 1
      domain.nested = true
      domain.disk_bus = &#39;virtio&#39;
      domain.nic_model_type = &#39;virtio&#39;
      domain.volume_cache = &#39;writeback&#39;
    end
  end
end

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;###31. Using VPN in CloudStack
&lt;a href=&#34;https://portal.redbridge.se/faq/getting-started/accessing-your-instance-from-the-outside/&#34;&gt;https://portal.redbridge.se/faq/getting-started/accessing-your-instance-from-the-outside/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.remibergsma.com/2012/11/18/securely-connect-an-advanced-private-cloudstack-network-by-using-a-vlan-aware-switch-and-a-basic-vpn-device/&#34;&gt;https://blog.remibergsma.com/2012/11/18/securely-connect-an-advanced-private-cloudstack-network-by-using-a-vlan-aware-switch-and-a-basic-vpn-device/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.furorteutonicus.eu/2013/08/04/enabling-host-guest-networking-with-kvm-macvlan-and-macvtap/&#34;&gt;http://www.furorteutonicus.eu/2013/08/04/enabling-host-guest-networking-with-kvm-macvlan-and-macvtap/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;32-python-issue-easy-install&#34;&gt;32. python issue(easy_install)&lt;/h3&gt;

&lt;p&gt;Solved via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wget https://bootstrap.pypa.io/ez_setup.py -O - | python
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;33-vpn-over-ssh&#34;&gt;33. VPN Over ssh&lt;/h3&gt;

&lt;p&gt;Established via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pppd updetach noauth silent nodeflate pty &amp;quot;/usr/bin/ssh root@192.168.1.79 \ 
/usr/bin/pppd nodetach notty noauth&amp;quot; ipparam vpn 10.0.8.1:10.0.8.2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;34-x-windows-for-normal-user&#34;&gt;34. X Windows for normal user&lt;/h3&gt;

&lt;p&gt;X Window for normal user&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;➜  ~ chmod u+s /usr/bin/Xorg 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;35-chromium-flash&#34;&gt;35. Chromium Flash&lt;/h3&gt;

&lt;p&gt;Install it via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ proxychains4 yaourt chromium-pepper-flash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then enable it in &lt;code&gt;chrome://plugins&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;36-junos-issue&#34;&gt;36. JunOS Issue&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.juniper.net/techpubs/en_US/junos-ansible1.0/topics/example/junos-ansible-playbooks-device-configuring.html&#34;&gt;http://www.juniper.net/techpubs/en_US/junos-ansible1.0/topics/example/junos-ansible-playbooks-device-configuring.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://ittechnologist.wordpress.com/2015/08/23/use-vagrant-with-juniper-junos-vms-on-ubuntu/&#34;&gt;https://ittechnologist.wordpress.com/2015/08/23/use-vagrant-with-juniper-junos-vms-on-ubuntu/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://atlas.hashicorp.com/juniper&#34;&gt;https://atlas.hashicorp.com/juniper&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;37-hugo-materials&#34;&gt;37. hugo materials&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://dongjian.github.io/post/howtobuildablog/&#34;&gt;http://dongjian.github.io/post/howtobuildablog/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://bling.github.io/blog/2015/12/31/migrating-from-jekyll-octopress-to-hugo/&#34;&gt;http://bling.github.io/blog/2015/12/31/migrating-from-jekyll-octopress-to-hugo/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://parsiya.net/blog/2016-02-02-from-octopress-to-hugo/&#34;&gt;https://parsiya.net/blog/2016-02-02-from-octopress-to-hugo/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://nathanleclaire.com/blog/2014/12/22/migrating-to-hugo-from-octopress/&#34;&gt;http://nathanleclaire.com/blog/2014/12/22/migrating-to-hugo-from-octopress/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;38-awk&#34;&gt;38. awk&lt;/h3&gt;

&lt;p&gt;Some tricks on awk:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ document_keywords=&amp;quot;categories: linux unix windows&amp;quot;
$ echo $document_keywords | awk &#39;{
for(i=2;i&amp;lt;=NF;i++){if(i!=NF){$i=&amp;quot;\&amp;quot;&amp;quot;$i&amp;quot;\&amp;quot;&amp;quot;&amp;quot;,&amp;quot;}else{$i=&amp;quot;\&amp;quot;&amp;quot;$i&amp;quot;\&amp;quot;&amp;quot;}}}1&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;39-sed-ways&#34;&gt;39. sed ways&lt;/h3&gt;

&lt;p&gt;Using sed for switching from octopress to hugo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$  cat edit.sh
    #!/bin/bash
    for i in `ls ./*.markdown`
    do
    	# Generate the modified result, like categories: &amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;
    	replaceline=`grep -i &amp;quot;categories:&amp;quot; $i|awk \
    &#39;{for(i=2;i&amp;lt;=NF;i++){if(i!=NF){$i=&amp;quot;\&amp;quot;&amp;quot;$i&amp;quot;\&amp;quot;&amp;quot;&amp;quot;,&amp;quot;}else{$i=&amp;quot;\&amp;quot;&amp;quot;$i&amp;quot;\&amp;quot;&amp;quot;}}}1&#39;`
    	sed -i &amp;quot;2s|.*|$replaceline|&amp;quot; $i
    done
$ sed -i &#39;2s/\(:[[:blank:]]*\)\(.*\)/\1[\2]/&#39; *.markdown
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Switching to Win10</title>
      <link>http://purplepalmdash.github.io/2016/04/21/switching-to-win10/</link>
      <pubDate>Thu, 21 Apr 2016 10:06:44 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/04/21/switching-to-win10/</guid>
      <description>

&lt;h3 id=&#34;background&#34;&gt;Background&lt;/h3&gt;

&lt;p&gt;Since the monitor in my company are so ba&amp;hellip;&amp;hellip;..d, I have to change my working
environment from PC to SurfacePro, thus I have some tools changes, following are the
records.&lt;/p&gt;

&lt;h3 id=&#34;tool-list&#34;&gt;Tool List&lt;/h3&gt;

&lt;p&gt;Terminal: XShell4, Make sure you have change the screen-size issue.&lt;br /&gt;
&lt;a href=&#34;purplepalmdash.github.io/blog/2015/11/13/win10-tips-for-using-xshell/&#34;&gt;purplepalmdash.github.io/blog/2015/11/13/win10-tips-for-using-xshell/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Screen-Shot:&lt;br /&gt;
I use picPick for replacing the scrot, the scrot is so convenient thus I found many
tools for replacing it.&lt;/p&gt;

&lt;p&gt;picPick Configuration: the main purpose is for selecting the rectangle and save it
automatically to the folder with the timestamp.&lt;/p&gt;

&lt;p&gt;Auto-Syncing tool:&lt;br /&gt;
using WinSCP&amp;rsquo;s keep remote the latest status:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_04_21_10_39_10.jpg&#34; alt=&#34;/images/2016_04_21_10_39_10.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;OK, Now we could also using the same writing behavior just as under Linux Awesome
Desktop.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>把玩ebuddy(4)</title>
      <link>http://purplepalmdash.github.io/2016/03/15/ba-wan-ebuddy-4/</link>
      <pubDate>Tue, 15 Mar 2016 14:25:48 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/03/15/ba-wan-ebuddy-4/</guid>
      <description>

&lt;p&gt;总结了一下ebuddy的玩法，最近加了点玩法，就是用ebuddy作为Bash运行脚本后的提示部件。譬如
，当完成了某个编译任务后，用ebuddy来告知任务的运行成功。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ Task A ; NOTIFY EBUDDY
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;bin-ebuddy&#34;&gt;/bin/ebuddy&lt;/h3&gt;

&lt;p&gt;创建一个&lt;code&gt;/bin/ebuddy&lt;/code&gt;的文件，内容如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
FILE=/tmp/ebuddy
while true
do
	# if exists the file, then blinking the ebuddy.
  if [ -f $FILE ];
  then
	  # Exists the file, shining the ebuddy
     echo 07 &amp;gt; /dev/udp/127.0.0.1/8888
  else
	  # Now clear the status of the ebuddy
     echo 17 &amp;gt; /dev/udp/127.0.0.1/8888
  fi
#echo 07 &amp;gt; /dev/udp/127.0.0.1/8888
sleep 3
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个文件的意思是，如果存在&lt;code&gt;/tmp/ebuddy&lt;/code&gt;文件，ebuddy的头会亮起，否则，清除ebuddy的状态。&lt;/p&gt;

&lt;h3 id=&#34;notifyebuddy-clearebuddy&#34;&gt;notifyebuddy &amp;amp;&amp;amp; clearebuddy&lt;/h3&gt;

&lt;p&gt;这两个命令是做在.zshrc里的两个alias:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim ~/.zshrc
# For Using ebuddy
alias notifyebuddy=&#39;touch /tmp/ebuddy&#39;
alias clearebuddy=&#39;rm -f /tmp/ebuddy&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样我们可以在运行完某个命令后，告知ebuddy完成事件。&lt;/p&gt;

&lt;h3 id=&#34;局限&#34;&gt;局限&lt;/h3&gt;

&lt;p&gt;不能同时标识两个以上的命令完成情况。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用squid缓存所有rpm/deb安装包</title>
      <link>http://purplepalmdash.github.io/2016/03/15/shi-yong-squidhuan-cun-suo-you-rpm-slash-deban-zhuang-bao/</link>
      <pubDate>Tue, 15 Mar 2016 10:23:34 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/03/15/shi-yong-squidhuan-cun-suo-you-rpm-slash-deban-zhuang-bao/</guid>
      <description>

&lt;p&gt;在进行自动化部署的时候，需要频繁安装系统，鉴于工作环境的带宽有限，我需要设置一个代理服
务器，用于缓存所有的RPM/DEB安装包，以便自动化部署可以在瞬间完成。&lt;/p&gt;

&lt;p&gt;以下示例运行在ArchLinux上。&lt;/p&gt;

&lt;h3 id=&#34;squid搭建&#34;&gt;Squid搭建&lt;/h3&gt;

&lt;p&gt;Squid介绍:&lt;/p&gt;

&lt;p&gt;Squid 是一个 Web 缓存代理，支持 HTTP, HTTPS, FTP, 以及更多。它通过缓存与重用经常请求的
web页面，减少带宽使用同时提升了响应时间。Squid 具有可扩展的访问控制功能，同时可以使服务
器加速。它运行在 Unix 和 Windows 中，采用 GNU GPL 协议发布。&lt;/p&gt;

&lt;p&gt;安装squid:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pacman -S squid
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们需要配置squid以便它能适配我们的环境，我的环境里主要需要做以下几个事情：&lt;br /&gt;
1. 更改squid缓存目录到/home分区。&lt;br /&gt;
2. 更改squid缓存目录大小为30G以上。&lt;br /&gt;
3. 更改缓存文件大小，以便它支持大的RPM/DEB包。&lt;/p&gt;

&lt;p&gt;更改缓存目录， 找到以下的行，在其下添加我们自定义的缓存目录:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vim /etc/squid/squid.conf
# Uncomment and adjust the following to add a disk cache directory.
#cache_dir ufs /var/cache/squid 100 16 256
cache_dir ufs /home/dash/squid 30000 16 256
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们将在指定目录下创建目录， 第一层数为16, 每个文件夹下最多包含256个子文件夹。&lt;/p&gt;

&lt;p&gt;在配置文件的最后加入以下行，以支持更大的缓存文件:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vim /etc/squid/squid.conf
maximum_object_size 200 MB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在开始创建缓存目录:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ squid -z
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动服务后，运行检查&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl restart squid
$ sudo systemctl enable squidz
$ sudo systemctl -k check
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证可以通过&lt;code&gt;netstat -anp | grep 3128&lt;/code&gt;来检查squid进程是否运行。&lt;/p&gt;

&lt;h3 id=&#34;使用squid代理&#34;&gt;使用squid代理&lt;/h3&gt;

&lt;h3 id=&#34;apt-cacher&#34;&gt;apt-cacher&lt;/h3&gt;

&lt;p&gt;以上设置的代理仅能支持RPM包的工作，对于DEB包我们需要使用apt-cacher, 在ArchLinux上安装和配置apt-cacher:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ yaourt apt-cacher
$ sudo vim /etc/apt-cacher-ng/acng.conf
CacheDir: /home/nomodify/apt-cacher
Port: 3142

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Config on Agent:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vim /etc/apt/apt.conf.d/01proxy 
Acquire::http::Proxy &amp;quot;http://192.168.0.121:3142&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>配置Qemu的VDE网络</title>
      <link>http://purplepalmdash.github.io/2016/03/10/pei-zhi-qemude-vdewang-luo/</link>
      <pubDate>Thu, 10 Mar 2016 14:18:43 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/03/10/pei-zhi-qemude-vdewang-luo/</guid>
      <description>

&lt;p&gt;为了快速验证镜像，配置出一个在本机上的tap0端口，虚拟机则通过VDE虚拟交换机连接到此端口后
，DHCP获得IP地址，从而得到网络连接， 以下是步骤。&lt;/p&gt;

&lt;h3 id=&#34;安装vde&#34;&gt;安装VDE&lt;/h3&gt;

&lt;p&gt;ArchLinux下安装命令为&lt;code&gt;sudo pacman -S vde2&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;配置&#34;&gt;配置&lt;/h3&gt;

&lt;p&gt;贴出配置文件如下, 摘录自ArchLinux的Wiki. 值得注意的是，在Systemd的配置文件中，需要先把
tun驱动装载上，才能使得VDE启动成功。&lt;/p&gt;

&lt;p&gt;配置qemu网络环境配置脚本:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /etc/systemd/scripts/qemu-network-env 
#!/bin/sh
# QEMU/VDE network environment preparation script

# The IP configuration for the tap device that will be used for
# the virtual machine network:

TAP_DEV=tap0
TAP_IP=10.33.34.254
TAP_MASK=24
TAP_NETWORK=10.33.34.0

# Host interface
NIC=enp2s0

case &amp;quot;$1&amp;quot; in
  start)
        echo -n &amp;quot;Starting VDE network for QEMU: &amp;quot;

        # If you want tun kernel module to be loaded by script uncomment here
        modprobe tun 2&amp;gt;/dev/null
        # Wait for the module to be loaded
        while ! lsmod | grep -q &amp;quot;^tun&amp;quot;; do echo &amp;quot;Waiting for tun device&amp;quot;; sleep 1; done

        # Start tap switch
        vde_switch -tap &amp;quot;$TAP_DEV&amp;quot; -daemon -mod 660 -group users

        # Bring tap interface up
        ip address add &amp;quot;$TAP_IP&amp;quot;/&amp;quot;$TAP_MASK&amp;quot; dev &amp;quot;$TAP_DEV&amp;quot;
        ip link set &amp;quot;$TAP_DEV&amp;quot; up

        # Start IP Forwarding
        echo &amp;quot;1&amp;quot; &amp;gt; /proc/sys/net/ipv4/ip_forward
        iptables -t nat -A POSTROUTING -s &amp;quot;$TAP_NETWORK&amp;quot;/&amp;quot;$TAP_MASK&amp;quot; -o &amp;quot;$NIC&amp;quot; -j MASQUERADE
        ;;
  stop)
        echo -n &amp;quot;Stopping VDE network for QEMU: &amp;quot;
        # Delete the NAT rules
        iptables -t nat -D POSTROUTING &amp;quot;$TAP_NETWORK&amp;quot;/&amp;quot;$TAP_MASK&amp;quot; -o &amp;quot;$NIC&amp;quot; -j MASQUERADE

        # Bring tap interface down
        ip link set &amp;quot;$TAP_DEV&amp;quot; down

        # Kill VDE switch
        pgrep -f vde_switch | xargs kill -TERM
        ;;
  restart|reload)
        $0 stop
        sleep 1
        $0 start
        ;;
  *)
        echo &amp;quot;Usage: $0 {start|stop|restart|reload}&amp;quot;
        exit 1
esac
exit 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置symtemd服务:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim /etc/systemd/system/qemu-network-env.service
[Unit]
Description=Manage VDE Switch

[Service]
Type=oneshot
ExecStart=/etc/systemd/scripts/qemu-network-env start
ExecStop=/etc/systemd/scripts/qemu-network-env stop
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使能服务，并重新启动机器:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl enable qemu-network-env.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;配置dhcpd&#34;&gt;配置DHCPD&lt;/h3&gt;

&lt;p&gt;需要配置dhcpd以使得在&lt;code&gt;10.33.34.0/24&lt;/code&gt;网段提供DHCP服务：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vim /etc/dhcpd.conf

subnet
10.33.34.0 netmask 255.255.255.0 {
# --- default gateway
option routers
10.33.34.254;
# --- Netmask
option subnet-mask
255.255.255.0;
# --- Broadcast Address
option broadcast-address
10.33.34.255;
# --- Domain name servers, tells the clients which DNS servers to use.
option domain-name-servers
223.5.5.5,180.76.76.76;
option time-offset 0;
range 10.33.34.2 10.33.34.253;
default-lease-time 1209600;
max-lease-time 1814400;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改完dhcpd的配置后， 重新启动dhcpd服务:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl restart dhcpd4
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;启动虚拟机&#34;&gt;启动虚拟机&lt;/h3&gt;

&lt;p&gt;启动虚拟机，并使其使用我们刚才添加的vde网络:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo qemu-system-x86_64 -net nic -net vde -hda ./test1.qcow2 -m 2048 --enable-kvm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动的虚拟机将获得10.33.34.2~10.33.33.253之间的地址。&lt;br /&gt;
如果使用普通用户，会出错， To be solved.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>把玩ebuddy(3)</title>
      <link>http://purplepalmdash.github.io/2016/03/05/ba-wan-ebuddy-3/</link>
      <pubDate>Sat, 05 Mar 2016 21:39:41 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/03/05/ba-wan-ebuddy-3/</guid>
      <description>

&lt;p&gt;早上起来刷微信, 觉得网页版微信的提示信息大可用ebuddy来响应. 说干就干,以下是解
决方案.&lt;/p&gt;

&lt;h3 id=&#34;gnotifier&#34;&gt;gnotifier&lt;/h3&gt;

&lt;p&gt;写作时,我的firefox版本是44.0.2, 需要安装gnotifier这个插件,从而把firefox的提示
消息转为系统提示信息, 下载地址在:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/gnotifier/&#34;&gt;https://addons.mozilla.org/en-US/firefox/addon/gnotifier/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;点击&lt;code&gt;Add to Firefox&lt;/code&gt;即完成安装:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/2016_03_05_21_50_12_766x490.jpg&#34; alt=&#34;/images/2016_03_05_21_50_12_766x490.jpg&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;查看dbus消息&#34;&gt;查看dbus消息&lt;/h3&gt;

&lt;p&gt;gnotifier将网页版微信的提示消息转为了系统提示消息, 那么只需要获取到系统消息总
线里的提示信息, 筛选出我们要的类型后, 给ebuddy发送相应的指令即可.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dbus-monitor&lt;/code&gt;工具可用于侦听dbus总线里的消息, 我们来运行一下,如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$  dbus-monitor --session
interface=&#39;org.freedesktop.Notifications&#39;,member=&#39;Notify&#39;

signal time=1457186062.137082 sender=org.freedesktop.DBus -&amp;gt;
destination=:1.163 serial=2 path=/org/freedesktop/DBus;
interface=org.freedesktop.DBus; member=NameAcquired
   string &amp;quot;:1.163&amp;quot;
signal time=1457186062.137154 sender=org.freedesktop.DBus -&amp;gt;
destination=:1.163 serial=4 path=/org/freedesktop/DBus;
interface=org.freedesktop.DBus; member=NameLost
   string &amp;quot;:1.163&amp;quot;
method call time=1457186083.405690 sender=:1.39 -&amp;gt; destination=:1.14
serial=220 path=/org/freedesktop/Notifications;
interface=org.freedesktop.Notifications; member=Notify
   string &amp;quot;Firefox&amp;quot;
   uint32 0
   string &amp;quot;/tmp/gnotifier-3Fh5Sa&amp;quot;
   string &amp;quot;yfp&amp;quot;
   string &amp;quot;[Sticker][Sticker][Sticker]&amp;quot;
   array [
   ]
   array [
   ]
   int32 -1
method call time=1457186086.866000 sender=:1.39 -&amp;gt; destination=:1.14
serial=221 path=/org/freedesktop/Notifications;
interface=org.freedesktop.Notifications; member=Notify
   string &amp;quot;Firefox&amp;quot;
   uint32 0
   string &amp;quot;/tmp/gnotifier-9kaLsI&amp;quot;
   string &amp;quot;yfp&amp;quot;
   string &amp;quot;test&amp;quot;
   array [
   ]
   array [
   ]
   int32 -1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上是两条从微信号为&lt;code&gt;yfp&lt;/code&gt;的用户发送给网页端微信的dbus总线消息, 我们要注意的是,
需要从dbus session总线取得此信息(system bus和session bus的差别可以自行Google).&lt;/p&gt;

&lt;h3 id=&#34;python2-dbus&#34;&gt;python2-dbus&lt;/h3&gt;

&lt;p&gt;ArchLinux下有&lt;code&gt;python-dbus&lt;/code&gt;和&lt;code&gt;python2-dbus&lt;/code&gt;两个关于dbus的python绑定库, 个人比较
习惯python2的缘故,安装&lt;code&gt;python2-dbus&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pacman -Ss python2-dbus
extra/python2-dbus 1.2.0-5 [installed]
    Python 2.7 bindings for DBUS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用于过滤/提取dbus总线消息的python代码如下, 另存为&lt;code&gt;DbusEbuddy.py&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import glib
import dbus
import subprocess
from dbus.mainloop.glib import DBusGMainLoop

def notifications(bus, message):
    if (len(message.get_args_list()) &amp;gt; 0):
        if (&#39;Firefox&#39; == message.get_args_list()[0]):
                if (&#39;yfp&#39; == message.get_args_list()[3]):
                    bashCommand = &#39;echo 01 &amp;gt; /dev/udp/127.0.0.1/8888&#39;
                    output = subprocess.check_output([&#39;bash&#39;,&#39;-c&#39;,bashCommand])

DBusGMainLoop(set_as_default=True)

bus = dbus.SessionBus()
bus.add_match_string_non_blocking(&amp;quot;eavesdrop=true,\
    interface=&#39;org.freedesktop.Notifications&#39;, member=&#39;Notify&#39;&amp;quot;)
bus.add_message_filter(notifications)

mainloop = glib.MainLoop()
mainloop.run()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;简单解释一下, 这几行代码首先attach到dbus的sessionbus总线,
&lt;code&gt;org.freedesktop.Notification&lt;/code&gt;端口上所有&lt;code&gt;Notify&lt;/code&gt;的成员, 如果匹配到这种消息, 则
通过&lt;code&gt;add_message_filter()&lt;/code&gt;调用回调函数.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;notifications&lt;/code&gt;是我们定义的回调函数,这个回调函数同样很简单, 如果消息长度大于
0(消息非空), 则检查消息的来源(&lt;code&gt;message.get_args_list()[0]&lt;/code&gt;), 选取来自Firefox的
, 由yfp(&lt;code&gt;messages.get_args_list()[3]&lt;/code&gt;)用户发来的消息, 作出对应的动作
(&lt;code&gt;echo 01 &amp;gt; /dev/udp/127.0.0.1/8888&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&#34;使用&#34;&gt;使用&lt;/h3&gt;

&lt;p&gt;首先开启pybuddyDX库(注意要先安装python2版本的pyusb, 上一篇文章有讲):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:purplepalmdash/pybuddy-dx.git
$ sudo python2 ~/Code/python/pybuddy-dx/pybuddyDX.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时系统在8888端口监听ebuddy动作, 直接运行&lt;code&gt;DbusEbuddy.py&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo python2 ~/Code/python/DbusEbuddy.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以后每条由用户yfp发来的消息,都将引发ebuddy人偶执行01指令对应的动作.&lt;/p&gt;

&lt;h3 id=&#34;延伸&#34;&gt;延伸&lt;/h3&gt;

&lt;p&gt;可以匹配不同的人名, 执行不同的动作. 例如:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;李四	执行02指令
王五	执行12指令
某某群	执行08指令
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然,根据需要,也可以制定一些规则,譬如某VIP用户, 就是微信里你特别看重的那个人
,TA发消息来以后, 人偶心跳不止(指令19即是). 但这样一来,就引入了清零问题, 即重置
人偶状态, 很简单,我们用&lt;code&gt;notify-send&lt;/code&gt;这条命令, 发送出指令17给人偶让它重置状态
即可.&lt;/p&gt;

&lt;p&gt;代码的修改:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def notifications(bus, message):
    if (len(message.get_args_list()) &amp;gt; 0):
        if (&#39;Firefox&#39; == message.get_args_list()[0]):
                if (&#39;yfp&#39; == message.get_args_list()[3]):
                    bashCommand = &#39;echo 19 &amp;gt; /dev/udp/127.0.0.1/8888&#39;
                    output = subprocess.check_output([&#39;bash&#39;,&#39;-c&#39;, bashCommand])
        if (&#39;notify-send&#39; == message.get_args_list()[0]):
                if (&#39;Clear&#39; == message.get_args_list()[3]):
                    bashCommand = &#39;echo 17 &amp;gt; /dev/udp/127.0.0.1/8888&#39;
                    output = subprocess.check_output([&#39;bash&#39;,&#39;-c&#39;, bashCommand])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;而对应的清空命令则可以写成alias形式(我用的是zsh, bash类似):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim ~/.zshrc
alias clearnotify=&amp;quot;notify-send &#39;Clear&#39; &#39;This is a clear ebuddy notification.&#39; --icon=dialog-information&amp;quot;
$ source ~/.zshrc
$ clearnotify
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;测试&#34;&gt;测试&lt;/h3&gt;

&lt;p&gt;现在开始测试, 首先让yfp发微信给浏览器里登录的微信用户, 可以看到, 当浏览器收到
消息后, 系统桌面出现提示, 人偶心脏处的红灯开始狂闪, 不会停止.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://purplepalmdash.github.io/images/1039489558.jpg&#34; alt=&#34;/images/1039489558.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;输入&lt;code&gt;clearnotify&lt;/code&gt;命令后, 人偶恢复正常.&lt;/p&gt;

&lt;h3 id=&#34;下一步需要做的&#34;&gt;下一步需要做的&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Windows响应?&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;如何通过微信的API获取到好友列表,从而动态指定需要监听的人和事件?&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;图形界面的配置?&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>conntrack-tools usage</title>
      <link>http://purplepalmdash.github.io/2016/03/02/conntrack-tools-usage/</link>
      <pubDate>Wed, 02 Mar 2016 17:30:31 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/03/02/conntrack-tools-usage/</guid>
      <description>

&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://blogs.it.ox.ac.uk/networks/2014/09/30/linux-and-eduroam-nat-logging-perl-and-regular-expressions/&#34;&gt;https://blogs.it.ox.ac.uk/networks/2014/09/30/linux-and-eduroam-nat-logging-perl-and-regular-expressions/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;

&lt;p&gt;ArchLinux下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pacman -S conntrack-tools
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用&#34;&gt;使用&lt;/h3&gt;

&lt;p&gt;记录新建/销毁连接数至文件:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo touch /var/log/conntrack-data.log
$ sudo chmod 777 /var/log/conntrack-data.log
$ sudo conntrack -E -eNEW,DESTROY --src-nat -otimestamp,extended --buffer-size=104857600 &amp;gt; /var/log/conntrack-data.log
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>OpenVswitch bonding</title>
      <link>http://purplepalmdash.github.io/2016/02/25/openvswitch-bonding/</link>
      <pubDate>Thu, 25 Feb 2016 15:02:24 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/02/25/openvswitch-bonding/</guid>
      <description>

&lt;h3 id=&#34;before&#34;&gt;Before&lt;/h3&gt;

&lt;p&gt;Add 2 NICs, and show their ip infos via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@localhost ~]# ifconfig
eth0: flags=4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;  mtu 1500
        inet 10.47.58.207  netmask 255.255.255.0  broadcast 10.47.58.255
        inet6 fe80::5054:ff:feae:f2be  prefixlen 64  scopeid 0x20&amp;lt;link&amp;gt;
        ether 52:54:00:ae:f2:be  txqueuelen 1000  (Ethernet)
        RX packets 75  bytes 10924 (10.6 KiB)
        RX errors 0  dropped 5  overruns 0  frame 0
        TX packets 15  bytes 1668 (1.6 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

eth1: flags=4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;  mtu 1500
        inet 10.47.58.135  netmask 255.255.255.0  broadcast 10.47.58.255
        inet6 fe80::5054:ff:fe56:8c2e  prefixlen 64  scopeid 0x20&amp;lt;link&amp;gt;
        ether 52:54:00:56:8c:2e  txqueuelen 1000  (Ethernet)
        RX packets 108  bytes 17136 (16.7 KiB)
        RX errors 0  dropped 5  overruns 0  frame 0
        TX packets 47  bytes 6928 (6.7 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-openvswitch&#34;&gt;Install Openvswitch&lt;/h3&gt;

&lt;p&gt;Install/Configure ovs via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum localinstall /home/ovs/rpmbuild/RPMS/x86_64/openvswitch-2.3.2-1.x86_64.rpm
# systemctl start openvswitch.service
# chkconfig openvswitch on
# ovs-vsctl -V
ovs-vsctl (Open vSwitch) 2.3.2 
Compiled Feb 23 2016 10:12:37
DB Schema 7.6.2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configure-bonding&#34;&gt;Configure Bonding&lt;/h3&gt;

&lt;p&gt;Add bridge and list the added bridge:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@localhost ~]# ovs-vsctl add-br br0 
[root@localhost ~]# ovs-vsctl list-br
br0                               
[root@localhost ~]# ovs-vsctl show
fb542c8e-968a-4dcf-b55f-934667abc7d3
    Bridge &amp;quot;br0&amp;quot;                  
        Port &amp;quot;br0&amp;quot;
            Interface &amp;quot;br0&amp;quot;
                type: internal
    ovs_version: &amp;quot;2.3.2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add bonding:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# ovs-vsctl add-bond br0 bond0 eth0 eth1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or? ??&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ovs-vsctl add-bond br0 bond0 eth1 eth0 bond_mode=balance-slb other_config:lacp-time=fast
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Configure eth0/eth1/br0:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@localhost network-scripts]# cat /etc/sysconfig/network-scripts/ifcfg-eth0 
# Generated by dracut initrd
DEVICE=&amp;quot;eth0&amp;quot;
ONBOOT=yes
NETBOOT=yes
UUID=&amp;quot;8dbd22bd-764d-48d0-b896-99ae358aebcc&amp;quot;
IPV6INIT=yes
BOOTPROTO=&amp;quot;none&amp;quot;
TYPE=Ethernet
NAME=&amp;quot;eth0&amp;quot;
[root@localhost network-scripts]# cat /etc/sysconfig/network-scripts/ifcfg-eth1
# Generated by dracut initrd
DEVICE=&amp;quot;eth1&amp;quot;
ONBOOT=yes
NETBOOT=yes
IPV6INIT=yes
BOOTPROTO=&amp;quot;none&amp;quot;
TYPE=Ethernet
NAME=&amp;quot;eth1&amp;quot;
[root@localhost network-scripts]# cat /etc/sysconfig/network-scripts/ifcfg-br0
# Generated by dracut initrd
DEVICE=&amp;quot;br0&amp;quot;
ONBOOT=yes
DEVICETYPE=&amp;quot;ovs&amp;quot;
NETBOOT=yes
IPV6INIT=yes
BOOTPROTO=dhcp
TYPE=&amp;quot;OVSBridge&amp;quot;
NAME=&amp;quot;br0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;now restart the machine, you will get ovs bonding networking working.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using python for checking imap mailbox unread message</title>
      <link>http://purplepalmdash.github.io/2016/02/23/using-python-for-checking-imap-mailbox-unread-message/</link>
      <pubDate>Tue, 23 Feb 2016 19:52:57 +0000</pubDate>
      
      <guid>http://purplepalmdash.github.io/2016/02/23/using-python-for-checking-imap-mailbox-unread-message/</guid>
      <description>&lt;p&gt;Just paste some python scripts:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import imaplib
&amp;gt;&amp;gt;&amp;gt; obj=imaplib.IMAP4_SSL(&#39;imap.163.com&#39;,&#39;993&#39;)
&amp;gt;&amp;gt;&amp;gt; obj.login(&#39;XXXXX&#39;,&#39;XXXXXXXX&#39;)
(&#39;OK&#39;, [b&#39;LOGIN completed&#39;])
&amp;gt;&amp;gt;&amp;gt; obj.select()
(&#39;OK&#39;, [b&#39;49&#39;])
&amp;gt;&amp;gt;&amp;gt; obj.search(None,&#39;Unseen&#39;)
(&#39;OK&#39;, [b&#39;&#39;])
&amp;gt;&amp;gt;&amp;gt; len(obj.search(None, &#39;UnSeen&#39;)[1][0].split()) 
0
&amp;gt;&amp;gt;&amp;gt; len(obj.search(None, &#39;UnSeen&#39;)[1][0].split()) 
1
&amp;gt;&amp;gt;&amp;gt; len(obj.search(None, &#39;UnSeen&#39;)[1][0].split()) 
2
&amp;gt;&amp;gt;&amp;gt; len(obj.search(None, &#39;UnSeen&#39;)[1][0].split()) 
2
&amp;gt;&amp;gt;&amp;gt; len(obj.search(None, &#39;UnSeen&#39;)[1][0].split()) 
1
&amp;gt;&amp;gt;&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using the unread counts, you could easily interact with some other programs,
for example shining LEDs.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>