<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Surfacepro | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/surfacepro/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2016-01-26T21:06:00+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Re-install Surface Pro]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/11/22/re-install-surface-pro/"/>
    <updated>2014-11-22T21:43:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/11/22/re-install-surface-pro</id>
    <content type="html"><![CDATA[<p>Just for recording the steps, later I will use it for re-installation.   <br/>
1. Insert the FlashDisk, re-partition the harddisk, and install the system. After everything is OK, restart.  <br/>
2. Choose start from HardDisk(ignore the caches and eject kext), Now the system will ask you for configuration, Select US-keyboard/Canada, after entering the system, simply change the language from Italian to English.  <br/>
Install Clover to the Harddisk. The default installtion will failed, then you have to manually mount the EFI partition, and copy the EFI/ folder under the &ldquo;/&rdquo; directory to EFI partition. <br/>
Copy the DSDT and SSDT from the Surface downloaded folder. config.plist from <a href="http://www.insanelymac.com/forum/topic/301884-guide-surface-pro-1st-gen-yosemite-clean-installation/page-2#entry2077531">http://www.insanelymac.com/forum/topic/301884-guide-surface-pro-1st-gen-yosemite-clean-installation/page-2#entry2077531</a>  <br/>
Use kdrop for dropping the kext files under Surface/ folder, don&rsquo;t install yosemite specified. Ignore the apple&rsquo;s framebuffer.    <br/>
 Then restart. This time we could remove the flashdisk to let SurfacePro start by itself.  <br/>
3. After restarted, remove the EFI in / folder(Not the EFI folder!!!), then dropped the Yosemited specifed kext. Restart.  <br/>
4. Install the dp kext, and replace the dp related config.plist, Restart.   <br/>
5. Install the ethernet card, mine have the USB ethernet adapter and also USB wireless adapter, install the ethernet adapter first, mine is AX8872 usb adapter, simply download the package from webiste, install it. Then restart.       <br/>
Restart and the system becomes not stable, it seems the AX8872 harms the system.   <br/>
Re-dropped the Yosemite specified KEXT, for try. After re-dropped, restart the system.  <br/>
Seems no effect, OK,finally we remove the EFI and re-copy the EFI into the system( Go back to step 2, recover the EFI and re-dropped the kexts excpect Yosemite specified), and restart.    <br/>
Now the video seems OK, re-dropped the yosemite specified kexts, then restart.    <br/>
Now Usb Ethernet Adapter is OK. Enable the ssh and now we could remotely sent files to it.    <br/>
Install the USB Wireless adapter&rsquo;s driver via: <code>TL-WN725N_v2_USB_MacOS10.8.zip</code>, this one is simply downloaded for r8188eu chipset, mine is &ldquo;fast&rdquo; but it&rsquo;s actually the copy of TP-LINK WN725N.   <br/>
Since we replaced the EFI with the original EFI, we have to re-dropped the framebuffer and replace the dsdt file and replace the EFI&rsquo;s config.plist for supporting DP output. Now restart.   <br/>
Notice, normally if you replaced the dsdt file, the restart procedure may be pretty long, and it possibly runs into error cases. <br/>
6. Fortunately we runs into the correct case, so last step we install the NullEthernet driver.  This driver enables your ethernet card acts like a built-in card, thus you could visit app store.   First you dropped the kext, then you use a tool named MaciASL for editing the dsdt file, patched the &ldquo;patch.txt&rdquo;, save to dsdt, and restart.    <br/>
6-1 Bad Luck, the system got very slow again, so go back to Step 2, remove the installed EFI, then re-dropped the kexts excepts the Yosemite and others, restart.   <br/>
6-2 The video goes OK, continue for dropping yosemite specified Kexts, then restart.  <br/>
6-3 At this moment we still could not reached App store, so installed the DisPlay Port  patches, and re-start.  <br/>
6-4 Finally we could re-install the NullEthernet Drivers.  But wait!!! Because this time I installed the fucking injector. This package causes the system un-stable again. And it seems the system is pretty slow, but we still got login window, simply go to /S/L/E, and remove the installed NUllEthernetInjector.kext. Then use disk utils for checking the volumn and repare the permission.. REstart to see the effect.  <br/>
6-5 No recover, go back to 6-1 ~ 6-3.  <br/>
6-6 Install the NullEthernet.kext, and applied the pathes, restart and wait for result.  <br/>
6-7 Failed, I doubt if it&rsquo;s because the wireless and ethernet adapter both OK, so remove wireless, and do the experiment again.   <br/>
6-8 This time didn&rsquo;t replace the dp , But installed the NullEthernet and applied the patch. Then delete all of the configuration of the network card, and also removed all of the devices and the configuration file under the /L/Preferences/Systemconfig/network.plist     OK.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ArchLinux on Surface Pro(1)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/06/16/archlinux-on-surface-pro-1/"/>
    <updated>2014-06-16T13:51:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/06/16/archlinux-on-surface-pro-1</id>
    <content type="html"><![CDATA[<h3>System Management</h3>

<h4>Users and Groups</h4>

<p>Install zsh and use zsh as the newly added users&rsquo;s default SHELL:</p>

<pre><code># pacman -S zsh
# useradd -m -g root -G audio -s /bin/zsh Trusty
</code></pre>

<p>Then we add the newly added user into the sudo group and configure the sudo parameters:</p>

<pre><code># pacman -S sudo
# visudo
Trusty ALL=(ALL) NOPASSWD: ALL
Defaults env_keep += "LANG LANGUAGE LINGUAS LC_* _XKB_CHARSET http_proxy https_proxy ftp_proxy ftps_proxy"
</code></pre>

<p>Now the user is OK, and you can directly use newly added user for login, I suggest you swiftly switch to the newly added user, because using root is not a good idea, it&rsquo;s not safe.  <br/>
And we can copy the existing zshrc file from the company machine.</p>

<h4>Yaourt</h4>

<p>Add following command into /etc/pacman.conf:</p>

<pre><code>[archlinuxfr]
SigLevel = Never
Server = http://repo.archlinux.fr/$arch
</code></pre>

<p>Then:</p>

<pre><code>sudo pacman -Syu &amp;&amp; sudo pacman -S yaourt
</code></pre>

<h4>Packages</h4>

<p>Install following packages:</p>

<pre><code># pacman -S chromium firefox xorg xorg-xinit awesome xf86-video-intel xf86-video-ati pidgin thunderbird wget libreoffice gnome-terminal tigervnc xfce4  evince gimp smplayer alsa-utils gvim eclipse git subversion wireshark-gtk tcpdump ddd gdb meld qemu virtualbox wqy-bitmapfont wqy-microhei wqy-microhei-lite wqy-zenhei fcitx fcitx-libpinyin rox gpicview conky fcitx-googlepinyin nodejs cronie ntfs-3g dmenu lm_sensors pm-utils
</code></pre>

<p>Configure:</p>

<pre><code>[Trusty@~]$ cat ~/.xinirc 
exec awesome
[Trusty@~]$ cat ~/.vnc/xstartup 
#!/bin/sh

export XKL_XMODMAP_DISABLE=1
exec startxfce4
</code></pre>

<p>Configure crontab:</p>

<pre><code>crontab -e
*/4 * * * * sudo fdisk -l /dev/sdb
</code></pre>

<p>Configure lm_sensors:</p>

<pre><code># yes | sensors-detect
</code></pre>

<p>Brightness of the screen(Too light!!!! should be darker!!!):</p>

<pre><code>$ sudo echo 1240&gt;/sys/class/brightness/intel_backlight/brightness
</code></pre>

<h3>Network Configration(Wireless)</h3>

<p>The wireless configuration on SurfacePro is quite annoying procedure, so following are
the steps for configurating it.</p>

<p>Install NetworkManager:</p>

<pre><code>$ sudo pacman -S networkmanager
</code></pre>

<p>Disable the dhcpd.service of systemd, cause the networkmanager will have its own dhcp
client for configurating:</p>

<pre><code>$ sudo systemctl --type=service 
$ sudo systemctl disable dhcpcd.service
</code></pre>

<p>Now enable and start the NetworkManager.service:</p>

<pre><code>$ sudo systemctl enable NetworkManager.service
</code></pre>

<p>Using the applet for configurating the Network Manager:</p>

<pre><code>$ sudo pacman -S network-manager-applet
</code></pre>

<p>Call nm-applet via:</p>

<pre><code>$ nm-applet
</code></pre>

<p>Configure the wireless connection, the NM will automatically store it so now you could
reboot for using the wifi(Make sure you have removed the wired connection).</p>

<h3>Auto-Login Awesome</h3>

<p>Since awesome will using the terminal by default, while I use synergyc for connecting
to the synergys server, this will cause me to using surface pro&rsquo;s keyboard, so enable
auto-login for avoiding this.</p>

<p>Install lightdm via:</p>

<pre><code>$ sudo pacman -S lightdm
$ sudo systemctl enable lightdm.service
</code></pre>

<p>Install lightdm-greeter via:</p>

<pre><code>$ sudo pacman -S lightdm-gtk-greeter
$ sudo vim /etc/lightdm/lightdm.conf
greeter-session=lightdm-gtk-greeter
</code></pre>

<p>The greeter session could be view under <code>ls -l /usr/share/xgreeters</code>.</p>

<p>Configure the auto-login for awesome:</p>

<pre><code># vim /etc/lightdm/lightdm.conf

[Seat:*]
pam-service=lightdm
pam-autologin-service=lightdm-autologin
autologin-user=username
autologin-user-timeout=0
session-wrapper=/etc/lightdm/Xsession


# groupadd -r autologin
# gpasswd -a username autologin
</code></pre>

<p>Now restart the machine and it will automatically falls into the awesome login session.</p>

<h3>fcitx</h3>

<p>Always a big problem!!!!!</p>

<pre><code>$ sudo pacman -S fcitx fcitx-googlepinyin fcitx-configtool fcitx-qt4 fcitx-qt5
fcitx-gtk2
</code></pre>

<p>in /etc/locale.conf:</p>

<pre><code># Enable UTF-8 with Australian settings.
LANG="en_US.UTF-8"

# Keep the default sort order (e.g. files starting with a '.'
# should appear at the start of a directory listing.)
LC_COLLATE="C"

# Set the short date to YYYY-MM-DD (test with "date +%c")
LC_TIME="en_US.UTF-8"
</code></pre>

<p>Configure it via:</p>

<pre><code>$ vim .xprofile 
export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx
</code></pre>

<p>Restart the surfacepro, now you could using fcitx along with awesome/lightdm/firefox(need fcitx-gtk2)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ArchLinux on Surface Pro]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/06/16/archlinux-on-surface-pro/"/>
    <updated>2014-06-16T09:26:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/06/16/archlinux-on-surface-pro</id>
    <content type="html"><![CDATA[<p>Following is the steps for installing ArchLinux on Surface Pro, from the very beginning.</p>

<h3>Prerequisite</h3>

<p>First you have to download the iso from <a href="http://www.archlinux.org/download">http://www.archlinux.org/download</a>, Mine is <code>2014.06.01</code>.  <br/>
Also I use a USB-LAN adapter which holds the following information:   <code>ASIX Electronics Corp. AX88772B</code>.   <br/>
A 8G Flash Disk, 80G USB3.0 USB HardDisk. I also use a 4-Port USB2.0 HUB which carries a AC/DC Adapter for using 3 equipemts(FlashDisk/USB Adapter/USB Disk).  <br/>
Make the bootable flash disk via:</p>

<pre><code># dd if=/path/to/archlinux.iso of=/dev/sdX bs=1M &amp;&amp; sync
</code></pre>

<p>After it finished we insert the flash disk into the USB HUB, boot-up the Surface Pro Holding both the Power Key and Volumn - Key. Shortly we will go into the archlinux installtion shell.</p>

<h3>Installation Of ArchLinux</h3>

<p>These steps are mainly refers to following URL:  <br/>
<a href="https://bbs.archlinuxcn.org/viewtopic.php?id=1037">https://bbs.archlinuxcn.org/viewtopic.php?id=1037</a>   <br/>
First start-up the sshd so we can remotely login onto the terminal, thus we could easily copy-paste the commands.</p>

<h4>Make partitions on disk</h4>

<p>GPT Partition:</p>

<pre><code>cgdisk /dev/sdX
</code></pre>

<p>The Partition I made is as following:</p>

<pre><code># fdisk -l /dev/sdb

Disk /dev/sdb: 74.5 GiB, 80026361856 bytes, 156301488 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: CEFF8C6A-A06A-46DF-9D10-F4C593C32CA0

Device           Start          End   Size Type
/dev/sdb1         2048      1050623   512M EFI System
/dev/sdb2      1050624      5244927     2G Linux swap
/dev/sdb3      5244928    156301454    72G Linux filesystem
</code></pre>

<p>Notice we have to make a seperated EFI partition, because surface pro is UEFI enablbed. We also have a 2-Gigabyte swap partition and remains all of the reset as the root partition. <br/>
Now make the filesystems on the disk:</p>

<pre><code># mkfs.ext4 /dev/sdb3
# mkswap /dev/sdb2
# mkfs.vfat -F32 /dev/sdb1 
</code></pre>

<p>If you are using SSD, then format the ext4 without journal will greatly extend your SSD
lifetime.</p>

<p>But this option is not OK?</p>

<pre><code># mkfs.ext4 -O "^has_journal" /dev/sd
# mkfs.ext4 /dev/sdb2
# tune2fs -O ^has_journal /dev/sdb2
# tune2fs -o discard /dev/sdb2
</code></pre>

<p>Enable the swap partion:</p>

<pre><code># swapon /dev/sdb2 
</code></pre>

<h4>Installation Of Basic System</h4>

<p>After creating the partition, mount them into the corresponding position:</p>

<pre><code># mount /dev/sdb3 /mnt
# mkdir -p /mnt/boot/EFI/
# mount /dev/sdb1 /mnt/boot/EFI/
</code></pre>

<p>Install the basic system:</p>

<pre><code>pacstrap -i /mnt base
</code></pre>

<p>Generate the fstab file:</p>

<pre><code># genfstab -U -p /mnt &gt;&gt; /mnt/etc/fstab
</code></pre>

<p>Examine the generate the fstab:</p>

<pre><code># file /mnt/etc/fstab 
# cat /mnt/etc/fstab
</code></pre>

<p>Now you have the basic system installed the /dev/sdb, next step we will enter the system and configure this newly installed system.</p>

<h4>Configure The System</h4>

<p>Enter the system via:</p>

<pre><code># arch-chroot /mnt /bin/bash
</code></pre>

<p>Locale:</p>

<pre><code># vim /etc/locale.gen
# locale-gen
</code></pre>

<p>Default Language:</p>

<pre><code>echo LANG=en_US.UTF-8&gt;/etc/locale.conf
</code></pre>

<p>Timezone:</p>

<pre><code># ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
</code></pre>

<p>HostName:</p>

<pre><code># echo SurfacePro&gt;/etc/hostname
</code></pre>

<p>Auto-configuring the network at startup:</p>

<pre><code># systemctl start dhcpcd.service
# systemctl enable dhcpcd.service    
</code></pre>

<p>Set the password for root user:</p>

<pre><code># passwd
</code></pre>

<p>Install grub with efi support:</p>

<pre><code># pacman -S grub efibootmgr
# grub-install --target=x86_64-efi --efi-directory=/boot/EFI --bootloader-id=arch_grub --recheck
</code></pre>

<p>Generate the configure files:</p>

<pre><code># grub-mkconfig -o /boot/grub/grub.cfg
</code></pre>

<h4>Finish</h4>

<p>Return to the installtion environment:</p>

<pre><code>exit
</code></pre>

<p>Umount new partion:</p>

<pre><code># umount -R /mnt
</code></pre>

<p>Reboot via <code>shutdown -h now</code> and next time remove the flash-disk, also press power-up and volumn-down key together, this time you will be leading the usb-disk powered system.</p>

<h3>ScreenShot:</h3>

<p>See following picture:</p>

<p><img src="/images/surfacepro1.jpg" alt="/images/surfacepro1.jpg" /></p>
]]></content>
  </entry>
  
</feed>
