<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Embedded | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/embedded/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2016-01-06T21:05:00+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bluetooth NAP How-To]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/05/bluetooth-nap-how-to/"/>
    <updated>2015-12-05T20:03:41+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/05/bluetooth-nap-how-to</id>
    <content type="html"><![CDATA[<h3>Notice</h3>

<p>Notice, this way is only for Bluez-5!!!!</p>

<p>Refers to:  <br/>
<a href="https://wiki.gentoo.org/wiki/Bluetooth_Network_Aggregation_Point">https://wiki.gentoo.org/wiki/Bluetooth_Network_Aggregation_Point</a> <br/>
<a href="https://wiki.gentoo.org/wiki/Bluetooth">https://wiki.gentoo.org/wiki/Bluetooth</a>   <br/>
<a href="http://blog.fraggod.net/2015/03/28/bluetooth-pan-network-setup-with-bluez-5x.html">http://blog.fraggod.net/2015/03/28/bluetooth-pan-network-setup-with-bluez-5x.html</a></p>

<p>Bluez-4 could be much more easier via <code>pand</code>. For example, in ubuntu you could
setup the bluetooth PAN via:</p>

<p><a href="http://blog.sumostyle.net/2009/11/ubuntu-tethering-via-bluetooth-pan/">http://blog.sumostyle.net/2009/11/ubuntu-tethering-via-bluetooth-pan/</a></p>

<h3>RF-KILL</h3>

<p>Use rfkill for unblock the soft-blocked bluetooth adapter:</p>

<pre><code>[root@xxxx dash]# rfkill list bluetooth
2: hp-bluetooth: Bluetooth
        Soft blocked: yes
        Hard blocked: no
5: hci1: Bluetooth
        Soft blocked: yes
        Hard blocked: no
[root@xxxx dash]# rfkill unblock bluetooth

# rfkill list bluetooth
2: hp-bluetooth: Bluetooth
        Soft blocked: no
        Hard blocked: no
5: hci1: Bluetooth
        Soft blocked: no
        Hard blocked: no
</code></pre>

<h3>bluetoothctl</h3>

<p>Use bluetoothctl for configurating the bluetooth adapter:</p>

<pre><code>[root@xxxx ]# bluetoothctl 
[NEW] Controller 40:2C:xx:xx:xx:xx xxxx #2 [default]
[bluetooth]# power on
Changing power on succeeded
[bluetooth]# discoverable on
Changing discoverable on succeeded
[bluetooth]# agent on
Agent registered
[bluetooth]# scan on
</code></pre>

<h3>PAN</h3>

<p>Refers to:  <br/>
<a href="http://blog.fraggod.net/2015/03/28/bluetooth-pan-network-setup-with-bluez-5x.html">http://blog.fraggod.net/2015/03/28/bluetooth-pan-network-setup-with-bluez-5x.html</a></p>

<pre><code>--- machine-1
% bluetoothctl
[NEW] Controller 00:02:72:XX:XX:XX malediction [default]
[bluetooth]# power on
Changing power on succeeded
[CHG] Controller 00:02:72:XX:XX:XX Powered: yes
[bluetooth]# discoverable on
Changing discoverable on succeeded
[CHG] Controller 00:02:72:XX:XX:XX Discoverable: yes
[bluetooth]# agent on
...

--- machine-2 (snipped)
% bluetoothctl
[NEW] Controller 00:02:72:YY:YY:YY rpbox [default]
[bluetooth]# power on
[bluetooth]# scan on
[bluetooth]# agent on
[bluetooth]# pair 00:02:72:XX:XX:XX
[bluetooth]# trust 00:02:72:XX:XX:XX
</code></pre>

<p>Then Download the script from:</p>

<p><a href="https://github.com/mk-fg/fgtk/blob/master/bt-pan">https://github.com/mk-fg/fgtk/blob/master/bt-pan</a></p>

<p>This <code>bt-pan</code> will setup both the server and the client.</p>

<p>In Server:</p>

<pre><code>$ bt-pan --debug server $br
</code></pre>

<p>While the <code>$br</code> could be setup via following command(Take Gentoo for example):</p>

<pre><code># vim /etc/conf.d/net

...
# Comment out this line, and add the following lines:
#config_eth0="dhcp"
config_eth0="null"
bridge_br1="eth0"
config_br1="dhcp"
# Next two lines, to make two values work (keep setfd before stp):
brctl_br1="setfd 1
stp on"
...
# ln -s net.lo /etc/init.d/net.br1
# rc-service net.eth0 stop &amp;&amp; rc-service net.br1 start
# rc-update add net.br1 default 
</code></pre>

<p>In the Client side, do following:</p>

<pre><code>$ bt-pan client 00:02:72:XX:XX:XX
</code></pre>

<p>Now check the both client and server, you will find <code>bnep0</code> interface has been
created, you could see it via <code>ifconfig bnep0</code>.</p>

<p>Assign the same IP network range address to the client side, as in the br1
side in server. After that you could ping each other via bluetooth!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FRDM-KL02Z Tips(1)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/05/frdm-kl02z-tips-1/"/>
    <updated>2015-11-05T09:53:38+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/05/frdm-kl02z-tips-1</id>
    <content type="html"><![CDATA[<p>Reference Material: <br/>
<a href="http://www.freescale.com/zh-Hans/products/arm-processors/kinetis-cortex-m/l-series/freedom-development-platform-for-the-kinetis-kl02-family:FRDM-KL02Z?tab=In-Depth_Tab">http://www.freescale.com/zh-Hans/products/arm-processors/kinetis-cortex-m/l-series/freedom-development-platform-for-the-kinetis-kl02-family:FRDM-KL02Z?tab=In-Depth_Tab</a></p>

<h3>Minicom</h3>

<p>115200/data-bit: 8/ no parity/stop bit 1.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Modification SWAP on RPI Installation]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/04/30/modification-on-rpi-installation/"/>
    <updated>2015-04-30T21:49:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/04/30/modification-on-rpi-installation</id>
    <content type="html"><![CDATA[<p>First disable the swap partition, for it will save your sd card:  <br/>
Know where is your swap file:</p>

<pre><code>$ cat /proc/swap*
</code></pre>

<p>Disable it via change the S to K under <code>/etc/rcx.d</code>, and reboot the services:</p>

<pre><code>$ sudo mv S02dphys-swapfile K02dphys-swapfile
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enable Bluetooth Playing]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/03/08/enable-bluetooth-playing/"/>
    <updated>2015-03-08T21:36:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/03/08/enable-bluetooth-playing</id>
    <content type="html"><![CDATA[<p>First scan the bluetooth adapter via <code>lsusb</code>:</p>

<pre><code>$ lsusb
Bus 005 Device 002: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)
</code></pre>

<p>Install packages and configure bluetooth:</p>

<pre><code>$ sudo apt-get install bluetooth
$ sudo apt-get install bluez-utils
$ sudo apt-get install blueman
</code></pre>

<p>Then setup the bluetooth headset in blueman&rsquo;s graphical interface.  <br/>
The more detailed steps are available at:  <br/>
<a href="http://kkkttt.github.io/blog/2013/12/19/bluetooth-headset-on-archlinux/">http://kkkttt.github.io/blog/2013/12/19/bluetooth-headset-on-archlinux/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrade OpenWRT on MW151RM3G]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/11/24/upgrade-openwrt-on-mw151rm3g/"/>
    <updated>2014-11-24T13:54:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/11/24/upgrade-openwrt-on-mw151rm3g</id>
    <content type="html"><![CDATA[<h3>Prepare</h3>

<p>First go to <a href="http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/">http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/</a>, find the &ldquo;wr703n&rdquo;, download the 2 files.</p>

<pre><code>$ ls -l openwrt*
-rw-r----- 1 Trusty root 3932160 Nov 24 13:50 openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin
-rw-r----- 1 Trusty root 3342340 Nov 24 13:50 openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-sysupgrade.bin
</code></pre>

<p>sysupgrade.bin is for upgrading.</p>

<h3>Upgrade</h3>

<p>System-> Backup/Flash Firmware.   <br/>
Flash New firmware image, choose File. Select the sysupgrade.bin, Upgrade.</p>

<p>Tehn you have to wait for the changes to be applied, around half a miniutes, then everything will be OK.</p>

<h3>Use Flash Disk For Booting</h3>

<p>Cause the inner storage is only 4M-BYTE, we have to enlarge it via adding the external flash disk .</p>

<pre><code>$ opkg update
$ opkg install block-mount kmod-usb-storage fdisk
</code></pre>

<p>Comparing to Attitude Adjustment, the kmod-fs-ext4 couldn&rsquo;t be installed, thus we have to formt the flash disk into ext3 format.</p>

<p>Cause we won&rsquo;t installed the kmod-fs-ext4, so the external system couldn&rsquo;t be used, this time just flash back the Attitude Adjustment.</p>

<h3>Rootfs on External Storage</h3>

<p>Copy the filesystem into the external disk:</p>

<pre><code>root@OpenWrt:/mnt/sda2# tar -C /overlay -cvf - . | tar -C /mnt/sda2 -xf -
root@OpenWrt:/mnt/sda2# ls
etc         lib         lost+found  mnt         sbin        usr
</code></pre>

<p>Configure the /etc/config/fstab:</p>

<pre><code>config mount
        option target   /overlay
        option device   /dev/sda2
        option fstype   ext3
        option options  rw,sync
        option enabled  1
        option enabled_fsck 0
</code></pre>

<p>Reboot and you got 8G rootfs enabled router.</p>

<h3>Wireless-> Wired.</h3>

<p>First set the wireless port to client mode:   <br/>
<img src="/images/wireless_client.jpg" alt="/images/wireless_client.jpg" /></p>

<p>Then set the wired port to static address:  <br/>
<img src="/images/wired_config.jpg" alt="/images/wired_config.jpg" /></p>

<p>Now reset  your router and connect the ethernet port with a line, the equipments who only have ethernet could use router&rsquo;s wireless signal for accessing the network.  <br/>
Later when I study in the library, this router could easily transfer the signal from wireless to wired and let surfacePro work properly.</p>
]]></content>
  </entry>
  
</feed>
