<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mac | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/mac/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-05-25T15:08:11+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tips for Mac]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/11/22/tips-for-mac/"/>
    <updated>2014-11-22T17:37:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/11/22/tips-for-mac</id>
    <content type="html"><![CDATA[<h3>Set Proxy</h3>

<p>The proxy setting method is the same as in Linux, just add following lines into the ~/.bashrc:</p>

<pre><code># Set the proxy
alias unsethome='unset http_proxy https_proxy ftp_proxy ftps_proxy'
alias set2383='unsethome;export http_proxy=http://xxx.xx.xx238:2383;export https_proxy=http://xxx.xx.xx238:2383;export ftp_proxy=http://xxx.xx.xx238:2383;export ftps_proxy=http://xxx.xx.xx238:2383'
</code></pre>

<p>So next time simply run <code>set2383</code> then you could set the proxy for terminal based programs.</p>

<h3>Package Management</h3>

<p>brew is a very good package management tool for MAC, install it via:</p>

<pre><code>ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
</code></pre>

<p>Install packages like following:</p>

<pre><code>$ brew install wget
</code></pre>

<p>After installation the wget becomes available for using:</p>

<pre><code>Yosemite:~ Trusty$ which wget
/usr/local/bin/wget
</code></pre>

<h3>Brew Installed Packages</h3>

<p>Use brew to install frequently used tools:</p>

<pre><code>$ brew install wget tree
</code></pre>

<h3>Git Configuration For Proxy</h3>

<p>Since I worked under the proxy in office, so I need to configure a tunnel which could makes me go through the firewall:</p>

<pre><code>Yosemite:Code Trusty$ git config --global user.name "xxxx"
Yosemite:Code Trusty$ git config --global user.email "xxxx@gmail.com"
Yosemite:Code Trusty$ cat ~/.gitconfig
[user]
    name = xxx
    email = xxx@gmail.com
</code></pre>

<p>Compile the connect.c via:</p>

<pre><code>$ pwd
/Users/Trusty/Code/proxy
$ gcc -o connect connect.c
</code></pre>

<p>Configure the file via:</p>

<pre><code>Yosemite:proxy Trusty$ cat sock5.sh
#!/bin/bash
/Users/Trusty/Code/proxy/connect -H 1xx.x.xx.2xx:2xxx "$@"
Yosemite:proxy Trusty$ chmod 777 *
</code></pre>

<p>Add the following part in your ~/.gitconfig:</p>

<pre><code>[core]
    gitproxy = /Users/Trusty/Code/proxy/socks5.sh
</code></pre>

<p>Now open a new terminal and git from a test repository via:</p>

<pre><code>$ git clone git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git linux-git
Cloning into 'linux-git'...
remote: Counting objects: 3857384, done.
remote: Compressing objects: 100% (5000/5000), done.
^Cfatal: index-pack failed95/3857384), 436.00 KiB | 152.00 KiB/s
</code></pre>

<p>See? You really acrossed the firewall and reached Linus Torvalds' git tree.</p>

<h3>iterms2 Colorscheme</h3>

<p>Default iterm2 is ugly, so we need to download the good style of colorschemes,   <br/>
<a href="iterm2colorschemes.com">iterm2colorschemes.com</a>   <br/>
Also you could select whatever you like from the screen-shots.   <br/>
Hit cmd+i then you got whatever you want import.</p>

<h3>sudo tips</h3>

<p>For keeping the current environment, just do following:</p>

<pre><code>$ sudo visudo
Defaults    env_keep += "http_proxy https_proxy ftp_proxy ftps_proxy"
</code></pre>

<p>Restart or open a new terminal, now your sudo command won&rsquo;t fail because of the proxy configuration.</p>

<h3>Make Alias to Chromium</h3>

<p>The default installation of applications in mac maybe at the random place, so we have to make alias for whatever application we want to call in shell, like following:</p>

<pre><code>alias chromium="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome 2&gt;/dev/null"
</code></pre>

<p>So next time you could directly call <code>chromium</code> for testing. Notice, <code>2&gt;/dev/null</code> means we don&rsquo;t care about the stderr out.</p>

<h3>Call Console in Chromium</h3>

<p>Simply call cmd+opt+i, mapping to keyboard is win+alt+i.</p>

<h3>List Disk Usage</h3>

<p>Since &ldquo;fdisk -l&rdquo; is illegal options in MACOS, we have to use following command for displaying the disk usage:</p>

<pre><code>$ diskutil list
/dev/disk0
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:      GUID_partition_scheme                        *64.0 GB    disk0
   1:                        EFI EFI                     209.7 MB   disk0s1
   2:          Apple_CoreStorage                         63.2 GB    disk0s2
   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
/dev/disk1
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:                  Apple_HFS Hard                   *62.8 GB    disk1
                                 Logical Volume on disk0s2
                                 FBBDE745-2F1F-4B7A-8870-A9031F6E24CD
                                 Unencrypted
</code></pre>

<h3>Wallpapers</h3>

<p>macOSx have lots of wallpapers, we could fetch it via:</p>

<pre><code>scp -r /Library/Desktop\ Pictures/ xxx@10.0.0.221:/home/xxx
</code></pre>

<p>Then all of the pictures are now in remote machines.</p>

<h3>updatedb</h3>

<p>For equivalent to Linux&rsquo;s updatedb, simply run:</p>

<pre><code>sudo /usr/libexec/locate.updatedb
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on Installing Yosemite]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/11/18/tips-on-installing-yosemite/"/>
    <updated>2014-11-18T09:36:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/11/18/tips-on-installing-yosemite</id>
    <content type="html"><![CDATA[<p>First get the installation image from the AppStore, then format a flash-disk more than 8G to following format:   <br/>
<img src="/images/macosdisk.jpg" alt="/images/macosdisk.jpg" />   <br/>
Use following commands for creating the installation media:</p>

<pre><code>kkkkkkkktttt-iMac:~ Trusty$ sudo /Applications/Install\ OS\ X\ Yosemite.app/Contents/Resources/createinstallmedia --volume /Volumes/Install --applicationpath /Applications/Install\ OS\ X\ Yosemite.app --nointeraction
</code></pre>

<p>Take a coffee, cause this will spend a long time for copying everything you need into the disk.</p>

<p>Install Clover:</p>

<p><img src="/images/clover1.jpg" alt="/images/clover1.jpg" /></p>

<p>Customize Clover installation:  <br/>
<img src="/images/clover2.jpg" alt="/images/clover2.jpg" /></p>

<p><img src="/images/clover3.jpg" alt="/images/clover3.jpg" /></p>

<p>Copy the dsdt &amp; ssdt files to EFI partition:</p>

<pre><code>kkkkkkkktttt-iMac:Dsdt &amp; Ssdt Trusty$ pwd
/Users/Trusty/Desktop/MacOS/SurfacePro/SurfacePro 1째 Gen FilesPackage V.0.5.1/Dsdt &amp; Ssdt
kkkkkkkktttt-iMac:Dsdt &amp; Ssdt Trusty$ cp -ar * /Volumes/ESP/EFI/CLOVER/ACPI/patched/
</code></pre>

<p>Copy some device driver files into the Clover:</p>

<pre><code>kkkkkkkktttt-iMac:MacOS Trusty$ tar xzvf GenericUSBXHCI_1.2.7.tar.gz 
</code></pre>

<p>Copy GenericUSBXHCI.kext to 10.9/ 10.10/ Other/:</p>

<pre><code>kkkkkkkktttt-iMac:kexts Trusty$ pwd
/Volumes/ESP/EFI/CLOVER/kexts
kkkkkkkktttt-iMac:kexts Trusty$ ls -F
10.10/  10.6/   10.7/   10.8/   10.9/   Other/
kkkkkkkktttt-iMac:10.10 Trusty$ sudo cp -r  /Users/Trusty/Desktop/MacOS/GenericUSBXHCI_Yosemite/ /Volumes/ESP/EFI/CLOVER/kexts/10.10/
</code></pre>

<p>Also we have to copy the fakesmc.kext should be copied to above folder.</p>

<pre><code>kkkkkkkktttt-iMac:kexts Trusty$ ls *
10.10:
GenericUSBXHCI.kext     fakesmc.kext

10.6:

10.7:

10.8:

10.9:
GenericUSBXHCI.kext     fakesmc.kext

Other:
GenericUSBXHCI.kext     fakesmc.kext
</code></pre>

<p>Now copy the config.plist into the CLOVER root directory.</p>

<pre><code>kkkkkkkktttt-iMac:SurfacePro 1째 Gen FilesPackage V.0.5.1 Trusty$ pwd
/Users/Trusty/Desktop/MacOS/SurfacePro/SurfacePro 1째 Gen FilesPackage V.0.5.1
kkkkkkkktttt-iMac:SurfacePro 1째 Gen FilesPackage V.0.5.1 Trusty$ ls config.plist 
config.plist
</code></pre>

<p>Now you got your installation disk OK.</p>
]]></content>
  </entry>
  
</feed>
