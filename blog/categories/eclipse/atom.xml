<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Eclipse | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/eclipse/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-06-30T22:08:28+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setup an Embedded Development Enviroment for STM32]]></title>
    <link href="http://purplepalmdash.github.io/blog/2013/11/21/setup-an-embedded-development-enviroment-for-stm32/"/>
    <updated>2013-11-21T20:50:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2013/11/21/setup-an-embedded-development-enviroment-for-stm32</id>
    <content type="html"><![CDATA[<h3>Download the toolchain</h3>

<p>We should download the toolchain from the ARM employee maintained website, the download address is located at: <a href="https://launchpad.net/gcc-arm-embedded">https://launchpad.net/gcc-arm-embedded</a>, use following command:</p>

<pre><code>    $ wget https://launchpad.net/gcc-arm-embedded/4.7/4.7-2013-q3-update/+download/gcc-arm-none-eabi-4_7-2013q3-20130916-linux.tar.bz2
</code></pre>

<p>untar the downloaded package and then add it to your system path, my solution is directly add some alias into ~/.bashrc:</p>

<pre><code>    ### Add Cross_Compiler for eclipse based stm32
    #export PATH="/media/y/embedded/cortex/gcc-arm-none-eabi-4_7-2013q3/bin:$PATH"
    alias setstm='export PATH="/media/y/embedded/cortex/gcc-arm-none-eabi-4_7-2013q3/bin:$PATH"'
</code></pre>

<h3>Eclipse Configuration</h3>

<p>We have to install zylin for flashing the stm32 board. After installation, eclipse will be rebooted.</p>

<p><img src="/images/eclipseinstall.jpg" alt="images/eclipseinstall.jpg" /></p>

<h3>OpenOCD</h3>

<p>OpenOCD is a open-source hardware debugger.</p>

<pre><code>    community/openocd 0.7.0-2
        Debugging, in-system programming and boundary-scan testing for embedded target devices
    [root@XXXyyy capscr]# pacman -S openocd
</code></pre>

<h3>Template prepration</h3>

<p>Download the template from :</p>

<pre><code>    $ git clone https://github.com/JorgeAparicio/bareCortexM.git
</code></pre>
]]></content>
  </entry>
  
</feed>
