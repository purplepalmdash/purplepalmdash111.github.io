<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Virtualization | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/virtualization/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2016-04-01T19:23:53+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tips on Shrinking VHD File]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/03/29/tips-on-shrinking-vhd-file/"/>
    <updated>2016-03-29T18:15:51+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/03/29/tips-on-shrinking-vhd-file</id>
    <content type="html"><![CDATA[<h3>UnCleaned Templates Generation</h3>

<p>Before remove big files:</p>

<pre><code>[root@fwgwg ~]# df -h
Filesystem            Size  Used Avail Use% Mounted on
/dev/mapper/VolGroup00-LogVol00
                       18G  5.1G   12G  31% /
/dev/xvda1             99M   14M   80M  15% /boot
tmpfs                 128M     0  128M   0% /dev/shm
</code></pre>

<p>Create the vhd file in CloudStack:</p>

<p><img src="source/images/2016_03_29_18_17_10_634x380.jpg" alt="source/images/2016_03_29_18_17_10_634x380.jpg" /></p>

<p>Name it:</p>

<p><img src="source/images/2016_03_29_18_17_55_301x382.jpg" alt="source/images/2016_03_29_18_17_55_301x382.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monitoring XenServer]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/03/29/monitoring-xenserver/"/>
    <updated>2016-03-29T12:23:50+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/03/29/monitoring-xenserver</id>
    <content type="html"><![CDATA[<h3>Prerequisition</h3>

<p>Refers
to<a href="https://github.com/crashdump/collectd-xenserver">https://github.com/crashdump/collectd-xenserver</a></p>

<ul>
<li>Collected 4.9 or later</li>
<li>Python2.4 Or Later</li>
<li>sudo pip install XenAPI</li>
<li>sudo pip install collectd</li>
</ul>


<h3>Configuration</h3>

<p>The plugin could not working. to be investigated.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XenServer6.2切换管理端口]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/03/24/cloudstackqie-huan-guan-li-duan-kou/"/>
    <updated>2016-03-24T17:28:55+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/03/24/cloudstackqie-huan-guan-li-duan-kou</id>
    <content type="html"><![CDATA[<p>默认安装完的XenServer，不能找到eth1, 用以下命令找到eth1:</p>

<pre><code>[root@csagentv1 ~]# xe pif-list
uuid ( RO)                  : cd4409d4-b2b8-543c-ea9c-35170673e924
                device ( RO): eth0
    currently-attached ( RO): true
                  VLAN ( RO): -1
          network-uuid ( RO): 597114f0-e71a-34fe-d6a2-230cc75e085a


[root@csagentv1 ~]#  xe host-list
uuid ( RO)                : 367ebe92-0634-41a8-825a-cd23184824ea
          name-label ( RW): csagentv1
    name-description ( RW): Default install of XenServer


[root@csagentv1 ~]# xe pif-scan host-uuid=367ebe92-0634-41a8-825a-cd23184824ea
[root@csagentv1 ~]# xe pif-list
uuid ( RO)                  : 3f6e551b-993e-0a3d-96b6-0f0d172f867f
                device ( RO): eth1
    currently-attached ( RO): false
                  VLAN ( RO): -1
          network-uuid ( RO): 1ff03ece-8b93-b231-ac2d-679d035422da


uuid ( RO)                  : cd4409d4-b2b8-543c-ea9c-35170673e924
                device ( RO): eth0
    currently-attached ( RO): true
                  VLAN ( RO): -1
          network-uuid ( RO): 597114f0-e71a-34fe-d6a2-230cc75e085a
</code></pre>

<p>在Console上可以看到管理端口:</p>

<p><img src="/images/2016_03_24_17_33_06_659x355.jpg" alt="/images/2016_03_24_17_33_06_659x355.jpg" /></p>

<p>命令:</p>

<pre><code>[root@csagentv1 ~]# xe host-management-disable
[root@csagentv1 ~]# xe pif-reconfigure-ip uuid=3f6e551b-993e-0a3d-96b6-0f0d172f867f mode=static IP=192.168.56.3 netmask=255.255.255.0 gateway=192.168.56.1 DNS=180.76.76.76
[root@csagentv1 ~]# xe pif-list params=uuid,device,MAC
uuid ( RO)      : 3f6e551b-993e-0a3d-96b6-0f0d172f867f
    device ( RO): eth1
       MAC ( RO): 08:00:27:b2:9d:5c


uuid ( RO)      : cd4409d4-b2b8-543c-ea9c-35170673e924
    device ( RO): eth0
       MAC ( RO): 08:00:27:f7:38:0b
[root@csagentv1 ~]# xe host-management-reconfigure pif-uuid=3f6e551b-993e-0a3d-96b6-0f0d172f867f
</code></pre>

<p>更改成功后，可以看到现在管理端口已经配置为eth1了:  <br/>
<img src="/images/2016_03_24_17_39_08_653x397.jpg" alt="/images/2016_03_24_17_39_08_653x397.jpg" /></p>

<p>Tips:</p>

<p>View eth1 pif:</p>

<pre><code>$ xe pif-list device=eth1 params=uuid --minimal
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Vagrant-libvirt Env on Ubuntu15.04]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/03/23/setup-vagrant-libvirt-env-on-ubuntu15-dot-04/"/>
    <updated>2016-03-23T20:49:52+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/03/23/setup-vagrant-libvirt-env-on-ubuntu15-dot-04</id>
    <content type="html"><![CDATA[<p>For continue working at home, I have to install vagrant-libvirt on
Ubuntu15.04, following are steps:</p>

<h3>Vagrant Installation</h3>

<p>The vagrant version in repository is too old, examine it via:</p>

<pre><code>$ apt-cache policy vagrant
vagrant:
  Installed: (none)
  Candidate: 1.6.5+dfsg1-2
  Version table:
     1.6.5+dfsg1-2 0
        500 http://mirrors.aliyun.com/ubuntu/ vivid/universe amd64 Packages
</code></pre>

<p>Download the installation file in:    <br/>
<a href="https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.deb">https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.deb</a></p>

<p>Install it via:</p>

<pre><code>$ sudo dpkg -i vagrant_1.8.1_x86_64.deb
$ which vagrant
/usr/bin/vagrant
</code></pre>

<h3>Vagrant-libvirt</h3>

<p>For building vagrant-libvirt, we have to install following packages:</p>

<pre><code>$ sudo apt-get install libvirt-bin libvirt-dev qemu-kvm ruby-dev
$ sudo adduser YourName libvirtd
</code></pre>

<p>Installing vagrant plugins:</p>

<pre><code>$ sudo mkdir /var/lib/gems
$ sudo chmod 777 -R /var/lib/gems/
$ gem source -r https://rubygems.org/
$ gem source -a http://mirrors.aliyun.com/rubygems/
$ gem source
$ gem install json -v '1.8.3'
$ gem install ruby-libvirt -v '0.6.0'
$ vagrant plugin install vagrant-libvirt
$ vagrant plugin install vagrant-mutate
$ vagrant plugin install --plugin-version 0.0.3 fog-libvirt
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Vagrant to Manage XenServer]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/03/21/use-vagrant-to-manage-xenserver/"/>
    <updated>2016-03-21T14:20:09+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/03/21/use-vagrant-to-manage-xenserver</id>
    <content type="html"><![CDATA[<h3>Building Templates</h3>

<p>Build XenServer 6.2 Template is pretty easy, simply do following:</p>

<pre><code>$ git clone  https://github.com/imduffy15/packer-xenserver.git
$ cd packer-xenserver
$ packer build template.iso
</code></pre>

<p>After building, check the following box file available under the directory:</p>

<pre><code>$ ls -l -h XenServer.box 
-rw-rw-r-- 1 dash dash 708M  3月 21 14:41 XenServer.box
</code></pre>

<h3>Import box File</h3>

<p>Import the generated box file via:</p>

<pre><code>$ vagrant box add XenServer.box --name "XenServer62"
$ vagrant box list | grep XenServer62
XenServer62        (virtualbox, 0)
</code></pre>

<h3>Start the Virtualbox XenServer</h3>

<pre><code>$ mkdir XenServer62
$ cd XenServer62 
$ vim Vagrantfile
Vagrant.configure(2) do |config|

    # disable mounting of vagrant folder as its not supported on xenserver
    config.vm.synced_folder ".", "/vagrant", disabled: true

    # disable checking for vbguest versions as its not supported on xenserver
    if Vagrant.has_plugin?("vagrant-vbguest")
      config.vbguest.auto_update = false
    end

    config.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--memory", 2048]
      v.customize [ "modifyvm", :id, "--nicpromisc2", "allow-all" ]
    end

    config.vm.define :csagent do |csagent|
      csagent.vm.box = "XenServer62"
    end

end
$ vagrant up
</code></pre>

<h3>XenServer In libvirt</h3>

<p>We want to use XenServer under libvirt(kvm), thus we have to do following changes:</p>

<p>First startup the virtualbox vagrant environment of XenServer, then login to the
localhost(127.0.0.1) as root:</p>

<pre><code>$ vagrant ssh csagent
[vagrant@localhost ~]$ ssh root@127.0.0.1
[root@localhost ~]# ifconfig | grep eth0 | grep HWaddr
eth0      Link encap:Ethernet  HWaddr 08:00:27:49:A4:92  
[root@localhost etc]# ifconfig -a | grep eth1
eth1      Link encap:Ethernet  HWaddr 08:00:27:9D:8C:71 
</code></pre>

<p>Get the Hardware Address(eth0/eth1) via ifconfig, we need them in the following
operations.</p>

<p>Now remove the udev items of <code>eth0</code>, <code>eth1</code> in <code>/etc/udev/rules.d/60-net.rules</code>:</p>

<pre><code># vi /etc/udev/rules.d/60-net.rules
    # Rules generated from static configuration and last boot data
    #SUBSYSTEM=="net" KERNEL=="eth*" SYSFS{address}=="08:00:27:49:a4:92" ID=="0000:00:03.0" NAME="eth0"
    #SUBSYSTEM=="net" KERNEL=="eth*" SYSFS{address}=="08:00:27:9d:8c:71" ID=="0000:00:08.0" NAME="eth1"
</code></pre>

<p>Remove the dynamic rules of the interface renaming:</p>

<pre><code># vim /etc/sysconfig/network-scripts/interface-rename-data/dynamic-rules.json 
    # Automatically adjusted file.  Do not edit unless you are certain you know how to
    {
        "lastboot": [
            - [
            -     "08:00:27:49:a4:92",
            -     "0000:00:03.0",
            -     "eth0"
            - ],
            - [
            -     "08:00:27:9d:8c:71",
            -     "0000:00:08.0",
            -     "eth1"
            - ]
        ],
        "old": []
    }
</code></pre>

<p>Should looks like this:</p>

<pre><code># cat /etc/sysconfig/network-scripts/interface-rename-data/dynamic-rules.json 
    # Automatically adjusted file.  Do not edit unless you are certain you know how to
    {
        "lastboot": [
        ], 
        "old": []
    }
</code></pre>

<p>Now add the static rules for the XenServer:</p>

<pre><code>$
08:00:27:9D:8C:71 
</code></pre>

<p>Get the Hardware Address(eth0/eth1) via ifconfig, we need them in the following
operations.</p>

<p>Now remove the udev items of <code>eth0</code>, <code>eth1</code> in <code>/etc/udev/rules.d/60-net.rules</code>:</p>

<pre><code># vi /etc/udev/rules.d/60-net.rules
    # Rules generated from static configuration and last boot data
    #SUBSYSTEM=="net" KERNEL=="eth*" SYSFS{address}=="08:00:27:49:a4:92" ID=="0000:00:03.0" NAME="eth0"
    #SUBSYSTEM=="net" KERNEL=="eth*" SYSFS{address}=="08:00:27:9d:8c:71" ID=="0000:00:08.0" NAME="eth1"
</code></pre>

<p>Remove the dynamic rules of the interface renaming:</p>

<pre><code># vim /etc/sysconfig/network-scripts/interface-rename-data/dynamic-rules.json 
    # Automatically adjusted file.  Do not edit unless you are certain you know how to
    {
        "lastboot": [
            - [
            -     "08:00:27:49:a4:92",
            -     "0000:00:03.0",
            -     "eth0"
            - ],
            - [
            -     "08:00:27:9d:8c:71",
            -     "0000:00:08.0",
            -     "eth1"
            - ]
        ],
        "old": []
    }
</code></pre>

<p>Should looks like this:</p>

<pre><code># vim  /etc/sysconfig/network-scripts/interface-rename-data/static-rules.conf 
eth0:mac = "08:00:27:49:A4:92"
eth1:mac = "08:00:27:9D:8C:71"
</code></pre>

<p>Define xenbr0 and eth0 bridging configuration:</p>

<pre><code># vim /etc/sysconfig/network-scripts/ifcfg-xenbr0 
DEVICE=xenbr0
TYPE=Bridge
ONBOOT=yes
NM_CONTROLLED=yes
BOOTPROTO=dhcp
# vim  /etc/sysconfig/network-scripts/ifcfg-eth0 
DEVICE=eth0
TYPE=Ethernet
ONBOOT=yes
NM_CONTROLLED=yes
BOOTPROTO=none
BRIDGE=xenbr0
</code></pre>

<p>Now shutdown the Virtualbox Based XenServer VM via:</p>

<pre><code>[root@localhost network-scripts]# shutdown -h now
</code></pre>

<h3>Package for Libvirt</h3>

<p>Package the modified vbox file and export to libvirt via following steps:</p>

<p>Verify the env is down:</p>

<pre><code>$ vagrant status
Current machine states:

csagent                   poweroff (virtualbox)
</code></pre>

<p>Package the modified vm:</p>

<pre><code>$ vagrant package
==&gt; csagent: Clearing any previously set forwarded ports...
==&gt; csagent: Exporting VM...
==&gt; csagent: Compressing package to: /home/dash/Code/Vagrant/XenServer62/package.box
$ ls
package.box  Vagrantfile  Vagrantfile~
</code></pre>

<p>Mutate to libvirt box:</p>

<pre><code>$ vagrant mutate package.box libvirt
Extracting box file to a temporary directory.
Converting package from virtualbox to libvirt.
    (100.00/100%)
Cleaning up temporary files.
The box package (libvirt) is now ready to use.
$ cd ~/.vagrant.d/boxes 
$ vagrant box list
XenServer62        (virtualbox, 0)
XenServer62        (libvirt, 0)
</code></pre>

<h3>Start the libvirt XenServer</h3>

<p>Edit the Vagrantfile like following:</p>

<pre><code># vim Vagrantfile
Vagrant.configure(2) do |config|

  # vagrant issues #1673..fixes hang with configure_networks
  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"
  config.ssh.username = 'vagrant'
  config.ssh.password = 'vagrant'
  config.ssh.insert_key = 'true'
  config.vm.provider :libvirt do |domain|
    domain.nic_model_type = 'e1000'
    domain.memory = 384
    domain.nested = true
    domain.cpu_mode = 'host-passthrough'
  end


  # csagent node.
  # Add one networking, modify hostname, define memory, CPU cores.
  config.vm.define :csagent do |csagent|
    csagent.vm.box = "XenServer62"
    csagent.vm.hostname = CLOUDSTACK_AGENT_HOSTNAME
    csagent.vm.network :private_network, :ip =&gt; CLOUDSTACK_AGENT_IP, :mac =&gt; "08:00:27:9D:8C:71"
    # Disable mounting of vagrant folder as it's not supported on xenserver
    csagent.vm.synced_folder ".", "/vagrant", disabled: true
    csagent.vm.provider :libvirt do |domain|
      domain.memory = 8192
      domain.cpus = 4
      domain.nested = true
      domain.cpu_mode = 'host-passthrough'
      domain.nic_model_type = 'e1000'
      domain.management_network_mac = "08:00:27:49:A4:92"
    end
  end

end
</code></pre>

<p>Start the Vagrant machine via: <code>vagrant up --provider=libvirt</code>.</p>

<p>The result shows XenServer are now running under libvirt:  <br/>
<img src="/images/2016_03_21_16_10_44_643x284.jpg" alt="/images/2016_03_21_16_10_44_643x284.jpg" /></p>
]]></content>
  </entry>
  
</feed>
