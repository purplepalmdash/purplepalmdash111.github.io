<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Virtualization | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/virtualization/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-08-11T19:00:05+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Added Precise Repository in SpaceWalk]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/11/added-precise-repository-in-spacewalk/"/>
    <updated>2015-08-11T16:26:32+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/11/added-precise-repository-in-spacewalk</id>
    <content type="html"><![CDATA[<h3>SpaceWalk Backend Configruation</h3>

<p>First Create the Channel:  <br/>
<img src="/images/2015_08_11_16_27_35_420x157.jpg" alt="/images/2015_08_11_16_27_35_420x157.jpg" />  <br/>
Then Create the Repository like following:  <br/>
<img src="/images/2015_08_11_16_28_21_562x226.jpg" alt="/images/2015_08_11_16_28_21_562x226.jpg" /> <br/>
Associate the channel together with repository:  <br/>
<img src="/images/2015_08_11_16_29_33_659x385.jpg" alt="/images/2015_08_11_16_29_33_659x385.jpg" /></p>

<h3>Install packages</h3>

<p>Do following for the prerequisition for syncing the repository.</p>

<pre><code># yum update python-debian
# vim  /usr/lib/python2.6/site-packages/debian/debfile.py 
PART_EXTS = ['gz', 'xz', 'lzma']
# wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
# rpm -ivh epel-release-6-8.noarch.rpm
# cat epel-testing.repo  | more
[epel-testing]
name=Extra Packages for Enterprise Linux 6 - Testing - $basearch
#baseurl=http://download.fedoraproject.org/pub/epel/testing/6/$basearch
#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=testing-epel6&amp;arch=$basearch
baseurl=http://mirrors.aliyun.com/epel/testing/6/x86_64/
failovermethod=priority
</code></pre>

<h3>Sync With Local Repository</h3>

<p>An example of precise-backports is listed like following, take this example for
example, create other 3 shell scripts:</p>

<pre><code># cat precise-backports.sh
until spacewalk-debian-sync.pl --username xxxxx --password xxxxxx --channel 'precise-backports' --url 'http://192.168.0.79/ubuntu/dists/precise-backports/main/binary-amd64/'
do
        echo "retry again"
        sleep 30
done
# ls *.sh
precise-backports.sh  precise-security.sh  precise.sh  precise-update.sh
</code></pre>

<p>Sync repository via <code>sh precise-backports.sh</code> or other scripts.</p>

<p>After a long while, you repository will be updated.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add Ubuntu Agent Into SpaceWalk]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/10/add-ubuntu-agent-into-spacewalk/"/>
    <updated>2015-08-10T14:53:28+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/10/add-ubuntu-agent-into-spacewalk</id>
    <content type="html"><![CDATA[<p>Install via:</p>

<pre><code>$ sudo apt-get install debhelper build-essential gcc devscripts git intltool quilt \
automake python-all-dev libnl-route-3-dev asciidoc pkg-config libxml2-utils \
docbook-xml xsltproc sgml-data docbook-xs
$ sudo apt-get install apt-transport-spacewalk rhnsd
</code></pre>

<p>Fix the bug of XMLRPCLib:</p>

<pre><code>--- /usr/lib/python2.7/xmlrpclib.py 2013-05-28 20:44:38.000000000 +0200
+++ new/xmlrpclib.py 2013-05-28 20:44:24.000000000 +0200
@@ -654,8 +654,8 @@
f(self, value, write)

def dump_nil (self, value, write):
- if not self.allow_none:
- raise TypeError, "cannot marshal None unless allow_none is enabled"
+# if not self.allow_none:
+# raise TypeError, "cannot marshal None unless allow_none is enabled"
write("&lt;value&gt;&lt;nil/&gt;&lt;/value&gt;")
dispatch[NoneType] = dump_nil
</code></pre>

<p>Create a key for managing trusty clients:  <br/>
<img src="/images/2015_08_10_15_18_26_629x476.jpg" alt="/images/2015_08_10_15_18_26_629x476.jpg" /></p>

<p>Register with SpaceWalk Server:</p>

<pre><code>$ sudo mkdir /var/lock/subsys
$ sudo rhnreg_ks --activationkey=1-TrustyKey --serverUrl=http://10.9.10.13/XMLRPC
Warning: unable to enable rhnsd with chkconfig
</code></pre>

<p>Seeing the warning doesn&rsquo;t matter. Now your computer is registered into the SpaceWalker
Root Node.</p>

<p>Make sure the subscribed software are listed as following:</p>

<p><img src="/images/2015_08_10_16_00_26_795x557.jpg" alt="/images/2015_08_10_16_00_26_795x557.jpg" /></p>

<p>Now change the apt configuration of the registed nodes:</p>

<pre><code># echo 'deb spacewalk://10.9.10.13/XMLRPC channels: trusty-main trusty-updates trusty-backports trusty-security'&gt; /etc/apt/sources.list.d/spacewalk.list
# mv /etc/apt/sources.list /etc/apt/sources.list.bak
# apt-get update
</code></pre>

<p>After updating, the repo will be refresed as:</p>

<pre><code># cat /etc/apt/sources.list.d/spacewalk.list 
deb spacewalk://10.9.10.13 channels: main trusty-backports trusty-updates trusty-security
</code></pre>

<p>Seems something error happened, syncing the repository, tomorrow will use precise for
verification.</p>

<h3>Use Precise</h3>

<p>Manually build the package and install the generated packages.</p>

<pre><code># apt-get install debhelper build-essential gcc devscripts git intltool quilt automake  python-all-dev libnl-route-3-dev asciidoc pkg-config libxml2-utils docbook-xml xsltproc  sgml-data docbook-xsl
# apt-get -f install

# git clone git://anonscm.debian.org/collab-maint/spacewalk/rhnlib.git
# git clone git://anonscm.debian.org/collab-maint/spacewalk/rhn-client-tools.git  rhn-client-tools
# git clone git://anonscm.debian.org/collab-maint/spacewalk/python-ethtool.git  python-ethtool
# git clone git://anonscm.debian.org/collab-maint/spacewalk/rhnsd.git rhnsd
# git clone git://anonscm.debian.org/collab-maint/spacewalk/apt-spacewalk.git

# debuild -i -us -uc -b
# dpkg -i *.deb
# apt-get -f install
</code></pre>

<p>Change the code for bug-fix:</p>

<pre><code>--- /usr/lib/python2.7/xmlrpclib.py 2013-05-28 20:44:38.000000000 +0200
+++ new/xmlrpclib.py 2013-05-28 20:44:24.000000000 +0200
@@ -654,8 +654,8 @@
f(self, value, write)

def dump_nil (self, value, write):
- if not self.allow_none:
- raise TypeError, "cannot marshal None unless allow_none is enabled"
+# if not self.allow_none:
+# raise TypeError, "cannot marshal None unless allow_none is enabled"
write("&lt;value&gt;&lt;nil/&gt;&lt;/value&gt;")
dispatch[NoneType] = dump_nil
</code></pre>

<p>Register to Server:</p>

<pre><code># apt-get install python-libxml2
# mkdir /var/lock/subsys
# rhnreg_ks --activationkey=1-precise --serverUrl=http://10.9.10.13/XMLRPC
</code></pre>

<p>Use Spacewalk for install the packages:</p>

<pre><code># cat /etc/apt/sources.list.d/spacewalk.list 
deb spacewalk://10.9.10.13 channels: main precise-backports precise-updates precise-security
# mv /etc/apt/sources.list /etc/apt/sources.list.back
# apt-get update
</code></pre>

<p>Now your repositories are managed by SpaceWalk.</p>

<h3>Upgrade in Client</h3>

<p>List all of the channel that you subscribed:</p>

<pre><code># rhn-channel --list
</code></pre>

<p>Check the update and apply them:</p>

<pre><code># rhn_check
</code></pre>

<h3>Install Packages in Client</h3>

<p>Take install libreoffice for example:   <br/>
First go to this page and select install new software:</p>

<p><img src="/images/2015_08_11_11_19_58_665x396.jpg" alt="/images/2015_08_11_11_19_58_665x396.jpg" /></p>

<p>Then search and get the searched result:</p>

<p><img src="/images/2015_08_11_11_22_18_684x225.jpg" alt="/images/2015_08_11_11_22_18_684x225.jpg" />  <br/>
Via <code>rhn_check</code> on client you will really install libreoffice.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build Kickstartable ISO]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/06/build-kickstartable-iso/"/>
    <updated>2015-08-06T22:11:44+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/06/build-kickstartable-iso</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<pre><code># mount -t iso9660 -o loop ./ubuntu1404.iso /mnt
# cp -rT /mnt/ iso/
</code></pre>

<p>Make a kickstart file use <code>system-config-kickstart</code>, and copy it to:</p>

<pre><code>$ cp ks.cfg ./
$ vim isolinux/langlinux
en
$ vim isolinux/txt.cfg
default install
label install
  menu label ^Install Ubuntu Server
  kernel /install/vmlinuz
  append  file=/cdrom/preseed/ubuntu-server.seed initrd=/install/initrd.gz ks=cdrom:/ks.cfg --
</code></pre>

<h3>Make ISO</h3>

<p>Make the iso.</p>

<pre><code>$ chmod a+w ./iso/isolinux/isolinux.bin 
$ mkisofs -J -l -b isolinux/isolinux.bin -no-emul-boot -boot-load-size 4 -boot-info-table -z -iso-level 4 -c isolinux/isolinux.cat -o /material/iso/newiso2.iso -joliet-long ./iso/
</code></pre>

<h3>Know Issue</h3>

<p>umount the partition which has been mounted.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enlarge RootFS in CentOS7]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/06/enlarge-rootfs-in-centos7/"/>
    <updated>2015-08-06T14:48:50+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/06/enlarge-rootfs-in-centos7</id>
    <content type="html"><![CDATA[<h3>Disk Preparation</h3>

<p>Create a new disk via following command in host machine:</p>

<pre><code># qemu-img create -f qcow2 Added.qcow2 200G
</code></pre>

<p>Boot the machine and you will have the newly added disk as <code>/dev/vdb</code>, format it via
<code>fdisk</code>.</p>

<pre><code>[root@spacewalker ~]# fdisk /dev/vdb
Welcome to fdisk (util-linux 2.23.2).

Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.

Device does not contain a recognized partition table
Building a new DOS disklabel with disk identifier 0x694e59ec.

Command (m for help): n
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p): p
Partition number (1-4, default 1): 
First sector (2048-419430399, default 2048): 
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-419430399, default 419430399): 
Using default value 419430399
Partition 1 of type Linux and of size 200 GiB is set

Command (m for help): t
Selected partition 1
Hex code (type L to list all codes): 8e
Changed type of partition 'Linux' to 'Linux LVM'

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table.
Syncing disks.
</code></pre>

<h3>Physical Volume</h3>

<p>Create a physical volume and display the pv:</p>

<pre><code>[root@spacewalker ~]# pvcreate /dev/vdb1
  Physical volume "/dev/vdb1" successfully created
[root@spacewalker ~]# pvdisplay 
  --- Physical volume ---
  PV Name               /dev/vda3
  VG Name               rootvg01
  PV Size               96.46 GiB / not usable 23.00 MiB
  Allocatable           yes (but full)
  PE Size               32.00 MiB
  Total PE              3086
  Free PE               0
  Allocated PE          3086
  PV UUID               rq51pP-o3Pw-8mMs-kBiN-wLva-nfLf-Svd9uk

  "/dev/vdb1" is a new physical volume of "200.00 GiB"
  --- NEW Physical volume ---
  PV Name               /dev/vdb1
  VG Name               
  PV Size               200.00 GiB
  Allocatable           NO
  PE Size               0   
  Total PE              0
  Free PE               0
  Allocated PE          0
  PV UUID               cPijvf-qPYT-w4yi-MsFo-yEHs-O9t8-6FmXUU
</code></pre>

<h3>Add pv into VG(Volume group)</h3>

<p>First vgdisplay for get the VG name, then added it into vg, check the free pe, now its
200 GiB available.</p>

<pre><code>[root@spacewalker ~]# vgdisplay 
  --- Volume group ---
  VG Name               rootvg01
  System ID             
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  2
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               1
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               96.44 GiB
  PE Size               32.00 MiB
  Total PE              3086
  Alloc PE / Size       3086 / 96.44 GiB
  Free  PE / Size       0 / 0   
  VG UUID               U98QSe-V6Kv-aYSf-cSsp-ln0H-IhuS-1oNsgV

[root@spacewalker ~]# vgextend  rootvg01 /dev/vdb1
  Volume group "rootvg01" successfully extended
[root@spacewalker ~]# vgdisplay 
  --- Volume group ---
  VG Name               rootvg01
  System ID             
  Format                lvm2
  Metadata Areas        2
  Metadata Sequence No  3
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               1
  Max PV                0
  Cur PV                2
  Act PV                2
  VG Size               296.41 GiB
  PE Size               32.00 MiB
  Total PE              9485
  Alloc PE / Size       3086 / 96.44 GiB
  Free  PE / Size       6399 / 199.97 GiB
  VG UUID               U98QSe-V6Kv-aYSf-cSsp-ln0H-IhuS-1oNsgV
</code></pre>

<h3>Enlarge the lv</h3>

<p>Use following command for first get the lv name, then lvextend to the most available
space of the volume group.</p>

<pre><code>[root@spacewalker ~]# lvdisplay 
  --- Logical volume ---
  LV Path                /dev/rootvg01/lv01
  LV Name                lv01
  VG Name                rootvg01
  LV UUID                5U4JM5-nG7G-TdPd-6zZ0-fE05-oysa-jEJHQu
  LV Write Access        read/write
  LV Creation host, time localhost, 2015-07-29 18:11:18 +0800
  LV Status              available
  # open                 1
  LV Size                96.44 GiB
  Current LE             3086
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     8192
  Block device           253:0

[root@spacewalker ~]# lvextend -l +100%FREE /dev/rootvg01/lv01 
  Size of logical volume rootvg01/lv01 changed from 96.44 GiB (3086 extents) to 296.41 GiB (9485 extents).
  Logical volume lv01 successfully resized
[root@spacewalker ~]# lvdisplay 
  --- Logical volume ---
  LV Path                /dev/rootvg01/lv01
  LV Name                lv01
  VG Name                rootvg01
  LV UUID                5U4JM5-nG7G-TdPd-6zZ0-fE05-oysa-jEJHQu
  LV Write Access        read/write
  LV Creation host, time localhost, 2015-07-29 18:11:18 +0800
  LV Status              available
  # open                 1
  LV Size                296.41 GiB
  Current LE             9485
  Segments               2
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     8192
  Block device           253:0
</code></pre>

<p>Enlarge in the system level:</p>

<pre><code>[root@spacewalker ~]# df -HT
Filesystem                Type      Size  Used Avail Use% Mounted on
/dev/mapper/rootvg01-lv01 xfs       104G   19G   85G  19% /
devtmpfs                  devtmpfs  1.1G     0  1.1G   0% /dev
tmpfs                     tmpfs     1.1G     0  1.1G   0% /dev/shm
tmpfs                     tmpfs     1.1G  8.7M  1.1G   1% /run
tmpfs                     tmpfs     1.1G     0  1.1G   0% /sys/fs/cgroup
/dev/vda1                 xfs       207M  111M   96M  54% /boot
[root@spacewalker ~]# xfs_growfs /dev/rootvg01/lv01 
meta-data=/dev/mapper/rootvg01-lv01 isize=256    agcount=4, agsize=6320128 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=0        finobt=0
data     =                       bsize=4096   blocks=25280512, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=0
log      =internal               bsize=4096   blocks=12344, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
data blocks changed from 25280512 to 77701120
[root@spacewalker ~]# df -HT
Filesystem                Type      Size  Used Avail Use% Mounted on
/dev/mapper/rootvg01-lv01 xfs       319G   19G  300G   6% /
devtmpfs                  devtmpfs  1.1G     0  1.1G   0% /dev
tmpfs                     tmpfs     1.1G     0  1.1G   0% /dev/shm
tmpfs                     tmpfs     1.1G  8.7M  1.1G   1% /run
tmpfs                     tmpfs     1.1G     0  1.1G   0% /sys/fs/cgroup
/dev/vda1                 xfs       207M  111M   96M  54% /boot
</code></pre>

<p>Now you could enjoy the 300G size diskspace.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup SpaceWalker Trusty Channel]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/06/setup-spacewalker-trusty-channel/"/>
    <updated>2015-08-06T11:47:31+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/06/setup-spacewalker-trusty-channel</id>
    <content type="html"><![CDATA[<h3>Channel Definition</h3>

<p>The definition for this channel should includes Architecture to &lsquo;amd64-debian&rsquo;, and Yum
Repository to SHA256:</p>

<p>Yum Repository Checksum Type
sha256
Architecture
AMD64 Debian</p>

<h3>Channel Definition</h3>

<p>The definition for this channel should includes Architecture to &lsquo;amd64-debian&rsquo;, and Yum
Repository to SHA256:</p>

<pre><code>Yum Repository Checksum Type
sha256
Architecture
AMD64 Debian
</code></pre>

<p>Then create more channels with its parent channel to your named channel.</p>

<p><img src="/images/2015_08_06_11_54_16_776x378.jpg" alt="/images/2015_08_06_11_54_16_776x378.jpg" /></p>

<p>Also create <code>trusty-security</code> and <code>trusty-backports</code>, after all configuration, your
channel would be looks like following:</p>

<p><img src="/images/2015_08_06_11_57_47_649x191.jpg" alt="/images/2015_08_06_11_57_47_649x191.jpg" /></p>

<p>Enable epel-testing and install python-debian:</p>

<pre><code># wget http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm
# rpm -ivh epel-release-7-5.noarch.rpm 
# yum-config-manager --enable epel-testing 
# cat epel-testing.repo
    [epel-testing]
    name=Extra Packages for Enterprise Linux 7 - Testing - $basearch
    #baseurl=http://download.fedoraproject.org/pub/epel/testing/7/$basearch
    #mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=testing-epel7&amp;arch=$basearch
    baseurl=http://mirrors.aliyun.com/epel/testing/7/x86_64/
# yum update python-debian
</code></pre>

<p>Patch the <code>debfile.py</code>:</p>

<pre><code># vim /usr/lib/python2.7/site-packages/debian/debfile.py
- PART_EXTS = ['gz', 'bz2', 'xz']   # possible extensions
+ PART_EXTS = ['gz', 'bz2', 'xz', 'lzma']   # possible extensions
</code></pre>

<p>Repo sync:</p>

<pre><code># git clone https://github.com/stevemeier/spacewalk-debian-sync.git
# cd spacewalk-debian-sync/
# mv spacewalk-debian-sync.pl /usr/bin/
# chmod 777 /usr/bin/spacewalk-debian-sync.pl
# yum install perl-WWW-Mechanize
</code></pre>

<p>Now sync the repository from remote server:</p>

<pre><code>spacewalk-debian-sync.pl --username xxxxx --password xxxxx --channel 'trusty-backports' --url 'http://192.168.0.79/ubuntu/dists/trusty-backports/main/binary-amd64/'
</code></pre>

<p>After the sync finished, the channel will be setup.</p>
]]></content>
  </entry>
  
</feed>
