<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Virtualization | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/virtualization/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2016-05-18T23:32:15+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setup LXD on Ubuntu1604]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/05/11/setup-lxd-on-ubuntu1604/"/>
    <updated>2016-05-11T15:38:23+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/05/11/setup-lxd-on-ubuntu1604</id>
    <content type="html"><![CDATA[<h3>Preparation</h3>

<p>By default the lxd is installed in ubuntu1604.</p>

<h3>Image</h3>

<p>The image file are downloaded before we actually install it, install the image via:</p>

<pre><code>$ lxc image import ubuntu-16.04-server-cloudimg-amd64-lxd.tar.xz ubuntu-16.04-server-cloudimg-amd64-root.tar.xz --alias ubuntu1604
$ lxc image list
+--------------+--------------+--------+--------------------------------------+--------+----------+------------------------------+
|    ALIAS     | FINGERPRINT  | PUBLIC |             DESCRIPTION              |  ARCH  |   SIZE   |         UPLOAD DATE          |
+--------------+--------------+--------+--------------------------------------+--------+----------+------------------------------+
| ubuntu1604   | f4c4c60a6b75 | no     | Ubuntu 16.04 LTS server (20160420.3) | x86_64 | 137.54MB | May 10, 2016 at 2:18pm (UTC) 
</code></pre>

<h3>Start Container</h3>

<p>Start the container via:</p>

<pre><code>$ lxc launch ubuntu1604 first1404
$ lxc list
+------------+---------+------+------+------------+-----------+
|    NAME    |  STATE  | IPV4 | IPV6 |    TYPE    | SNAPSHOTS |
+------------+---------+------+------+------------+-----------+
| first1404  | RUNNING |      |      | PERSISTENT | 0         |
+------------+---------+------+------+------------+-----------+
</code></pre>

<p>Attach to the running container via:</p>

<pre><code>$ lxc exec first1404 /bin/bash
</code></pre>

<p>In this container you could do anything, for your customization of the container.</p>

<h3>More Images</h3>

<p>After your modification is done, shutdown the running container, and submit your
modification to a new container:</p>

<pre><code>$ lxc publish second1604 --alias my-new-image
$ lxc image list
+--------------+--------------+--------+--------------------------------------+--------+----------+------------------------------+
|    ALIAS     | FINGERPRINT  | PUBLIC |             DESCRIPTION              |  ARCH  |   SIZE   |         UPLOAD DATE          |
+--------------+--------------+--------+--------------------------------------+--------+----------+------------------------------+
| my-new-image | 67de38342bfa | no     |                                      | x86_64 | 192.29MB | May 11, 2016 at 7:07am (UTC) |
+--------------+--------------+--------+--------------------------------------+--------+----------+------------------------------+
| ubuntu1604   | f4c4c60a6b75 | no     | Ubuntu 16.04 LTS server (20160420.3) | x86_64 | 137.54MB | May 10, 2016 at 2:18pm (UTC) |
+--------------+--------------+--------+--------------------------------------+--------+----------+------------------------------+
</code></pre>

<h3>Container Networking</h3>

<p>The default networking is a seperated network, but we could set the lxd using the hosted
network, via following steps:</p>

<pre><code>$ cat /etc/network/interfaces

auto ens3
iface ens3 inet manual

auto containerbr 
iface containerbr inet static
address 192.168.10.193
netmask 255.255.0.0
gateway 192.168.0.176
dns-nameservers 180.76.76.76
bridge_ports ens3
</code></pre>

<p>Reboot the machine, you have the running bridge <code>containerbr</code>, now you could set your bridge to this
newly created bridge:</p>

<pre><code>$ lxc profile device set default eth0 parent containerbr
</code></pre>

<p>Via this you cuold set the same subnet networking address just as in <code>containerbr</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Working Tips on Mesos/Ansible]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/05/09/working-tips-on-mesos-slash-ansible/"/>
    <updated>2016-05-09T12:20:34+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/05/09/working-tips-on-mesos-slash-ansible</id>
    <content type="html"><![CDATA[<h3>Package Prepare</h3>

<p>We have the default vagrant box generated by bento, listed it via:</p>

<pre><code>➜  mesos vagrant box list | grep -i centos | grep -i virtualbox
centos72                                     (virtualbox, 0)
</code></pre>

<p>Now we want to generate a new box from it, and added our own configuration:</p>

<pre><code>$ vagrant init centos72
$ vagrant up
$ vagrant ssh
</code></pre>

<p>Edit for keeping the cache:</p>

<pre><code>$ cat /etc/yum.conf  | more
[main]
cachedir=/home/vagrant/rpms/$basearch/$releasever
#keepcache=0
keepcache=1
</code></pre>

<p>Now poweroff the machine and export it to the new box:</p>

<pre><code>$ vagrant package --output centoslocalrpm.box
$ vagrant box add centoslocalrpm centoslocalrpm.box
</code></pre>

<p>Using the new box, the rpm packages could be saved into the folder
<code>/home/vagrant/rpms</code>.</p>

<h3>Deploy Using Ansible</h3>

<p>Refers to  <br/>
<a href="https://open.mesosphere.com/advanced-course/recreating-the-cluster-using-ansible/">https://open.mesosphere.com/advanced-course/recreating-the-cluster-using-ansible/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Working Tips on Ansible-cobbler(2)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/05/06/working-tips-on-ansible-cobbler-2/"/>
    <updated>2016-05-06T15:03:59+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/05/06/working-tips-on-ansible-cobbler-2</id>
    <content type="html"><![CDATA[<h3>AIM</h3>

<p>Change the vagrant box to libvirt, and let this libvirt machine working properly.</p>

<h3>Image Transformation</h3>

<p>Transform the image via following command:</p>

<pre><code>$ VBoxManage clonehd /home/dash/VirtualBox\ VMs/ansible-cobbler_cobbler-ubuntu_1462410925173_15793/packer-virtualbox-iso-1454031074-disk1.vmdk /home/dash/output.img --format raw &amp;&amp; qemu-img convert -f raw /home/dash/output.img -O qcow2 /home/dash/ansible-cobbler.qcow2
0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%
Clone medium created in format 'raw'. UUID: 6fbb99be-8004-43b5-831b-ec794a001c10
</code></pre>

<h3>Qemu Virtual Machine</h3>

<p>Create a new machine, then configure the networking, edit the cobbler setting/dhcp setting, then <code>cobbler sync</code>, now the cobbler is adjusting to new environment.</p>

<p>More detailed info could be seen in:</p>

<p><a href="http://purplepalmdash.github.io/blog/2015/07/10/wh-worktips-9/">http://purplepalmdash.github.io/blog/2015/07/10/wh-worktips-9/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Working Tips on Ansible-cobbler]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/05/04/working-tips-on-ansible-cobbler/"/>
    <updated>2016-05-04T15:36:55+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/05/04/working-tips-on-ansible-cobbler</id>
    <content type="html"><![CDATA[<h3>Source</h3>

<p>The source are downloaded from:  <br/>
<a href="https://github.com/signed8bit/ansible-cobbler">https://github.com/signed8bit/ansible-cobbler</a></p>

<p>Git clone it via:</p>

<pre><code>$ git clone https://github.com/signed8bit/ansible-cobbler.git
</code></pre>

<h3>Test</h3>

<p>The test will be done via <code>vagrant up</code>, while we met the problem: the cobbler version
in ansible playbooks are too old, thus the command <code>cobbler get-loaders</code> won&rsquo;t acts
well. we have to changing to the newest cobbler version which is available in</p>

<p><a href="http://cobbler.github.io/">http://cobbler.github.io/</a></p>

<h3>Manually Steps(Ubuntu)</h3>

<p>Install the newest cobbler via:</p>

<pre><code>$ wget -qO - http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/xUbuntu_14.04/Release.key | sudo apt-key add -
$ sudo add-apt-repository "deb http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/xUbuntu_14.04/ ./"
$ sudo apt-get install -y cobbler 
$ cobbler --version
Cobbler 2.6.11
  source: ?, ?
  build time: Sat Jan 23 14:13:42 2016
</code></pre>

<p>Change Password of the <code>cobbler</code>:</p>

<pre><code>Change the password for the 'cobbler' username:
htdigest /etc/cobbler/users.digest "Cobbler" cobbler
</code></pre>

<p>visit the url of <code>http://xxx.xxx.xxx.xx/cobbler_web</code> and you could access the management interface of cobbler.</p>

<h3>Import CentOS7.2</h3>

<p>Import the iso via following command</p>

<pre><code>$ sudo mount -t iso9660 -o loop ./CentOS-7-x86_64-Everything-1511.iso /mnt1
$ sudo cobbler import --name=CentOS-7.2 --arch=x86_64 --path=/mnt1
</code></pre>

<p>Examine the imported iso:</p>

<pre><code>root@cobbler-ubuntu:~# cobbler profile list
   CentOS-7.2-x86_64
root@cobbler-ubuntu:~# cobbler distro list
   CentOS-7.2-x86_64
</code></pre>

<p>Change the default password of root:</p>

<pre><code># openssl passwd -1
# vim /etc/cobbler/settings 
- default_password_crypted: "$1$mF86/UHC$WvcIcX2t6crBz2onWxyac."
+ default_password_crypted: "$awegwaegoguoweuouoeh/"
# cobbler sync
# service cobbler restart
# service cobblerd restart
</code></pre>

<h3>Todo</h3>

<p>How to automatically install the mate desktop via kickstart?</p>

<p>First find out all of the pkgs in group, then add them into the kickstart file?</p>

<h3>For Making Mate</h3>

<p>Steps are listed as following:</p>

<pre><code># curl http://mirrors.aliyun.com/repo/epel-7.repo&gt;/etc/yum.repos.d/epel-7.repo
# curl http://mirrors.aliyun.com/repo/Centos-7.repo&gt;CentOS-Base.repo
# yum groupinstall "X Window system"
# yum groupinstall "MATE Desktop"
</code></pre>

<p>Remain the yum cache:</p>

<pre><code>[root@localhost ~]# cat /etc/yum.conf 
[main]
#cachedir=/var/cache/yum/$basearch/$releasever
cachedir=/root/cache/$basearch/$releasever
keepcache=1
</code></pre>

<p>For setting mate as the default desktop envs:</p>

<pre><code># systemctl isolate graphical.target
# systemctl set-default graphical.target
</code></pre>

<h3>Repo In Cobbler</h3>

<p>We could setup the cobbler&rsquo;s repository via following steps:</p>

<p><img src="/images/2016_05_05_22_48_11_536x324.jpg" alt="/images/2016_05_05_22_48_11_536x324.jpg" /></p>

<p>The configuration of this repo:</p>

<p><img src="/images/2016_05_05_22_48_58_718x444.jpg" alt="/images/2016_05_05_22_48_58_718x444.jpg" /></p>

<p>Now you repo&rsquo;s configuration file should be like following:</p>

<pre><code>root@cobbler-ubuntu:/var/lib/cobbler/snippets# cat /srv/www/cobbler/repo_mirror/centos7_mate/config.repo 
[centos7_mate]
name=centos7_mate
baseurl=http://${http_server}/cobbler/repo_mirror/centos7_mate
enabled=1
priority=99
gpgcheck=0
</code></pre>

<p>Copy the rpms into <code>/srv/www/cobbler/repo_mirror/centos7_mate/</code>, and then <code>createrepo</code> for generating the package informations.</p>

<p>Now edit the existing profile&rsquo;s repo configurations:</p>

<pre><code># cobbler profile list
   CentOS-7.2-x86_64
# cobbler profile edit --name=CentOS-7.2-x86_64 --repo='centos7_mate'
</code></pre>

<p>Examine it via:</p>

<pre><code># cobbler repo report --name=centos7_mate
Name                           : centos7_mate
Apt Components (apt only)      : []
Apt Dist Names (apt only)      : []
Arch                           : x86_64
Breed                          : yum
Comment                        : This Repo is for installing MATE Desktop
Createrepo Flags               : &lt;&lt;inherit&gt;&gt;
Environment Variables          : {}
Keep Updated                   : False
Mirror                         : 
Mirror locally                 : True
Owners                         : ['admin']
Priority                       : 99
External proxy URL             : 
RPM List                       : []
Yum Options                    : {}
</code></pre>

<h3>Using the repo in kickstart</h3>

<p>First define the snippet:</p>

<pre><code>root@cobbler-ubuntu:/var/lib/cobbler/snippets# pwd
/var/lib/cobbler/snippets
root@cobbler-ubuntu:/var/lib/cobbler/snippets# cat mate
# Install mate
mkdir -p /etc/yum.repos.d/back
mv /etc/yum.repos.d/CentOS* /etc/yum.repos.d/back/
yum install -y abattis-cantarell-fonts abrt abrt-addon-ccpp abrt-addon-kerneloops abrt-addon-pstoreoops abrt-addon-python abrt-addon-vmcore abrt-addon-xorg abrt-dbus abrt-desktop abrt-gui abrt-gui-libs abrt-java-connector abrt-libs abrt-python abrt-retrace-client accountsservice adwaita-cursor-theme adwaita-gtk2-theme adwaita-icon-theme alsa-plugins-pulseaudio alsa-utils atk atkmm atril atril-caja atril-libs at-spi2-atk at-spi2-core audit-libs-python augeas-libs avahi-autoipd avahi-glib avahi-libs bind-libs-lite bind-license brasero brasero-libs bzip2 ca-certificates cairo cairo-gobject cairomm caja caja-extensions caja-extensions-common caja-image-converter caja-open-terminal caja-schemas caja-sendto cdparanoia cdparanoia-libs cdrdao centos-indexhtml check checkpolicy cjkuni-uming-fonts clutter clutter-gst2 clutter-gtk cogl colord-libs compat-libcogl12 compat-libcogl-pango12 compat-libcolord1 coreutils cpp crda cronie cronie-anacron cryptsetup cups-libs cyrus-sasl-lib dbus-x11 dconf dconf-editor dejavu-fonts-common dejavu-sans-fonts dejavu-sans-mono-fonts dejavu-serif-fonts desktop-file-utils device-mapper device-mapper-event device-mapper-event-libs device-mapper-libs djvulibre-libs dleyna-connector-dbus dleyna-core dleyna-server dosfstools dracut dracut-config-rescue dracut-network dvd+rw-tools elfutils emacs-filesystem enchant engrampa eom exempi fftw-libs-double filezilla firefox firewall-config flac-libs fontconfig fontpackages-filesystem fortune-mod fros fuse fuse-libs gamin GConf2 gcr gd gdb gdisk gdk-pixbuf2 genisoimage geoclue2 ghostscript ghostscript-fonts giflib glibc glibc-common glibmm24 glx-utils gmp gnome-abrt gnome-desktop3 gnome-icon-theme gnome-icon-theme-extras gnome-icon-theme-legacy gnome-keyring gnome-keyring-pam gnome-online-accounts gnome-python2 gnome-python2-canvas gnome-themes-standard gnote gnu-free-fonts-common gnu-free-mono-fonts gnu-free-sans-fonts gnu-free-serif-fonts gnutls gom google-crosextra-caladea-fonts google-crosextra-carlito-fonts gparted gpm-libs graphite2 grilo grilo-plugins grub2 grub2-tools gsm gssdp gstreamer gstreamer1 gstreamer1-plugins-bad-free gstreamer1-plugins-base gstreamer1-plugins-good gstreamer-plugins-bad-free gstreamer-plugins-base gstreamer-plugins-good gstreamer-tools gtk2 gtk2-engines gtk2-immodule-xim gtk3 gtk3-immodule-xim gtkmm24 gtkmm30 gtk-murrine-engine gtksourceview2 gtkspell3 gucharmap gupnp gupnp-av gupnp-dlna gvfs gvfs-afc gvfs-archive gvfs-fuse gvfs-gphoto2 gvfs-mtp gvfs-smb harfbuzz harfbuzz-icu hicolor-icon-theme hunspell hunspell-en-US ibus ibus-chewing ibus-gtk2 ibus-gtk3 ibus-hangul ibus-kkc ibus-libpinyin ibus-libs ibus-m17n ibus-rawcode ibus-sayura ibus-setup ibus-table ibus-table-chinese icedax ilmbase ImageMagick initscripts iso-codes iw jasper-libs jbigkit-libs jomolhari-fonts json-glib kernel kernel-tools kernel-tools-libs kexec-tools khmeros-base-fonts khmeros-fonts-common kpartx krb5-libs lcms2 libao libarchive libart_lgpl libasyncns libatasmart libavc1394 libblkid libbluray libburn libcanberra libcanberra-gtk2 libcanberra-gtk3 libcdio libcdio-paranoia libcgroup libchewing libdmapsharing libdmx libdnet libdv libdvdnav libdvdread libepoxy liberation-fonts-common liberation-mono-fonts liberation-sans-fonts liberation-serif-fonts libevdev libevent libexif libfontenc libgdata libgee06 libglade2 libgnomecanvas libgnome-keyring libgphoto2 libgpod libgsf libgtop2 libgudev1 libgusb libgxps libhangul libICE libicu libiec61883 libieee1284 libimobiledevice libiptcdata libisofs libjpeg-turbo libkkc libkkc-common libkkc-data libldb libmatekbd libmatemixer libmateweather libmateweather-data libmbim libmediaart libmount libmpc libmpcdec libmspack libmtp libmx libnatpmp libnl libnm-gtk libnotify libntlm liboauth libofa libogg libosinfo libpeas libpinyin libpinyin-data libplist libpng libqmi libraw1394 libreport libreport-centos libreport-filesystem libreport-gtk libreport-plugin-mantisbt libreport-plugin-reportuploader libreport-plugin-rhtsupport libreport-plugin-ureport libreport-python libreport-web librsvg2 libsamplerate libsecret libsemanage-python libsexy libshout libsigc++20 libSM libsmbclient libsndfile libspectre libsrtp libssh2 libtalloc libtar libtdb libteam libtevent libthai libtheora libtiff libtomcrypt libtommath libtool-ltdl libudisks2 libusal libusb libusbx libuser-python libuuid libv4l libvisual libvorbis libvpx libwbclient libwebp libwmf-lite libwnck libwnck3 libwvstreams libX11 libX11-common libXau libxcb libXcomposite libXcursor libXdamage libXdmcp libXevie libXext libXfixes libXfont libXft libXi libXinerama libxkbfile libxklavier libxml2 libxml2-python libXmu libXpm libXrandr libXrender libXres libXScrnSaver libxshmfence libxslt libXt libXtst libXv libXvMC libXxf86dga libXxf86misc libXxf86vm lightdm lightdm-gobject lightdm-gtk lightdm-gtk-common lklug-fonts lockdev logrotate lohit-assamese-fonts lohit-bengali-fonts lohit-devanagari-fonts lohit-gujarati-fonts lohit-kannada-fonts lohit-malayalam-fonts lohit-marathi-fonts lohit-nepali-fonts lohit-oriya-fonts lohit-punjabi-fonts lohit-tamil-fonts lohit-telugu-fonts lrzsz lvm2 lvm2-libs lz4 m17n-contrib m17n-db m17n-lib madan-fonts marco mariadb-libs marisa mate-applets mate-backgrounds mate-calc mate-control-center mate-control-center-filesystem mate-desktop mate-desktop-libs mate-dictionary mate-disk-usage-analyzer mate-icon-theme mate-media mate-menus mate-menus-libs mate-menus-preferences-category-menu mate-netspeed mate-notification-daemon mate-panel mate-panel-libs mate-polkit mate-power-manager mate-screensaver mate-screenshot mate-search-tool mate-session-manager mate-settings-daemon mate-system-log mate-system-monitor mate-terminal mate-themes mate-user-guide mate-utils-common mathjax mathjax-ams-fonts mathjax-caligraphic-fonts mathjax-fraktur-fonts mathjax-main-fonts mathjax-math-fonts mathjax-sansserif-fonts mathjax-script-fonts mathjax-size1-fonts mathjax-size2-fonts mathjax-size3-fonts mathjax-size4-fonts mathjax-typewriter-fonts mathjax-winchrome-fonts mathjax-winie6-fonts mdadm media-player-info mesa-dri-drivers mesa-filesystem mesa-libEGL mesa-libgbm mesa-libGL mesa-libglapi mesa-libGLU mesa-libxatracker mesa-private-llvm mobile-broadband-provider-info ModemManager ModemManager-glib mozilla-filesystem mozo mpfr mtdev net-tools NetworkManager NetworkManager-adsl network-manager-applet NetworkManager-glib NetworkManager-libnm NetworkManager-openconnect NetworkManager-openvpn NetworkManager-pptp NetworkManager-team NetworkManager-tui NetworkManager-vpnc NetworkManager-vpnc-gnome nhn-nanum-fonts-common nhn-nanum-gothic-fonts nm-connection-editor nspr nss nss-softokn nss-softokn-freebl nss-sysinit nss-tools nss-util numactl-libs oddjob oddjob-mkhomedir opencc openconnect OpenEXR-libs openjpeg-libs openldap open-sans-fonts openssh openssh-clients openssh-server openssl openssl-libs open-vm-tools open-vm-tools-desktop openvpn opus orc overpass-fonts PackageKit-glib PackageKit-gstreamer-plugin paktype-naskh-basic-fonts pango pangomm paratype-pt-sans-fonts pcsc-lite-libs perl perl-Carp perl-constant perl-Encode perl-Exporter perl-File-Path perl-File-Temp perl-Filter perl-Getopt-Long perl-HTTP-Tiny perl-libs perl-macros perl-parent perl-PathTools perl-Pod-Escapes perl-podlators perl-Pod-Perldoc perl-Pod-Simple perl-Pod-Usage perl-Scalar-List-Utils perl-Socket perl-Storable perl-Text-ParseWords perl-threads perl-threads-shared perl-Time-HiRes perl-Time-Local pexpect pinentry-gtk pixman pkcs11-helper pluma pluma-data plymouth-graphics-libs plymouth-plugin-label plymouth-plugin-two-step plymouth-system-theme plymouth-theme-charge policycoreutils-python polkit polkit-gnome poppler poppler-data poppler-glib pptp procps-ng psmisc pulseaudio pulseaudio-libs pulseaudio-libs-glib2 pulseaudio-module-x11 pulseaudio-utils pycairo pygobject2 pygobject3 pygtk2 pygtk2-libglade pygtksourceview pyOpenSSL pytalloc python-augeas python-backports python-backports-ssl_match_hostname python-beaker python-chardet python-cups python-dmidecode python-inotify python-IPy python-kitchen python-mako python-markupsafe python-paste python-perf python-pwquality python-pyudev python-setuptools python-six python-tempita pyxdg qemu-guest-agent rarian rarian-compat rdma realmd recode redhat-menus rest rhythmbox rtkit samba-client-libs samba-common samba-common-libs samba-common-tools samba-libs sane-backends-libs satyr SDL seahorse selinux-policy selinux-policy-targeted setools-libs setroubleshoot setroubleshoot-plugins setroubleshoot-server sg3_utils-libs sil-abyssinica-fonts sil-nuosu-fonts sil-padauk-fonts simple-scan skkdic smc-fonts-common smc-meera-fonts sos sound-theme-freedesktop soundtouch speex spice-vdagent startup-notification stix-fonts stoken-libs sudo system-config-date system-config-date-docs system-config-language system-config-printer system-config-printer-libs system-config-users system-config-users-docs systemd systemd-libs systemd-python systemd-sysv taglib teamd telepathy-glib texlive-kpathsea-lib thai-scalable-fonts-common thai-scalable-waree-fonts totem totem-pl-parser tracker transmission-common transmission-gtk tuned tzdata ucs-miscfixed-fonts udisks2 unique upower urw-fonts usb_modeswitch usb_modeswitch-data usbmuxd usermode usermode-gtk util-linux vim-common vim-enhanced vim-filesystem vlgothic-fonts vorbis-tools vpnc vpnc-script vte wavpack web-assets-filesystem webkitgtk webkitgtk3 webrtc-audio-processing wireless-tools wodim wqy-microhei-fonts wqy-zenhei-fonts wvdial wxBase wxGTK xcb-util xchat xdg-user-dirs xdg-user-dirs-gtk xdg-utils xkeyboard-config xml-common xmlrpc-c xmlrpc-c-client xorg-x11-drivers xorg-x11-drv-ati xorg-x11-drv-dummy xorg-x11-drv-evdev xorg-x11-drv-fbdev xorg-x11-drv-intel xorg-x11-drv-nouveau xorg-x11-drv-qxl xorg-x11-drv-synaptics xorg-x11-drv-v4l xorg-x11-drv-vesa xorg-x11-drv-vmmouse xorg-x11-drv-vmware xorg-x11-drv-void xorg-x11-drv-wacom xorg-x11-font-utils xorg-x11-server-common xorg-x11-server-utils xorg-x11-server-Xorg xorg-x11-utils xorg-x11-xauth xorg-x11-xinit xorg-x11-xkb-utils xvattr yelp yelp-libs yelp-xsl yumex zenity
systemctl isolate graphical.target
systemctl set-default graphical.target
</code></pre>

<p>Now involved this snippet in <code>ks_end</code></p>

<pre><code># pwd
/var/lib/cobbler/kickstarts
# vim sample_end.ks
    # Insert a key
    $SNIPPET('publickey')
    # Instal mate
    $SNIPPET('mate')
    # End final steps
    %end
</code></pre>

<p>Now run <code>cobbler sync</code> for syncing your configurations.</p>

<p>Next time you bootstrap a machine, it will automatically runs into MATE desktop.</p>

<p><img src="/images/2016_05_05_22_56_57_672x489.jpg" alt="/images/2016_05_05_22_56_57_672x489.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TipsOnOSExperiment]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/04/24/tipsonosexperiment/"/>
    <updated>2016-04-24T17:32:12+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/04/24/tipsonosexperiment</id>
    <content type="html"><![CDATA[<p>为了在家里验证一下DevStack的网络配置，组建了一个网络，涉及到的点比较多，以下是
具体记录。</p>

<h3>交换机配置</h3>

<p>前段时间从美国亚马逊买回来一个TP-LINK的千兆交换机一直没用起来，型号是TL-SG108E
，8口可网管交换机。但前面有写过文章可以用来参考:</p>

<p><a href="http://purplepalmdash.github.io/blog/2015/12/12/ba-wan-tl-sg108e/">http://purplepalmdash.github.io/blog/2015/12/12/ba-wan-tl-sg108e/</a></p>

<p>但这篇文章里讲的主要还是ovs后虚拟机的vlan，和最近要做的DevStack的FloatIP配置稍
微有点差异。</p>

<h3>网络规划</h3>

<p>家里已有网络192.168.177.0/24, 这个网络是可以访问Internet的。所以DevStack机器上
的eth0将连接到这个网段，并在其上分配floating IP.</p>

<p>另外我们需要创建一个VLAN隔离的private network，用于给DevStack里的虚拟机默认启
动后分配IP地址。将DevStack机器上的eth1连接到此网络。</p>

<h3>配置交换机</h3>

<p>TP-LINK的DEB-100网卡是比较皮实，奈何win10驱动需要找，随便找了个淘宝9.9包邮的
USB转10兆网卡连上SurfacePro，开始配置交换机。</p>

<p>步骤:  <br/>
打开桌面的<code>Easy Smart Configuration Utility</code>，开始自动发现局域网内的交换机，如
下图:</p>

<p><img src="/images/2016_04_24_17_58_49.jpg" alt="/images/2016_04_24_17_58_49.jpg" /></p>

<p>需要重新配置下USB有线网卡的IP地址才能连接上交换机:</p>

<p><img src="/images/2016_04_24_18_02_45.jpg" alt="/images/2016_04_24_18_02_45.jpg" /></p>

<p>双击发现的交换机，用<code>admin/admin</code>登录后的界面如下:</p>

<p><img src="/iamges/2016_04_24_18_08_04.jpg" alt="/images/2016_04_24_18_08_04.jpg" /></p>

<p>以前我曾经把这个交换机配置成802.1Q VLAN, 这次基于端口来隔离，所以要配置成<code>Port
Based VLAN</code>, 配置完毕后的画面如下:</p>

<p><img src="/images/2016_04_24_18_20_36.jpg" alt="/images/2016_04_24_18_20_36.jpg" /></p>

<p>这种基于端口VLAN的验证方法很简单，将上网机和宽带路由器分别插在1～4和5～8口，即
可测试出VLAN被端口隔离。但这好像不是DevStack中需要设置的。</p>

<p>还是继续配置802.1Q VLAN. 值得注意的是，如果之前配置端口VLAN时将SurfacePro的连
接和交换机网段隔离了，那可能会连接不上，换回同一VLAN即可连接上。</p>

<p>配置vlan100如以下图所示:</p>

<p><img src="/images/2016_04_24_19_51_15.jpg" alt="/images/2016_04_24_19_51_15.jpg" /></p>

<h3>测试VLAN</h3>

<p>将两台PC连接在5~8口上，VLAN100。</p>

<p>PC1, ArchLinux, Systemd配置VLAN:</p>

<pre><code>$ cat enp0s25.100.network
[Match]
Name=enp0s25.100

[Network]
DNS=192.168.2.1
Address=192.168.2.1/24
$ cat enp0s25.100.netdev 
[NetDev]
Name=enp0s25.100
Kind=vlan

[VLAN]
Id=100

[Network]
DNS=192.168.2.1
Address=192.168.2.1/24
Gateway=192.168.2.1
$ pwd
/etc/systemd/network
</code></pre>

<p>重新启动PC1后，<code>192.168.2.1</code>将成为VLAN100口的地址。作为<code>192.168.2.1</code>,我们在这
个端口上启动dhcp服务及路由转发等服务。</p>

<pre><code>$ sudo pacman -S dhcp
$ sudo systemctl enable dhcpd4.service
</code></pre>

<p>干掉冗余的默认dhcpd.conf文件，写一个最小的配置文件:</p>

<pre><code>$ sudo vim /etc/dhcpd.conf.example 
$ sudo vim /etc/dhcpd.conf         
option domain-name-servers 180.76.76.76,223.5.5.5;
option subnet-mask 255.255.255.0;
option routers 192.168.2.1;
subnet 192.168.2.0 netmask 255.255.255.0 {
  range 192.168.2.150 192.168.2.250;

  host macbookpro{
   hardware ethernet 70:56:81:22:33:44;
   fixed-address 192.168.2.199;
  }
}
</code></pre>

<p>开启dhcpd服务:</p>

<pre><code>$ sudo systemctl start dhcpd4.service
</code></pre>

<p>PC2, 用openvswitch的vlan配置, libvirt的XML配置如下:</p>

<pre><code>    &lt;interface type='bridge'&gt;
      &lt;mac address='52:54:00:fd:03:e9'/&gt;
      &lt;source bridge='ovsbr0'/&gt;
      &lt;vlan trunk='yes'&gt;
        &lt;tag id='100' nativeMode='untagged'/&gt;
      &lt;/vlan&gt;
      &lt;virtualport type='openvswitch'&gt;
        &lt;parameters interfaceid='fb3e7f34-6fcd-41dc-8fed-c3ffe0d54b18'/&gt;
      &lt;/virtualport&gt;
</code></pre>

<p>测试，即启动PC2上的虚拟机，若虚拟机能获得IP地址，则说明VLAN配置成功。</p>

<h3>DevStack网络配置</h3>

<p>操作系统为Ubuntu14.04, 网卡为eth0(192.168.177.100)和eth1(vlan 100)</p>
]]></content>
  </entry>
  
</feed>
