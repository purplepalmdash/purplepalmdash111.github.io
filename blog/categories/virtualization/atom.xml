<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Virtualization | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/virtualization/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-12-10T20:06:15+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OpenVswitch on Ubuntu14.04]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/10/openvswitch-on-ubuntu14-dot-04/"/>
    <updated>2015-12-10T15:33:24+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/10/openvswitch-on-ubuntu14-dot-04</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<p>Install openvswitch via:</p>

<pre><code># apt-get update
# apt-get install -y openvswitch-common openvswitch-switch
</code></pre>

<p>List the installed module via:</p>

<pre><code># lsmod | grep open
openvswitch            66901  0 
gre                    13808  1 openvswitch
vxlan                  37619  1 openvswitch
libcrc32c              12644  1 openvswitch
# ovs-vsctl --version
ovs-vsctl (Open vSwitch) 2.0.2
Compiled May 13 2015 18:49:53
</code></pre>

<h3>Configuration</h3>

<p>Edit the configuration of the networking:</p>

<pre><code>$ sudo vim /etc/network/interfaces
###########################################
## By using openVswitch, we enabled the following
###########################################
auto ovsbr0
iface ovsbr0 inet static
address 192.168.1.xx
netmask 255.255.0.0
gateway 192.168.1.xx
dns-nameservers 223.5.5.5 180.76.76.76
</code></pre>

<p>Now configure the ovs-switched bridge:</p>

<pre><code># ovs-vsctl add-br ovsbr0
# ovs-vsctl list-br
ovsbr0
# ovs-vsctl add-port ovsbr0 eth0 &amp;&amp; reboot
</code></pre>

<p>Now restart the computer you will get the ovs-bridged network running.</p>

<h3>Bridged With VLAN</h3>

<p>ToBeAdded</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tessera How-to]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/08/tessera-how-to/"/>
    <updated>2015-12-08T10:26:48+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/08/tessera-how-to</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<p>Installation steps are listed as following:</p>

<pre><code># apt-get install -y python-virtualenv
# git clone git@github.com:urbanairship/tessera.git
# cd tessera
# virtualenv .
# . bin/activate
# cd tessera-server/
# pip install -r requirements.txt
# pip install -r dev-requirements.txt
# cd ../tessera-frontend
# apt-get install -y npm
# npm install -g grunt-cli
# npm install
# ln -s /usr/bin/nodejs /usr/bin/node
# grunt
# which inv
/root/Code/second/tessera/bin/inv
</code></pre>

<h3>Start</h3>

<p>Start the service via:</p>

<pre><code># cd /root/Code/second/tessera/tessera-server/
# inv db.init
# inv run &amp;
# inv json.import 'demo/*'
</code></pre>

<p>Open the browser and visit <code>http://localhost:5000</code>, you could see the tessera&rsquo;s web
front.</p>

<p><img src="/images/2015_12_08_11_42_52_998x527.jpg" alt="/images/2015_12_08_11_42_52_998x527.jpg" /></p>

<h3>Import Graphite Data</h3>

<pre><code>(tessera)root@monitorserver:~/Code/second/tessera/tessera-server# vim tessera/config.py 
root@monitorserver:~/Code/second/tessera# cat tessera-server/tessera/config.py
GRAPHITE_URL               = 'http://192.168.10.192'
# inv graphite.import
</code></pre>

<p>Now you could see the imported graphite data.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spice Client]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/16/spice-client/"/>
    <updated>2015-11-16T21:20:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/16/spice-client</id>
    <content type="html"><![CDATA[<h3>Image Conversion</h3>

<p>Convert the vdi files into qcow2 file:</p>

<pre><code>$ qemu-img convert -f vdi -O qcow2 Windows81.vdi Windows81.qcow2
</code></pre>

<p>Then continue to create the virtual machine via importing the img.</p>

<h3>Spice Client</h3>

<p>Using virtviewer for view the remote machine.</p>

<pre><code>$ sudo pacman -S virtviewer
$ remote-viewer spice://localhost:5900
</code></pre>

<p>Or you could view the desktop via <code>spicec</code>.</p>

<p>The listening port could be view via <code>netstat -anp | grep 5900</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moving CloudStack From VM to Physical Node]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/01/moving-cloudstack-from-vm-to-physical-node/"/>
    <updated>2015-11-01T08:52:08+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/01/moving-cloudstack-from-vm-to-physical-node</id>
    <content type="html"><![CDATA[<h3>AIM</h3>

<p>To move the All-In-One CloudStack environment from kvm VM based to physical
machine.</p>

<h3>Copy VM Disk</h3>

<h3>Based On Ubuntu15.04</h3>

<p>First get all of the deb file from
<code>http://cloudstack.apt-get.eu/ubuntu/dists/trusty/4.5/pool/</code></p>

<p>Then setup a local repository, edit its <code>/etc/apt/sources.list</code> file:</p>

<pre><code># vim /etc/apt/sources.list
deb http://192.168.1.13/        cloudstackdeb/
</code></pre>

<p>Problem, For we have setup the ovsbr0 on Ubuntu15.04, how to solve its
networking together with cloudstack?</p>

<h3>Newly installed CentOS7</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thinking in VR]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/29/thinking-in-vr/"/>
    <updated>2015-10-29T16:00:39+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/29/thinking-in-vr</id>
    <content type="html"><![CDATA[<p>Restriction of the connections.</p>

<pre><code>http://www.cnblogs.com/cmt/archive/2013/03/13/2957583.html
http://bbs.m0n0china.org/viewthread.php?tid=16459
http://my.oschina.net/u/1169079/blog/397705
</code></pre>
]]></content>
  </entry>
  
</feed>
