<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Virtualization | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/virtualization/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-12-23T21:00:52+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ElastiStor与CloudStack集成]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/23/elastistoryu-cloudstackji-cheng/"/>
    <updated>2015-12-23T17:25:55+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/23/elastistoryu-cloudstackji-cheng</id>
    <content type="html"><![CDATA[<h3>安装ElastiStor</h3>

<p>建立虚拟机，4G内存， 2核，插入光盘后，进入到以下界面:</p>

<p><img src="/images/2015_12_23_17_25_15_759x415.jpg" alt="/images/2015_12_23_17_25_15_759x415.jpg" /></p>

<p>选择<code>both Center and Node</code>, 进入到以下界面后，配置网络相关信息:</p>

<p><img src="/images/2015_12_23_17_28_36_720x396.jpg" alt="/images/2015_12_23_17_28_36_720x396.jpg" /></p>

<p>search domain这一项配置如下， 随便添加某个域名，例如www.baidu.com:</p>

<p>安装过程:</p>

<p><img src="/images/2015_12_23_17_33_29_644x327.jpg" alt="/images/2015_12_23_17_33_29_644x327.jpg" /></p>

<p>选择时区：</p>

<p><img src="/images/2015_12_23_17_36_34_712x398.jpg" alt="/images/2015_12_23_17_36_34_712x398.jpg" /></p>

<p>安装完毕后，进入到登录界面:</p>

<p><img src="/images/2015_12_23_17_38_40_539x422.jpg" alt="/images/2015_12_23_17_38_40_539x422.jpg" /></p>

<p>默认密码就是我们在前面设置的，默认用户名是root.</p>

<h3>登录</h3>

<p>首次登录会遇到问题的解决:</p>

<p><img src="/images/2015_12_23_18_11_05_844x186.jpg" alt="/images/2015_12_23_18_11_05_844x186.jpg" /></p>

<p>以及:</p>

<p><img src="/images/2015_12_23_18_12_25_866x213.jpg" alt="/images/2015_12_23_18_12_25_866x213.jpg" /></p>

<p><img src="/images/2015_12_23_18_15_43_647x176.jpg" alt="images/2015_12_23_18_15_43_647x176.jpg" /></p>

<p>现在可以访问登录界面, 默认用户名/密码为admin/password.</p>

<p><a href="/images/2015_12_23_18_15_49_678x413.jpg">/images/2015_12_23_18_15_49_678x413.jpg</a></p>

<h3>配置</h3>

<p>后台可以可视化来配置， 从site-> HA Group-> Node， 添加完毕后我们可以看到以下界面：</p>

<p><img src="/images/2015_12_23_19_32_13_819x326.jpg" alt="/images/2015_12_23_19_32_13_819x326.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CloudMonkey Issue]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/22/cloudmonkey-issue/"/>
    <updated>2015-12-22T21:18:21+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/22/cloudmonkey-issue</id>
    <content type="html"><![CDATA[<h3>Could not start cloudmonkey</h3>

<p>After installing cloudstack, cloudmonkey couldnot be used, the reason is
listed as following:</p>

<pre><code>% cloudmonkey
Traceback (most recent call last):
  File "/usr/local/bin/cloudmonkey", line 5, in &lt;module&gt;
    from pkg_resources import load_entry_point
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py", line 2603, in &lt;module&gt;
    working_set.require(__requires__)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py", line 666, in require
    needed = self.resolve(parse_requirements(requirements))
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py", line 565, in resolve
    raise DistributionNotFound(req)  # XXX put more info here
pkg_resources.DistributionNotFound: requests
</code></pre>

<p>The solution is via:</p>

<pre><code># easy_install --upgrade pip
# pip install --upgrade setuptools
# pip install --upgrade distribute
# wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | python
</code></pre>

<p>So Now you could use cloudstack.</p>

<h3>Use Ansible Together With Cloudmonkey</h3>

<p>I think because my cloudstack agent didn&rsquo;t use a bridge, so the cloudmonkey runs failed.</p>

<h3>Cloudmonkey tips</h3>

<p>Configure the secstorage download address for local usage.</p>

<pre><code># cloudmonkey update configuration name=secstorage.allowed.internal.sites
 value=192.168.0.0/16
</code></pre>

<p>Create a new service offering:</p>

<pre><code># cloudmonkey create serviceoffering cpunumber=1 cpuspeed=500 displaytext=monkeyking
memory=256 name=monkeyking
</code></pre>

<p>Register the new template:</p>

<pre><code>cloudmonkey register template hypervisor=kvm zoneid=2ee04a60-499c-bcc6-c3ba92624b35 format=qcow2 name=tinycore displaytext=tinycoretemplate ispublic=true ostypeid=11 url=http://192.168.0.79/tiny.qcow2
</code></pre>

<p>The ostypeid could be adjusted in the graphical interface, while the ostypeid for
<code>other Linux(64-bit)</code> is</p>

<pre><code>ostypeid = ff2564a4-a91e-11e5-9855-52540048638c
</code></pre>

<p>Start an instance via cloudmonkey, refers to following command:</p>

<pre><code>$ Deploy VirtualMachine ZoneID=&lt;zoneid&gt; ServiceOfferingID=&lt;serviceofferingid&gt; TemplateID=&lt;templateid&gt; StartVM=false IPAddress=192.168.30.10 Name=My-VirtualMachine DisplayName=“My Virtual Machine”
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NetScaler VPX初始化配置]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/17/netscaler-vpxchu-shi-hua-pei-zhi/"/>
    <updated>2015-12-17T14:08:35+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/17/netscaler-vpxchu-shi-hua-pei-zhi</id>
    <content type="html"><![CDATA[<h3>初始化配置</h3>

<p>启动虚拟机以后，通过nsroot/nsroot登录入VPX.</p>

<p>清除所有配置:</p>

<p><img src="/images/2015_12_17_14_20_54_580x93.jpg" alt="/images/2015_12_17_14_20_54_580x93.jpg" /></p>

<p>如下，做IP配置:</p>

<p><img src="/images/2015_12_17_14_23_29_728x153.jpg" alt="/images/2015_12_17_14_23_29_728x153.jpg" /></p>

<p>初始化配置完毕以后，即可在web后台进行配置。</p>

<h3>License</h3>

<p>申请license的时候注意，选择的MAC地址不能有任何的<code>:</code>符号， 例如52:54:00:这种就不能通过成
功。 在Netscaler上可以通过以下命令查看host id:</p>

<pre><code>root@ns# lmutil lmhostid 
lmutil - Copyright (c) 1989-2013 Flexera Software LLC. All Rights Reserved. 
The FlexNet host ID of this machine is "xxxxxxx"
</code></pre>

<p>查看激活后的license情形:</p>

<pre><code>&gt; sh license
        License status:
                           Web Logging: YES
                      Surge Protection: YES
                        Load Balancing: YES
                     Content Switching: YES
....
</code></pre>

<p>参考:   <br/>
<a href="http://sam.yeung.blog.163.com/blog/static/222663482013811102013782/">http://sam.yeung.blog.163.com/blog/static/222663482013811102013782/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenVswitch on Ubuntu14.04]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/10/openvswitch-on-ubuntu14-dot-04/"/>
    <updated>2015-12-10T15:33:24+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/10/openvswitch-on-ubuntu14-dot-04</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<p>Install openvswitch via:</p>

<pre><code># apt-get update
# apt-get install -y openvswitch-common openvswitch-switch
</code></pre>

<p>List the installed module via:</p>

<pre><code># lsmod | grep open
openvswitch            66901  0 
gre                    13808  1 openvswitch
vxlan                  37619  1 openvswitch
libcrc32c              12644  1 openvswitch
# ovs-vsctl --version
ovs-vsctl (Open vSwitch) 2.0.2
Compiled May 13 2015 18:49:53
</code></pre>

<h3>Configuration</h3>

<p>Edit the configuration of the networking:</p>

<pre><code>$ sudo vim /etc/network/interfaces
###########################################
## By using openVswitch, we enabled the following
###########################################
auto ovsbr0
iface ovsbr0 inet static
address 192.168.1.xx
netmask 255.255.0.0
gateway 192.168.1.xx
dns-nameservers 223.5.5.5 180.76.76.76
</code></pre>

<p>Now configure the ovs-switched bridge:</p>

<pre><code># ovs-vsctl add-br ovsbr0
# ovs-vsctl list-br
ovsbr0
# ovs-vsctl add-port ovsbr0 eth0 &amp;&amp; reboot
</code></pre>

<p>Now restart the computer you will get the ovs-bridged network running.</p>

<h3>Bridged With VLAN</h3>

<p>Add/Remove port of the ovs-bridged:</p>

<pre><code># ovs-vsctl add-port ovsbr0 tap0 tag=22
# ovs-vsctl show
901c2b29-0764-4370-8d06-168b18339236
    Bridge "ovsbr0"
        Port "eth0"
            Interface "eth0"
        Port "tap0"
            tag: 22
            Interface "tap0"
        Port "ovsbr0"
            Interface "ovsbr0"
                type: internal
    ovs_version: "2.0.2"
# ovs-vsctl del-port ovsbr0 tap0
</code></pre>

<p>If you want to remove the tag, then:</p>

<pre><code>ovs-vsctl set port vnet0 tag=100
ovs-vsctl remove port vnet0 tag 100
</code></pre>

<h3>VLAN / OpenVswitch/ virt-manager</h3>

<p>Dumpxml will displayed as following:</p>

<pre><code>    &lt;interface type='bridge'&gt;
      &lt;mac address='52:54:00:0e:6b:d1'/&gt;
      &lt;source bridge='ovsbr0'/&gt;
      &lt;vlan trunk='yes'&gt;
        &lt;tag id='22' nativeMode='untagged'/&gt;
      &lt;/vlan&gt;
      &lt;virtualport type='openvswitch'&gt;
        &lt;parameters interfaceid='d5b7b981-8998-44c0-9344-0ade6b69ec1f'/&gt;
      &lt;/virtualport&gt;
      &lt;target dev='vnet0'/&gt;
      &lt;model type='virtio'/&gt;
      &lt;alias name='net0'/&gt;
      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/&gt;
    &lt;/interface&gt;
    &lt;interface type='bridge'&gt;
      &lt;mac address='52:54:00:3c:c9:24'/&gt;
      &lt;source bridge='ovsbr0'/&gt;
      &lt;vlan trunk='yes'&gt;
        &lt;tag id='100' nativeMode='untagged'/&gt;
      &lt;/vlan&gt;
      &lt;virtualport type='openvswitch'&gt;
        &lt;parameters interfaceid='06898d54-c0da-48c6-8b01-3307e70b995a'/&gt;
      &lt;/virtualport&gt;
      &lt;target dev='vnet1'/&gt;
      &lt;model type='virtio'/&gt;
      &lt;alias name='net1'/&gt;
      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x04' function='0x0'/&gt;
    &lt;/interface&gt;
    &lt;interface type='bridge'&gt;
      &lt;mac address='52:54:00:7b:e7:b0'/&gt;
      &lt;source bridge='ovsbr0'/&gt;
      &lt;virtualport type='openvswitch'&gt;
        &lt;parameters interfaceid='303c1f65-23ff-4017-93ba-f196ca1d05fb'/&gt;
      &lt;/virtualport&gt;
      &lt;target dev='vnet2'/&gt;
      &lt;model type='virtio'/&gt;
      &lt;alias name='net2'/&gt;
      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x0'/&gt;
    &lt;/interface&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tessera How-to]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/08/tessera-how-to/"/>
    <updated>2015-12-08T10:26:48+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/08/tessera-how-to</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<p>Installation steps are listed as following:</p>

<pre><code># apt-get install -y python-virtualenv
# git clone git@github.com:urbanairship/tessera.git
# cd tessera
# virtualenv .
# . bin/activate
# cd tessera-server/
# pip install -r requirements.txt
# pip install -r dev-requirements.txt
# cd ../tessera-frontend
# apt-get install -y npm
# npm install -g grunt-cli
# npm install
# ln -s /usr/bin/nodejs /usr/bin/node
# grunt
# which inv
/root/Code/second/tessera/bin/inv
</code></pre>

<h3>Start</h3>

<p>Start the service via:</p>

<pre><code># cd /root/Code/second/tessera/tessera-server/
# inv db.init
# inv run &amp;
# inv json.import 'demo/*'
</code></pre>

<p>Open the browser and visit <code>http://localhost:5000</code>, you could see the tessera&rsquo;s web
front.</p>

<p><img src="/images/2015_12_08_11_42_52_998x527.jpg" alt="/images/2015_12_08_11_42_52_998x527.jpg" /></p>

<h3>Import Graphite Data</h3>

<pre><code>(tessera)root@monitorserver:~/Code/second/tessera/tessera-server# vim tessera/config.py 
root@monitorserver:~/Code/second/tessera# cat tessera-server/tessera/config.py
GRAPHITE_URL               = 'http://192.168.10.192'
# inv graphite.import
</code></pre>

<p>Now you could see the imported graphite data.</p>
]]></content>
  </entry>
  
</feed>
