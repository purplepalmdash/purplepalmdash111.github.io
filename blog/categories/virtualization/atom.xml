<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Virtualization | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/virtualization/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-06-24T20:41:50+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[WH Worktips(6)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/24/wh-worktips-6/"/>
    <updated>2015-06-24T11:54:12+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/24/wh-worktips-6</id>
    <content type="html"><![CDATA[<h3>Migration</h3>

<p>So this time we will migrate the whole machine, that is the Cobbler Server from one physical machine to another one. The steps are:  <br/>
1. Transfer the harddisk files.   <br/>
2. Edit the <code>/etc/udev/rules.d/70-persistent-net.rules</code>, Change the eth1 to eth0, and remove the eth0 item.  <br/>
3. Edit the <code>/etc/sysconfig/network-scripts/ifcfg-eth0</code>, its mac address to the one you specified on step 2.   <br/>
4. Restart the machine.</p>

<h3>Modification &amp;&amp; Test</h3>

<p>Create a new machine, which mac address is <code>52:54:00:3a:87:4e</code>, and define it on Cobbler server:</p>

<pre><code>[root@z_WHServer ~]# cobbler system add --name=node147 --profile=CentOS-6.5-x86_64 --mac=52:54:00:3a:87:4e --interface=eth0 --ip-address=10.47.58.147 --hostname=node147 --gateway=10.47.58.1 --dns-name=node147
</code></pre>

<p>Now bootup the machine and let it be deployed by cobbler server. The deployment time depends on your disk speed.</p>

<p>At the same time, edit the Ansible configuration:</p>

<pre><code>[root@z_WHServer Ansible]# cat hosts
[node147]
10.47.58.147
[root@z_WHServer Ansible]# pwd
/root/Code/Ansible
</code></pre>

<p>Copy the repository to the <code>10.47.58.2:/var/www/html/</code>, and edit the Ansible configuration.   <br/>
And Also configure the nfs server for the second host, previously we use the one we got from the external nfs server.  <br/>
Also the download vhd template files.  <br/>
<code>
$ scp -r ./4.4/ root@10.47.58.2:/var/www/html/
[root@z_WHServer html]# chmod 777 -R 4.4
[root@z_WHServer CloudStack-Ansible-Playbook]# vim templates/cloudstack.repo.j2
[cloudstack]
name=cloudstack
baseurl=http://10.47.58.2/4.4/
clouder@pc121:/home/juju$ scp ./systemvm64template-* root@10.47.58.2:/var/www/html/
root@10.47.58.2's password:
systemvm64template-2014-06-23-master-xen.vhd.bz2                                                             100%  237MB  59.4MB/s   00:04
systemvm64template-4.4.1-7-kvm.qcow2.bz2                                                                     100%  291MB  36.4MB/s   00:08
clouder@pc121:/home/juju$ scp ./vhd-util root@10.47.58.2:/var/www/html/
[root@z_WHServer html]# chmod 777 systemvm64template-*
[root@z_WHServer html]# chmod 777 vhd-util
[root@z_WHServer html]# vim /etc/exports
/home/export *(rw,async,no_root_squash,no_subtree_check)
[root@z_WHServer html]# mkdir -p /home/export
[root@z_WHServer html]# chmod 777 -R /home/export/
[root@z_WHServer html]# chkconfig nfs on
[root@z_WHServer html]# chkconfig rpcbind on
[root@z_WHServer html]# service nfs restart
[root@z_WHServer html]# service rpcbind restart
[root@z_WHServer html]# iptables -D INPUT -j REJECT --reject-with icmp-host-prohibited
[root@z_WHServer home]# chown -R nobody /home/export/
[root@z_WHServer CloudStack-Ansible-Playbook]# vim cloudstack.yml
.......
    CSManagement:
      ManagementIP: 10.47.58.147
      SecondaryMount: /secondary
      NFSHost: 10.47.58.2
      NFSSecondaryShare: /home/export
      SysTemplateURLurl43: http://10.47.58.2/systemvm64template-2014-06-23-master-xen.vhd.bz2
      SysTemplateURLurl44: http://10.47.58.2/systemvm64template-4.4.1-7-kvm.qcow2.bz2
      SysTemplateURLhv: xenserver
      VhdutilURL: http://10.47.58.2/vhd-util
.....
</code></p>

<p>Now deploy the playbooks via the same process in:   <br/>
<a href="http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-4/">http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-4/</a></p>

<pre><code># cd /root/Code/Ansible/CloudStack-Ansible-Playbook
# ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=pip
# ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=base
# ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=mysql
# ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=mysql3306
# ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=csmanagement 
</code></pre>

<p>Visit
<a href="http://10.47.58.147:8080/client">http://10.47.58.147:8080/client</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Newest Version of Cobbler]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/24/install-newest-version-of-cobbler/"/>
    <updated>2015-06-24T09:38:50+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/24/install-newest-version-of-cobbler</id>
    <content type="html"><![CDATA[<h3>Background</h3>

<p>Cobbler has changed its homepage from <code>www.cobblerd.org</code> to <code>http://cobbler.github.io/</code>, thus some configuration will be be failed. In order to solve these problems, we have to upgrade to the newest version, current newest version is <code>2.6.9</code>.</p>

<h3>Download And Install</h3>

<p>Go to <a href="http://cobbler.github.io/downloads/2.6.x.html">http://cobbler.github.io/downloads/2.6.x.html</a> for selecting your distribution, and download them to your folder. Mine is configured via:</p>

<pre><code>$ wget http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/CentOS_CentOS-6/home:libertas-ict:cobbler26.repo
$ cp home\:libertas-ict\:cobbler26.repo /etc/yum.repos.d/cobbler26.repo
$ yum install -y cobbler cobbler-web
</code></pre>

<h3>Configuration</h3>

<p>After installation, configure your newest cobbler via:</p>

<pre><code>$ cobbler sync
$ reboot
$ cobbler signature update
</code></pre>

<p>By updating the signature of the cobbler, the newest system will be supported, like Ubuntu15.04, etc.</p>

<p>You can also update all of the loaders via:</p>

<pre><code># cobbler get-loaders --force
# cobbler sync
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Import More ISOs in Cobbler]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/23/import-more-isos-in-cobbler/"/>
    <updated>2015-06-23T20:52:09+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/23/import-more-isos-in-cobbler</id>
    <content type="html"><![CDATA[<h3>Ubuntu12.04</h3>

<p>Since you have the iso files, import it via:</p>

<pre><code>[root@CobblerServer iso]# mount -t iso9660 -o loop /mnt/iso/ubuntu-12.04.3-server-amd64.iso /mnt1
[root@CobblerServer iso]# cobbler import --name=Ubuntu-12.04 --arch=x86_64 --path=/mnt1/
[root@CobblerServer iso]# cobbler profile list
   CentOS-7-x86_64
   Ubuntu-12.04-x86_64
   Ubuntu14.04-x86_64
</code></pre>

<p>To make it quickly deployment, visit:    <br/>
<a href="http://purplepalmdash.github.io/blog/2015/05/18/my-configuration-on-cobbler-for-deploying-ubuntu12-dot-04/">http://purplepalmdash.github.io/blog/2015/05/18/my-configuration-on-cobbler-for-deploying-ubuntu12-dot-04/</a></p>

<p>Edit its profile like following:</p>

<pre><code>[root@CobblerServer kickstarts]# cobbler profile edit --name=Ubuntu-12.04-x86_64 --kickstart=/var/lib/cobbler/kickstarts/ubuntu1204.seed 
</code></pre>

<p>Create a new virtual machine for testing.</p>

<pre><code>[root@CobblerServer kickstarts]# cobbler system add --name=test1204 --profile=Ubuntu-12.04-x86_64 --mac=52:54:00:e4:2c:df --interface=eth0 --ip-address=10.3.3.33 --hostname=test1204 --gateway=10.3.3.1 --dns-name=test1204
</code></pre>

<p>Testing the tftpserver via:</p>

<pre><code>[dash@~]$ tftp 10.3.3.3   
tftp&gt; get /pxelinux.0
tftp&gt; quit
[dash@~]$ ls pxelinux.0 
pxelinux.0
</code></pre>

<p>Trouble-Shooting, you should very careful on your pxelinux.0 file, make sure you have the correct ones. Recently it&rsquo;s hard to get the right pxelinux.0 from cobbler loader sync.</p>

<h3>Ubuntu15.04</h3>

<p>Import the iso via:</p>

<pre><code>[root@CobblerServer iso]# mount -t iso9660 -o loop ./ubuntu-15.04-server-amd64.iso /mnt1/
[root@CobblerServer iso]# cobbler import --name=Ubuntu-15.04 --arch=x86_64 --path=/mnt1
</code></pre>

<p>Notice, here you will met Signature mismatch problem, do following:   <br/>
First update Cobbler: ?</p>

<pre><code>$ vim /etc/yum.repos.d/cobbler26.repo
[home_libertas-ict_cobbler26]
name=Cobbler (2.6.x) (CentOS_CentOS-6)
type=rpm-md
baseurl=http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/CentOS_CentOS-6/
gpgcheck=1
gpgkey=http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/CentOS_CentOS-6/repodata/repomd.xml.key
enabled=1
$ sudo yum install -y cobbler cobbler-web
</code></pre>

<p>And Trouble-Shooting for iptables(If you use redsocks):</p>

<pre><code># iptables -t nat -I OUTPUT -d 10.3.3.0/24 -j RETURN
</code></pre>

<p>Then signature update will OK:</p>

<pre><code>[root@CobblerServer redsocks]# cobbler signature update
task started: 2015-06-23_144247_sigupdate
task started (id=Updating Signatures, time=Tue Jun 23 14:42:47 2015)
Successfully got file from http://cobbler.github.com/signatures/2.6.x/latest.json
*** TASK COMPLETE ***
</code></pre>

<p>Re-import:</p>

<pre><code>[root@CobblerServer iso]# cobbler import --name=Ubuntu-12.04 --arch=x86_64 --path=/mnt1/
*** TASK COMPLETE ***
[root@CobblerServer mnt]# cobbler profile list
   CentOS-7-x86_64
   Ubuntu-12.04-x86_64
   Ubuntu-15.04-x86_64
   Ubuntu14.04-x86_64
</code></pre>

<p>Edit the profile via:</p>

<pre><code>[root@CobblerServer lib]# cd /var/lib/cobbler/kickstarts/
[root@CobblerServer kickstarts]# ls
default.ks    esxi5-ks.cfg      legacy.ks     sample_autoyast.xml  sample_esx4.ks   sample_esxi5.ks  sample_old.seed  ubuntu1204.seed
esxi4-ks.cfg  install_profiles  pxerescue.ks  sample_end.ks        sample_esxi4.ks  sample.ks        sample.seed
[root@CobblerServer kickstarts]# vim ubuntu1504.seed
</code></pre>

<p>Test it via:</p>

<pre><code>$ qemu-img create -f qcow2 Cobbler1504Test.qcow2 100G
$ cobbler profile edit --name=Ubuntu-15.04-x86_64 --kickstart=/var/lib/cobbler/kickstarts/ubuntu1504.seed
$  cobbler system add --name=test1504 --profile=Ubuntu-15.04-x86_64 --mac=52:54:00:2e:c0:ff --interface=eth0 --ip-address=10.3.3.34 --hostname=test1504 --gateway=10.3.3.1 --dns-name=test1504
</code></pre>

<p>Installed failed, verify it tomorrow.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(5)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-5/"/>
    <updated>2015-06-19T15:29:56+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-5</id>
    <content type="html"><![CDATA[<p>This worktips will enable the visibility for ansible deployed nodes.</p>

<pre><code>[root@z_WHServer Code]# cd ansible-tower-setup-2.1.5/
[root@z_WHServer ansible-tower-setup-2.1.5]# ls
ansible.cfg  configure  group_vars  host_vars  README.md  roles  setup.sh  site.yml
</code></pre>

<p>Later I will finish this. But remember the tutorial pdf works well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WH Worktips(4)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-4/"/>
    <updated>2015-06-19T11:32:04+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/19/wh-worktips-4</id>
    <content type="html"><![CDATA[<h3>A Whole Deployment</h3>

<pre><code>$ pwd
/home/juju/img/WolfHunter/WH
$ qemu-img create -f qcow2 z_Node113.qcow2 100G
$ 
</code></pre>

<p>Create Virtual Machine:</p>

<p><img src="/images/2015_06_19_11_39_45_474x366.jpg" alt="/images/2015_06_19_11_39_45_474x366.jpg" /></p>

<p>Memory:</p>

<p><img src="/images/2015_06_19_11_40_51_477x363.jpg" alt="/images/2015_06_19_11_40_51_477x363.jpg" /></p>

<p><img src="/images/2015_06_19_11_41_58_482x369.jpg" alt="/images/2015_06_19_11_41_58_482x369.jpg" /></p>

<p>Click <code>Customize configuration before install</code>:</p>

<p>VirtIO Disk 1:</p>

<p><img src="/images/2015_06_19_11_43_22_478x309.jpg" alt="/images/2015_06_19_11_43_22_478x309.jpg" /></p>

<p>Virtual Network Interface:</p>

<p><img src="/images/2015_06_19_11_44_12_553x205.jpg" alt="/images/2015_06_19_11_44_12_553x205.jpg" /></p>

<p>Notice the mac address is <code>52:54:00:9a:73:1a</code>.</p>

<h3>Cobbler Customization</h3>

<p>Define the node:</p>

<pre><code>[root@z_WHServer ~]#  cobbler system add --name=node113 --profile=CentOS-6.5-x86_64 --mac=52:54:00:9a:73:1a --interface=eth0 --ip-address=10.47.58.113 --hostname=node113 --gateway=10.47.58.1 --dns-name=node113
</code></pre>

<h3>Begin Installation</h3>

<p><img src="/images/2015_06_19_11_49_09_685x401.jpg" alt="/images/2015_06_19_11_49_09_685x401.jpg" /></p>

<h3>Configure</h3>

<p>Notice the ssh failed to 112 because we poweroff this node.</p>

<pre><code>ssh-keyscan 10.47.58.113&gt;&gt;/root/.ssh/known_hosts 
# 10.47.58.113 SSH-2.0-OpenSSH_5.3

# cd /root/Code/Ansible
# ansible-playbook ssh-addkey.yml --ask-pass
SSH password: 

PLAY [all] ******************************************************************** 

TASK: [install ssh key] ******************************************************* 
changed: [10.47.58.113]
fatal: [10.47.58.112] =&gt; SSH Error: ssh: connect to host 10.47.58.112 port 22: Connection timed out
    while connecting to 10.47.58.112:22
It is sometimes useful to re-run the command using -vvvv, which prints SSH debug output to help diagnose the issue.

PLAY RECAP ******************************************************************** 
           to retry, use: --limit @/root/ssh-addkey.retry

10.47.58.112               : ok=0    changed=0    unreachable=1    failed=0   
10.47.58.113               : ok=1    changed=1    unreachable=0    failed=0  
</code></pre>

<p>Check:</p>

<pre><code># ansible all -m shell -a "uptime"
10.47.58.113 | success | rc=0 &gt;&gt;
 04:32:21 up 32 min,  3 users,  load average: 0.00, 0.00, 0.00

10.47.58.112 | FAILED =&gt; SSH Error: ssh: connect to host 10.47.58.112 port 22: No route to host
    while connecting to 10.47.58.112:22
It is sometimes useful to re-run the command using -vvvv, which prints SSH debug output to help diagnose the issue.
</code></pre>

<p>Deployed via:</p>

<pre><code># cd /root/Code/Ansible/CloudStack-Ansible-Playbook
# ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=base
# ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=mysql
# ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=mysql3306
# ansible-playbook -i /root/Code/Ansible/hosts --limit=node113 ./cloudstack.yml --tags=csmanagement -vvvv
</code></pre>

<p>Now you could enjoy a new node&rsquo;s ansible deployment.</p>
]]></content>
  </entry>
  
</feed>
