<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/web/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-10-08T18:37:34+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Speed-Up the WP Website in TianChao]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/01/30/speed-up-the-wp-website-in-tianchao/"/>
    <updated>2015-01-30T23:09:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/01/30/speed-up-the-wp-website-in-tianchao</id>
    <content type="html"><![CDATA[<p>Since our Great Fire Wall forbidden the google, thus all of the google related service becomes available in china, this leads to access to wordpress based website which uses google online fonts pretty slow. Following is how to speedup your website without too many changes:   <br/>
First go to your website&rsquo;s folder, find the files which calls <code>fonts.googleapis.com</code>:</p>

<pre><code>$ grep -i "fonts.googleapis.com" ./ -r
./wp-content/themes/twentytwelve/functions.php:     $font_url = add_query_arg( $query_args, "$protocol://fonts.googleapis.com/css" );
./wp-content/themes/twentyfifteen/functions.php:        ), '//fonts.googleapis.com/css' );
./wp-content/themes/twentyfourteen/functions.php:       $font_url = add_query_arg( 'family', urlencode( 'Lato:300,400,700,900,300italic,400italic,700italic' ), "//fonts.googleapis.com/css" );
./wp-content/themes/tdpersona/functions.php:    wp_enqueue_style( 'tdpersona-googlefonts', '//fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700' );
./wp-content/themes/twentythirteen/functions.php:       $fonts_url = add_query_arg( $query_args, "//fonts.googleapis.com/css" );
./wp-includes/script-loader.php:        $open_sans_font_url = "//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,300,400,600&amp;subset=$subsets";
./wp-includes/js/tinymce/plugins/compat3x/css/dialog.css:@import url(//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,300,400,600&amp;subset=latin-ext,latin);
</code></pre>

<p>Replace all of the <code>fonts.googleapis.com</code> with <code>fonts.useso.com</code>, this could be done via scripts. <br/>
After modification, your website will be much more faster than before.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enable Apache2 Redirect]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/01/22/enable-apache2-redirect/"/>
    <updated>2015-01-22T04:02:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/01/22/enable-apache2-redirect</id>
    <content type="html"><![CDATA[<h3>Problem</h3>

<p>Want to redirect from <code>http://xxx/</code> to <code>http://xxx/a/b</code></p>

<h3>Solution</h3>

<p>Change the configuration file of the <code>/etc/apache2/sites-enabled/000-default</code>, enable the  <code>RedirectMatch</code>:</p>

<pre><code>    # For forwarding all of the request to '/' TO '/bin/view'
    RedirectMatch ^/$ /a/b
</code></pre>

<p>Restart the service of apache2 then everything goes OK.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Switching to Blogging Using DO]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/01/19/switching-to-blogging-using-do/"/>
    <updated>2015-01-19T21:09:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/01/19/switching-to-blogging-using-do</id>
    <content type="html"><![CDATA[<p>Since I changed the working PC, so I need to switch from the old machine to the new machine, while the new machine&rsquo;s network speed is pretty slow, that force me to switching from the local side working to vps-side working, following is the steps for Using DigitalOcean for updating my blog.</p>

<h3>Repository</h3>

<p>First using the git for pulling the repository from the github, following this article for setting the whole octopress system:  <br/>
<a href="http://kkkttt.github.io/blog/2014/07/30/zai-githubshang-bu-shu-ni-de-octopressbo-ke/">http://kkkttt.github.io/blog/2014/07/30/zai-githubshang-bu-shu-ni-de-octopressbo-ke/</a></p>

<h3>New Tips</h3>

<p>For the <code>_deploy</code> directory is the newly generated one, we have to do following changes:</p>

<pre><code>rake setup_github_pages
cd _deploy
rm -f ./index.html
git remove index.html
git pull origin master
cd ..
rake generate &amp;&amp; rake deply
</code></pre>

<p>After the above steps, Writing blog in Octopress becomes possible.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trouble Shooting on Lost SSH Connection]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/12/30/trouble-shooting-on-lost-ssh-connection/"/>
    <updated>2014-12-30T11:42:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/12/30/trouble-shooting-on-lost-ssh-connection</id>
    <content type="html"><![CDATA[<p>I found lots of ssh connection attack info under the folder of /var/log/btmp, So I decide to change the sshd default listening port, from 22 to xxxx. Following is the steps for doing this:</p>

<h3>Change SSHD Listening Port</h3>

<p>Change the default port from 22 to xxxx</p>

<pre><code># vim /etc/ssh/sshd_config
Change the port from 22 to xxxx
# service ssh restart
</code></pre>

<p>Now, congratulations, you lost all of your connections, since you have enable the iptables and banned all of the other ports.</p>

<h3>Solution</h3>

<p>Don&rsquo;t worry, we have digitalOcean&rsquo;s terminal service, from it we could reached the console.   <br/>
But the problem is: it&rsquo;s pretty slow for us to visit this webpage from China to US!  <br/>
Then we should use another machine which runs coreos.   <br/>
Create a new lxde based vnc machine simply via following command:</p>

<pre><code>core@Trustycore ~ $ docker pull dorowu/ubuntu-desktop-lxde-vnc
</code></pre>

<p>Run the machine</p>

<pre><code>docker run -i -t -p 6080:6080 dorowu/ubuntu-desktop-lxde-vnc
</code></pre>

<p>Then open your browser and visit:   <br/>
<code>http://Your_ip_address:6080/vnc.html</code> you could reached the vnc machine.</p>

<h3>Memory Problem</h3>

<p>Since the default memory is only 512MB, we have to enable the swapfile, thus we could use firefox for accessing the DigitalOcean terminal.  <br/>
Following is the steps:</p>

<pre><code>$ sudo dd if=/dev/zero of=/swapfile bs=1M count=1024
$ sudo chmod 600 /swapfile 
$ sudo mkswap /swapfile
$ sudo vim /etc/systemd/system/swap.service
 [Unit]  
 Description=Turn on swap  
 [Service]  
 Type=oneshot  
 Environment="SWAPFILE=/swapfile"
 RemainAfterExit=true  
 ExecStartPre=/usr/sbin/losetup -f ${SWAPFILE}  
 ExecStart=/usr/bin/sh -c "/sbin/swapon $(/usr/sbin/losetup -j ${SWAPFILE} | /usr/bin/cut -d : -f 1)"  
 ExecStop=/usr/bin/sh -c "/sbin/swapoff $(/usr/sbin/losetup -j ${SWAPFILE} | /usr/bin/cut -d : -f 1)"  
 ExecStopPost=/usr/bin/sh -c "/usr/sbin/losetup -d $(/usr/sbin/losetup -j ${SWAPFILE} | /usr/bin/cut -d : -f 1)"  
 [Install]  
 WantedBy=multi-user.target 
$ sudo  systemctl enable /etc/systemd/system/swap.service  
$ sudo systemctl start swap  
</code></pre>

<p>Now you could happily use firefox in your vnc window. <br/>
Simply login to the terminal window, and modify the configuration file, restart the ssh service, now you could also change the iptables rules, to open xxxx port.</p>

<p>Another way is to disable root login, in <code>/etc/ssh/sshd_config</code>, set<code>#PermitRootLogin yes</code> to <code>PermitRootLoginno</code>.</p>

<p>You will be safe.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set Tiny Tiny Rss Reader on DigitalOcean]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/12/29/set-tiny-tiny-rss-reader-on-digitalocean/"/>
    <updated>2014-12-29T10:00:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/12/29/set-tiny-tiny-rss-reader-on-digitalocean</id>
    <content type="html"><![CDATA[<p>Since Google Reader has been closed, many guys cannot find suitable Rss Reader for personal use. Following is a simple guildeline for setting up the Tiny Tiny Rss Reader on DigitalOcean, using docker, it&rsquo;s pretty simple for setting up .</p>

<h3>Container Setup</h3>

<p>Build two containers:</p>

<pre><code>cd code
mkdir TinyTinyRss
cd TinyTinyRss/
git clone https://github.com/clue/docker-ttrss.git
cd docker-ttrss/
docker run -d --name ttrssdb nornagon/postgres
docker run -d --link ttrssdb:db -p 8078:80 clue/ttrss
</code></pre>

<p>ttrssdb is the dababase name for postgres, while the clue/ttrss is the tinytinyRss Webapp.</p>

<h3>Effect</h3>

<p>Visit the following URL:  <br/>
<code>http://Your_IP:8078</code>  <br/>
Then you would see the following picture:  <br/>
<img src="/images/tinytinyrss.jpg" alt="/images/tinytinyrss.jpg" />  <br/>
The default username/password is admin/123456</p>

<h3>Commit Changes</h3>

<p>List the running images and commit the changes to the new container:</p>

<pre><code>~# docker ps
700c82aa344b        clue/ttrss:latest          /bin/sh -c 'php /con   3 days ago          Up 3 days           0.0.0.0:8078-&gt;80/tcp                                             dreamy_davinci 
# docker commit 700c82aa344b wmz_tinyrss
c85a9d1a15b18685ffc3441e18f327059928aca623a39b36780184676f6d0921
</code></pre>

<p>Now we could stop the running container and changes the listening port.</p>

<pre><code># docker stop 700c82aa344b
700c82aa344b
# docker run -d --link ttrssdb:db -p 8080:80 wmz_tinyrss
f378197f7a048a02550e9152a44929628cc77ce61ea1c9e223fc3c7a46fb9bb5
</code></pre>

<p>Now the tinyRss listens on 8080 port.</p>
]]></content>
  </entry>
  
</feed>
