<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Development | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/development/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-05-25T23:08:37+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Things to Be Done in These Days]]></title>
    <link href="http://purplepalmdash.github.io/blog/2013/10/22/things-to-be-done-in-these-days/"/>
    <updated>2013-10-22T08:42:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2013/10/22/things-to-be-done-in-these-days</id>
    <content type="html"><![CDATA[<p>There are following things to be done in recent days:</p>

<ul>
<li><strong>Using a local dictionary for refering the words   [Currently Done]</strong></li>
<li><strong>SNMP on different equipments    [Currently Done]</strong></li>
<li><strong>Try installing and using FreeBSD/NetBSD [Currently Done]</strong></li>
<li>Using python to do image manipulation</li>
<li>Using Python and other software to generate the big alubum pictures which contains different small pictures</li>
<li>How to compare images using Linux scripts</li>
<li><strong>How to create a local search engine on my personal web server.     [Currently Done]</strong></li>
<li>werc installation</li>
</ul>


<p><strong>This is an H1</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MarkdownSyntax]]></title>
    <link href="http://purplepalmdash.github.io/blog/2013/07/03/markdownsyntax/"/>
    <updated>2013-07-03T16:18:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2013/07/03/markdownsyntax</id>
    <content type="html"><![CDATA[<p>1. 自动编号的问题:</p>

<p>Markdown里的自动编号只适用于块(block)中的自动编号，也就是说，在使用了例如Solarized格式化代码块以后，全局中的自动编号不再起作用。
正常的自动编号, 不会有问题, 前标号分别为1/2/3:
{% codeblock %}
1. item 1
2. item 2
3. item 3
{% endcodeblock %}
加入代码块后的情形:
 item 1/item 2/item 3都将以1. item开头, 前标号变成1/1/1:
{% codeblock %}
1. item 1
// code blocks
2. item 2
// code blocks
3. item 3
{% endcodeblock %}
解决方法：使用Markdown转义字符, 在.前加\
{% codeblock %}
1. item 1
2. item 2
3. item 3
{% endcodeblock %}</p>

<p>2. Solarized高亮代码的两种用法:</p>

<p>把代码放在如下块中:
{% raw %}</p>

<pre><code>    //Your code here!
</code></pre>

<pre><code>或者

{% codeblock %}
//Your code here!
{% endcodeblock %}
</code></pre>

<p>{% endraw %}</p>

<p>代码高亮方法</p>

<p>a. 指定codeblock参数：
{% raw %}
    {% codeblock hello.c - hello.c %}
    #include &lt;stdio.h>
    int main(void)
    {
        printf(&ldquo;Hello World!\n&rdquo;);
        return 0;
    }
    {% endcodeblock %}
{% endraw %}</p>

<p>结果：
{% codeblock hello.c - hello.c %}</p>

<h1>include &lt;stdio.h></h1>

<p>int main(void)
{
    printf(&ldquo;Hello World!\n&rdquo;);
    return 0;
}
{% endcodeblock %}</p>

<p>b. 指定多行代码参数:</p>

<p>标题"Discover if a number is prime", 链接地址"<a href="http://...">http://...</a>&ldquo;, 链接名称"Source Article&rdquo;.
{% raw %}</p>

<pre><code class="ruby Discover if a number is prime http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/ Source Article">    class Fixnum
      def prime?
        ('1' * self) !~ /^1?$|^(11+?)\1+$/
      end
    end
</code></pre>

<p>{% endraw %}</p>

<pre><code class="ruby Discover if a number is prime http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/ Source Article">class Fixnum
  def prime?
    ('1' * self) !~ /^1?$|^(11+?)\1+$/
  end
end
</code></pre>

<p>3. Syntax Highlight 在 ArchLinux 上的问题：</p>

<p>因为ArchLinux默认的python版本是3, 导致pygments不能正确解析源文件，编辑：
    vim ~/.rvm/gems/ruby-1.9.3-p448/gems/pygments.rb-0.3.4/lib/pygments/mentos.py
    第一行
    /usr/bin/env python &ndash;> /usr/bin/env python2</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用github管理octopress源码]]></title>
    <link href="http://purplepalmdash.github.io/blog/2013/07/03/yong-githubguan-li-octopressyuan-ma/"/>
    <updated>2013-07-03T11:05:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2013/07/03/yong-githubguan-li-octopressyuan-ma</id>
    <content type="html"><![CDATA[<p>1. 新建或改变某个已存在的源码仓库名为"debian_octopress"，以后可以用<a href="https://github.com/kkkttt/debian_octopress.git">&ldquo;https://github.com/kkkttt/debian_octopress.git&rdquo;</a>来访问此仓库。</p>

<p>2. 配置Git:
{% codeblock %}
$ git init
$ git add README.md # 这个文件中可以添些项目的描述文字
$ git commit -m &ldquo;First Commit&rdquo;</p>

<h1>配置git的本地用户名和email</h1>

<p>$ git config &ndash;global user.email &ldquo;<a href="&#109;&#97;&#x69;&#108;&#116;&#x6f;&#x3a;&#x6b;&#x6b;&#x6b;&#x74;&#x74;&#116;&#x40;&#103;&#x6d;&#97;&#x69;&#108;&#46;&#99;&#x6f;&#109;">&#107;&#x6b;&#107;&#x74;&#116;&#116;&#64;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a>&rdquo;
$ git config &ndash;global user.name &ldquo;Trusty&rdquo;</p>

<h1>将文件夹里所有内容加入到git中并提交</h1>

<p>$ git add .
$ git commit -m &ldquo;First Sourcecode Commit&rdquo;</p>

<h1>同步到github</h1>

<p>$ git remote add origin <a href="https://github.com/kkkttt/debian_octopress.git">https://github.com/kkkttt/debian_octopress.git</a>
$ git push -u origin master &ndash;force
{% endcodeblock %}</p>

<p>3. 删除本地文件夹并同步到Github的方法:
{% codeblock %}
$ git rm -rf public.back
$ git commit -m &ldquo;remove backup directory&rdquo;
$ git push origin master
{% endcodeblock %}</p>

<p>4. 将本地修改同步到Github:</p>

<pre><code>$ git commit -m "do some changes"
</code></pre>

<p>这时候会列出本地修改过的内容，运行:</p>

<pre><code>$ git commit -a
</code></pre>

<p>修改需要提交的修改后运行下列命令后同步到Github:</p>

<pre><code>$ git push origin master
</code></pre>
]]></content>
  </entry>
  
</feed>
