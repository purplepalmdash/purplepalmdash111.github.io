<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Markdown | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/markdown/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-05-25T23:13:37+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Convert PDF From Markdown]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/04/03/convert-pdf-from-markdown/"/>
    <updated>2014-04-03T14:33:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/04/03/convert-pdf-from-markdown</id>
    <content type="html"><![CDATA[<p>There are 2 ways for me to convert Markdown into PDF. <br /></p>

<h3>pandoc Way</h3>

<p>Simple way for converting:<br /></p>

<pre><code>pandoc a.md -o b.pdf
</code></pre>

<p>Convert with embedded font:<br /></p>

<pre><code>pandoc jailbreak.md -o jailbreak.pdf --latex-engine=xelatex -V mainfont="WenQuanYi Zen Hei"
</code></pre>

<p>But if you includes the images, then the format maybe wrong.<br /></p>

<h3>RStudio Way</h3>

<p>Install rstudio in archlinux via:<br /></p>

<pre><code>yaourt -S rstudio-desktop-bin
</code></pre>

<p>When installing you will meet curl need ssl certification problem, simply add following line into the pkg make file.<br /></p>

<pre><code>==&gt; Edit PKGBUILD ? [Y/n] ("A" to abort)
==&gt; ------------------------------------
==&gt; y

Please add $EDITOR to your environment variables
for example:
export EDITOR="vim" (in ~/.bashrc)
(replace vim with your favorite editor)

==&gt; Edit PKGBUILD with:  vim

Add Following:   

DLAGENTS=("https::/usr/bin/curl -k -o %o %u")
</code></pre>

<p>After you installed rstudio, open the markdown file in the browser,and you have to install following packages:<br /></p>

<pre><code>&gt; install.packages("knitr")
&gt; install.packages("devtools")
&gt; devtools::install_github("rstudio/rmarkdown")
&gt; library(rmarkdown)
&gt; render('test1.Rmd', pdf_document())
</code></pre>

<p>Makesure your pandoc is the latest version before you really install the rmarkdown package.<br /> <br/>
If the markdown is written as in octopress, you have to specify the absolute position of the file:<br /></p>

<pre><code>&gt;  render('/home/Trusty/code/octo/heroku/Tomcat/source/dancecrf.markdown', pdf_document())
</code></pre>

<p>Now in the same file you will get the generated pdf.<br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Converting Markdown Into PDF Under ArchLinux]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/02/26/converting-markdown-into-pdf-under-archlinux/"/>
    <updated>2014-02-26T15:08:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/02/26/converting-markdown-into-pdf-under-archlinux</id>
    <content type="html"><![CDATA[<p>Today I want to convert the webpages which wrote from markdown into PDF format file. Following is the steps for how to convert. <br />
Just one command is OK:<br /></p>

<pre><code>    pandoc jailbreak.md -o jailbreak.pdf --latex-engine=xelatex -V mainfont="WenQuanYi Zen Hei"
</code></pre>

<p>But the link will cause the format ugly, then we have to use a template for fixing this, download the template from following URL:<br/>
<a href="https://raw.github.com/tzengyuxio/pages/gh-pages/pandoc/pm-template.latex">https://raw.github.com/tzengyuxio/pages/gh-pages/pandoc/pm-template.latex</a><br />
Then put it into the same directory, replace the following lines with the fonts which you have installed on your system:<br /></p>

<pre><code>    # Following will be deleted
    \setCJKmainfont{LiHei Pro}  % 設定中文字型
    \setCJKmainfont{WenQuanYi Zen Hei}  % 設定中文字型
</code></pre>

<p>Now you lock of Microsoft fonts, simply copy it from your own windows machine, and setup a link<br /></p>

<pre><code>    ln -s /windows/Windows/Fonts /usr/share/fonts/WindowsFonts
    # Update font cache
    fc-cache
</code></pre>

<p>Generate the pdf file with the following command:<br /></p>

<pre><code>    pandoc jailbreak.md -o jailbreak1.pdf --latex-engine=xelatex -V mainfont="WenQuanYi Zen Hei" --template=pm-template.latex
</code></pre>

<p>Now you will see the well-formated PDF file has been generated from the Markdown file. <br /></p>

<p><img src="/images/wellpdf.jpg" alt="/images/wellpdf.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Table in Octopress]]></title>
    <link href="http://purplepalmdash.github.io/blog/2013/11/09/table-in-octopress/"/>
    <updated>2013-11-09T14:17:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2013/11/09/table-in-octopress</id>
    <content type="html"><![CDATA[<h3>Table in Markdown</h3>

<p>Table in markdown can be represent like following:</p>

<pre><code>    | Tables        | Are           | Cool  |
    | ------------- |:-------------:| -----:|
    | col 3 is      | right-aligned | $1600 |
    | col 2 is      | centered      |   $12 |
    | zebra stripes | are neat      |    $1 |
</code></pre>

<p>Or we can use the pure html code:</p>

<pre><code>    &lt;table&gt;
        &lt;tr&gt;
            &lt;td&gt;Foo&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/table&gt;
</code></pre>

<p>By both method we can create our own table.</p>

<h3>Display Table in Octopress</h3>

<p>By default, table won&rsquo;t be displayed in octopress, this is because we don&rsquo;t provide the corresponding css file to table. we have first to add the css file under source/sytlesheets/data-table.css:
{% codeblock data-table.css-data-table.css %}
* + table {
  border-style:solid;
  border-width:1px;
  border-color:#e7e3e7;
}</p>

<ul>
<li><ul>
<li>table th, * + table td {
border-style:Trustyed;
border-width:1px;
border-color:#e7e3e7;
padding-left: 3px;
padding-right: 3px;
}</li>
</ul>
</li>
<li><ul>
<li>table th {
border-style:solid;
font-weight:bold;
background: url(&ldquo;/images/noise.png?1330434582&rdquo;) repeat scroll left top #F7F3F7;
}</li>
</ul>
</li>
<li><ul>
<li>table th[align=&ldquo;left&rdquo;], * + table td[align=&ldquo;left&rdquo;] {
text-align:left;
}</li>
</ul>
</li>
<li><ul>
<li>table th[align=&ldquo;right&rdquo;], * + table td[align=&ldquo;right&rdquo;] {
text-align:right;
}</li>
</ul>
</li>
<li><ul>
<li>table th[align=&ldquo;center&rdquo;], * + table td[align=&ldquo;center&rdquo;] {
text-align:center;
}
{% endcodeblock %}
Then we can add the following line in source/_includes/head.html:</li>
</ul>
</li>
</ul>


<pre><code>      &lt;link href="http://purplepalmdash.github.io/stylesheets/data-table.css" media="screen, projection" rel="stylesheet" type="text/css" /&gt;
</code></pre>

<p>By now we can see the tables as following:</p>

<p><img src="/images/table1.jpg" alt="Table 1" /></p>

<h3>Table Processing in vim</h3>

<p>Install htmltidy via:</p>

<pre><code>    $ pacman -S tidyhtml
</code></pre>

<p>Add following lines into your own ~/.vimrc</p>

<pre><code>    :vmap ,x :%!tidy -q -i --show-errors 0&lt;CR&gt;
    :command Thtml :%!tidy -q -i --show-errors 0
    :command Txml  :%!tidy -q -i --show-errors 0 -xml
</code></pre>

<p>Open your vim and type in:</p>

<pre><code>    :Thtml
</code></pre>

<p>by now you can get tidy html.</p>
]]></content>
  </entry>
  
</feed>
