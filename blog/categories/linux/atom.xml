<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-12-02T22:19:01+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Awesome's Battery Indicator]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/25/awesomes-battery-indicator/"/>
    <updated>2015-11-25T12:18:29+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/25/awesomes-battery-indicator</id>
    <content type="html"><![CDATA[<h3>Background</h3>

<p>I installed ArchLinux+Awesome On my SurfacePro, while the charger of Surface Pro is not
so tight to the pad. Thus I have to use a battery indicator in Awesome.</p>

<h3>Software</h3>

<p>Refers to:</p>

<p><a href="http://www.everythingisvoid.com/uncategorized/simple-battery-status-indicator-awesome-window-manager">http://www.everythingisvoid.com/uncategorized/simple-battery-status-indicator-awesome-window-manager</a></p>

<p>Install steps on ArchLinux:</p>

<pre><code>$ sudo pacman -S luarocks5.1 gobject-introspection acpi
$ sudo luarocks-5.1 install battery_status
</code></pre>

<p>You could manually run <code>show_battery_status</code> or add it into your own rc.lua file:</p>

<pre><code>$ vim ~/.config/awesome/rc.lua
----.....................
autorunApps =
{
--.........
"synergyc 192.168.0.119",
"sudo echo 1240&gt;/sys/class/backlight/intel_backlight/brightness", 
"fcitx",
"show_battery_status", 
----.....................
</code></pre>

<p>Now restart the awesome you could see the battery indicator.</p>

<h3>Add Charging Indicator</h3>

<p>First download the source code from github:</p>

<pre><code>$ git clone https://github.com/svarogg/battery_status
</code></pre>

<p>Debug with luarocks loader:</p>

<pre><code>rocks-5.1   lua5.1 -lluarocks.loader
Lua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio
&gt; require("rex_posix")
&gt; rex = require("rex_posix")
&gt; battery_rex = rex.new([[([^,]{1,3})%]])
&gt; rex=require("rex_posix")
&gt; battery_rex=rex.new([[([^,]{1,3})%]])
&gt; acpi=io.popen('acpi 2&gt;&amp;1')
&gt; acpi_res = acpi:read("*line")
&gt; acpi:close()
&gt; print (acpi_res)
Battery 0: Full, 100%
&gt; percentage=battery_rex:match(acpi_res)
&gt; print (percentage)
100
&gt; print(type(percentage))
string
&gt; print(type(tonumber(percentage)))
number
&gt; adapter = io.popen('acpi -a 2&gt;&amp;1')
&gt; adapter_res = adapter:read("*line")
&gt; adapter:close()
&gt; print(adapter_res)
Adapter 0: on-line
&gt; charge_rex = rex.new([[(on|off)]])
&gt; print(charge_rex:match(adapter_res))
on
</code></pre>

<p>We get the status of the charge, then update the corresponding icon to the systray.</p>

<p>The modified repository could be fetched from:</p>

<p><a href="https://github.com/purplepalmdash/Awesome-Battery-Indicator">https://github.com/purplepalmdash/Awesome-Battery-Indicator</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on ArchLinux on SSD for SurfacePro]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/18/tips-on-archlinux-on-ssd-for-surfacepro/"/>
    <updated>2015-11-18T16:59:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/18/tips-on-archlinux-on-ssd-for-surfacepro</id>
    <content type="html"><![CDATA[<h3>Hardware</h3>

<p>Surface Pro, KingShare 128G SSD(USB).</p>

<p>Picture will be updated after successfully installed.</p>

<h3>Virtualbox Way</h3>

<p>Make a vmdk file which actually points to the USB Disk:</p>

<pre><code>$ sudo VBoxManage internalcommands createrawvmdk -filename ./rawusb1.vmdk -rawdisk \ 
/dev/disk/by-id/usb-KINGSHAR_KS-CUTS25W_123456789010-0:0
$ sudo chown -R YourName rawusb1.vmdk
</code></pre>

<p>Now using this rawdisk for starting the VirtualBox based machine.</p>

<p><img src="/images/2015_11_18_17_10_46_645x529.jpg" alt="/images/2015_11_18_17_10_46_645x529.jpg" /></p>

<h3>Installation</h3>

<p>The system installation is refers to following links:</p>

<p><a href="https://wiki.archlinux.org/index.php/Microsoft_Surface_Pro_3">https://wiki.archlinux.org/index.php/Microsoft_Surface_Pro_3</a></p>

<p><a href="https://wiki.archlinux.org/index.php/Installing_Arch_Linux_on_a_USB_key">https://wiki.archlinux.org/index.php/Installing_Arch_Linux_on_a_USB_key</a></p>

<h3>Updated Configuration</h3>

<p>Finally I installed the surface pro by using a usb dongle which burned the archlinux
installation iso, put it into the surface pro and startup the machine pressing power
key and volume down key, it will goes into the installtion steps.</p>

<p>Install the system on the SSD, the main steps are available at:</p>

<p><a href="http://purplepalmdash.github.io/blog/2014/06/16/archlinux-on-surface-pro/">http://purplepalmdash.github.io/blog/2014/06/16/archlinux-on-surface-pro/</a></p>

<pre><code>root@archiso ~ # mount /dev/sdb2 /mnt
root@archiso ~ # mount /dev/sdb1 /mnt/boot/EFI 
root@archiso ~ # arch-chroot /mnt /bin/bash
[root@archiso /]# grub-install --target=x86_64-efi --efi-directory=/boot/EFI \ 
--bootloader-id=arch_grub --recheck
[root@archiso /]# grub-mkconfig -o /boot/grub/grub.cfg
</code></pre>

<p>Because I frequently change the installtion media(I have SSD and Harddisk), so
everytime I change the installtion media, I have to run above steps again.</p>

<h3>Kernel Configuration</h3>

<p>Install the kernel from yaourt, you could get the surfacepro3 compatiable linux kernel,
install it on surface pro will also be OK:</p>

<pre><code>$ yaourt surfacepro
1 aur/linux-surfacepro3 4.3-1 [installed] (5)
    The Linux-surfacepro3 kernel and modules
2 aur/linux-surfacepro3-docs 4.3-1 (5)
    Kernel hackers manual - HTML documentation that comes with the Linux-surfacepro3
kernel
3 aur/linux-surfacepro3-headers 4.3-1 (5)
    Header files and scripts for building modules for Linux-surfacepro3 kernel
</code></pre>

<p>After installation, you have to manually generate the grub items:</p>

<pre><code>$ sudo grub-mkconfig -o /boot/grub/grub.cfg
</code></pre>

<p>Now reboot the surface pro, you could view the kernel has been upgraded to our newly
installed version:</p>

<pre><code>➜  ~  uname -a
Linux surfacepro 4.3.0-1-surfacepro3 #1 SMP PREEMPT Fri Nov 20 05:47:41 CST 2015 x86_64
GNU/Linux
</code></pre>

<p>With the new version of kernel, you won&rsquo;t face too much problems, my problem is when
using the official kernel, my wifi will get stucked, sometimes the machine will be
dead.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Variety]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/13/variety/"/>
    <updated>2015-11-13T11:05:05+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/13/variety</id>
    <content type="html"><![CDATA[<h3>参考</h3>

<p><a href="http://peterlevi.com/variety/how-to-install/">http://peterlevi.com/variety/how-to-install/</a></p>

<h3>安装</h3>

<p>Ubuntu上，从ppa安装:</p>

<pre><code>$ sudo add-apt-repository ppa:peterlevi/ppa
$ sudo apt-get update
$ sudo apt-get install variety
</code></pre>

<h3>配置</h3>

<p>安装完毕后，在终端下键入<code>variety</code>即可开始配置该软件，第一次会询问是否创建一个用于多终端
主机之间同步桌面壁纸的账户:</p>

<p><img src="/images/2015_11_13_11_10_35_755x507.jpg" alt="/images/2015_11_13_11_10_35_755x507.jpg" /></p>

<p>这一步是可选的，我们在这里先注册上. 需要注意的是，用翻墙后的浏览器完成注册.</p>

<p>一般情况下这里就能使用了，但是awesome桌面环境下需要增加一下这行:</p>

<pre><code>$ vim /home/XXXXXXX/.config/variety/scripts/set_wallpaper
### Finally we comes to awesome!  
awsetbg "$WP" 2&gt; /dev/null
</code></pre>

<h3>进一步美化</h3>

<p>Awesome下就只能换换壁纸，本身终端也不支持透明度的配置，如果是gnome之类的桌面环境，可以
把terminal emulator的透明度打开，能获得很好的视觉效果。</p>

<p>默认的更新频率是5分钟更新一次，当然在配置界面下可以更改为更短/更长的时限。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use OpenWRT Router for Lan Forwarding]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/15/use-openwrt-router-for-lan-forwarding/"/>
    <updated>2015-10-15T11:50:28+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/15/use-openwrt-router-for-lan-forwarding</id>
    <content type="html"><![CDATA[<h3>USB Ethernet</h3>

<p>Insert the USB Ethernet Dongle into the Ubuntu14.04, it will be automatically
recognized and initialized.</p>

<pre><code>$ dmesg | tail 
    [10323.307662] asix 2-2.2:1.0 eth1: register 'asix' at usb-0000:00:1d.7-2.2, ASIX
    AX88772B USB 2.0 Ethernet, 84:xx:xx:xx:xx
    [10323.307704] usbcore: registered new interface driver asix
    [10324.285425] IPv6: ADDRCONF(NETDEV_UP): eth1: link is not ready
$ ifconfig eth1
    eth1      Link encap:Ethernet  HWaddr 84:xx:xx:xx:
</code></pre>

<p>Be care to see the udev rules definition:</p>

<pre><code>$ cat /etc/udev/rules.d/70-persistent-net.rules 

# USB device 0x:0x (asix)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="84:xx:xx:xx:xx",
ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="eth*", NAME="eth1"
</code></pre>

<h3>IP Configuration</h3>

<p>Add the following items into the network configuration file:</p>

<pre><code># vim /etc/network/interfaces 
    # usb network eth1
    allow-hotplug eth1
    iface eth1 inet static
    address 10.0.80.1
    netmask 255.255.255.0
</code></pre>

<p>Now restart the network, to see the ethernet has been enabled.</p>

<h3>DHCPD Configuration</h3>

<p>Add following configuration to the /etc/dhcp/dhcpd.conf:</p>

<pre><code>### this is for USB NET

subnet
10.0.80.0 netmask 255.255.255.0 {
# --- default gateway
option routers
10.0.80.1;
# --- Netmask
option subnet-mask
255.255.255.0;
# --- Broadcast Address
option broadcast-address
10.0.80.255;
# --- Domain name servers, tells the clients which DNS servers to use.
option domain-name-servers
223.5.5.5,180.76.76.76;
option time-offset 0;
range 10.0.80.3 10.0.80.13;
default-lease-time 1209600;
max-lease-time 1814400;
}
</code></pre>

<h3>IPtables and dhcpd</h3>

<p>Add following items into the ~/.config/awesome/rc.lua</p>

<pre><code>autorunApps =
{
--.........
"blueman-manager",
"fcitx",
"/home/dash/Downloads/what/whatpulse",
-- "pidgin",
"sudo iptables -t nat -A POSTROUTING -s 10.0.70.0/24 ! -d 10.0.70.0/24  -j MASQUERADE",
"sudo iptables -t nat -A POSTROUTING -s 10.0.80.0/24 ! -d 10.0.80.0/24 -j MASQUERADE" 
"sudo dhcpd wlan0 eth1",
</code></pre>

<p>Now everytime we reboot the system, it will automatically start the dhcpd server and
let OpenWRT as the access Point.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Tips 3]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/13/linux-tips-3.markdown~/"/>
    <updated>2015-10-13T10:43:51+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/13/linux-tips-3.markdown~</id>
    <content type="html"><![CDATA[<h3>1. Tips on Cloud-Init</h3>

<p><a href="http://www.cnblogs.com/smallcoderhujin/p/4238609.html">http://www.cnblogs.com/smallcoderhujin/p/4238609.html</a></p>

<h3>2. Access CloudStack VR</h3>

<p>Get the VR IP address from the CloudStack Web Interface:</p>

<p><img src="/images/2015_10_13_15_46_59_464x499.jpg" alt="/images/2015_10_13_15_46_59_464x499.jpg" /></p>

<p>Then get the ssh connection via(On Agent Node):</p>

<pre><code>[root@csmgmt ~]# ssh -i .ssh/id_rsa.cloud -p3922 169.254.1.177  
Linux r-9-VM 3.2.0-4-amd64 #1 SMP Debian 3.2.65-1+deb7u2 x86_64
.......
root@r-9-VM:~#
</code></pre>

<h3>3. Cloudmonkey issue</h3>

<p>Couldnot start cloudmonkey, use virtualenv for starting:</p>

<pre><code>$ yum install -y python-virtualenv
$ virtualenv venv --python=python2.6
$ . venv/bin/activate
$ pip install cloudmonkey
</code></pre>

<p>Then you could start cloudmonkey in venv environment.</p>

<h3>4. Cloud Performance Testing</h3>

<p>Cloud Performance testing URL.</p>

<pre><code>http://www.qyjohn.net/?p=2715
http://www.ccf.org.cn/resources/1190201776262/2011/10/17/2.pdf
http://www.os-easy.com/News/2014-10/526.html
</code></pre>

<h3>5. Installation Of VBox Ext Packs</h3>

<p>When installing the ext packages:</p>

<p><img src="/images/2015_10_16_06_46_53_640x268.jpg" alt="/images/2015_10_16_06_46_53_640x268.jpg" /></p>

<p>The reason is because the installation program need the root priviledge while
the awesome desktop didn&rsquo;t support it. By installing the <code>gksu</code> packages from
pacman you could solve it.</p>

<p>More tips on uninstalling ext and re-installing ext:</p>

<pre><code>$ VBoxManage extpack install
Oracle_VM_VirtualBox_Extension_Pack-5.0.4.vbox-extpack 
0%...
Progress state: NS_ERROR_FAILURE
VBoxManage: error: Failed to install
"/home/xxxxxxx/.config/VirtualBox/Oracle_VM_VirtualBox_Extension_Pack-5.0.4.vbox-extpack"
VBoxManage: error: Extension pack 'Oracle VM VirtualBox Extension Pack' is
already installed. In case of a reinstallation, please uninstall it first
VBoxManage: error: Details: code NS_ERROR_FAILURE (0x80004005), component
ExtPackManagerWrap, interface IExtPackManager
VBoxManage: error: Context: "RTEXITCODE handleExtPack(HandlerArg*)" at line
1158 of file VBoxManageMisc.cpp
$ VBoxManage list extpacks
Extension Packs: 1
Pack no. 0:   Oracle VM VirtualBox Extension Pack
Version:      5.0.0
Revision:     101573
Edition:      
Description:  USB 2.0 and USB 3.0 Host Controller, Host Webcam, VirtualBox
RDP, PXE ROM, Disk Encryption.
VRDE Module:  VBoxVRDP
Usable:       true 
Why unusable: 
$ VBoxManage extpack uninstall 'Oracle VM
VirtualBox Extension Pack'
0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%
Successfully uninstalled "Oracle VM VirtualBox Extension Pack".
$ VBoxManage extpack install
Oracle_VM_VirtualBox_Extension_Pack-5.0.4.vbox-extpack
0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%
Successfully installed "Oracle VM VirtualBox Extension Pack".
</code></pre>

<p>Now you got the newest ext packages installed for VirtualBox.</p>

<h3>6. Change Cursor In Awesome</h3>

<p>Download the theme from:  <br/>
<a href="http://gnome-look.org/content/show.php?content=48837">http://gnome-look.org/content/show.php?content=48837</a></p>

<p>Extract it to your ~/.icon/, and add following items into your configuration
file:</p>

<pre><code>$ cat ~/.xinitrc
etroot -cursor_name Neutral_Plus
$ cat ~/.Xdefaults
Xcursor.theme: Neutral_Plus
</code></pre>

<p>Now restart your X you could got Neutral_Plus working. The same method could
be done to aero mouse or more, but the background image is a big issue.</p>

<h3>7. CloudStack Chinese Docs</h3>

<pre><code>http://cloudstack-installation-zh-cn.readthedocs.org/zh_CN/latest/hypervisor/lxc.html
</code></pre>

<h3>8. Iptables forward</h3>

<p>Added at the first:</p>

<pre><code>sudo iptables -t filter -I FORWARD -j ACCEPT
</code></pre>

<h3>9. preseed using local repository</h3>

<p>Using the local repository for installation.</p>

<pre><code>d-i mirror/country string manual
d-i mirror/http/hostname string 192.168.1.13
d-i mirror/http/directory string /ubuntu
d-i mirror/http/proxy string

d-i apt-setup/restricted boolean true
d-i apt-setup/universe boolean true
d-i apt-setup/backports boolean true
d-i apt-setup/services-select multiselect security
d-i apt-setup/security_host string 192.168.1.13
d-i apt-setup/security_path string /ubuntu
</code></pre>

<p>Change the repository after installation:</p>

<pre><code>d-i preseed/late_command string wget http://192.168.1.13/sources.list.13 -O
/target/etc/apt/sources.list
</code></pre>

<h3>10. Static IP Configuration For Cloud-Init</h3>

<p>On Cloud-Init Configuration of Static IP.</p>

<pre><code>https://access.redhat.com/articles/rhel-atomic-cloud-init-faq
</code></pre>

<h3>11. Forwarding SSH Access To Inner</h3>

<p>This will forward the connection to 10003 to 10.0.0.3&rsquo;s 22 port, thus you will access
the inner machine via <code>ssh -p 10003 xxxx@192.168.10.187</code>.</p>

<pre><code># iptables -t nat -A PREROUTING -d 192.168.10.187 -p tcp --dport 10003 -j DNAT \
--to-destination 10.0.0.3:22
# iptables-save &gt;/etc/sysconfig/iptables
</code></pre>

<h3>12. On Perforce Monitor Tools</h3>

<p>graphite and collectd:</p>

<pre><code>http://www.infoq.com/cn/articles/graphite-intro
http://www.vpsee.com/2012/05/install-graphite-on-ubuntu-12-04/
http://www.vpsee.com/2012/05/use-collectd-with-graphite-to-monitor-servers/
https://collectd.org/wiki/index.php/Plugin:libvirt
http://www.drupal001.com/2012/07/system-monitor-collectd/
</code></pre>

<h3>13. More tips for Performance Monitor</h3>

<pre><code>http://www.unixmen.com/install-graphite-centos-7/
http://blog.csdn.net/crazyhacking/article/details/8363235
http://blog.csdn.net/puncha/article/details/9112293
http://skaka.me/blog/2015/07/21/kamon-statsd-graphite-grafana-introduction/
https://codeascraft.com/2011/02/15/measure-anything-measure-everything/
http://devops.com/2014/09/02/guide-modern-monitoring-alerting/
http://network.51cto.com/art/201505/475518_5.htm
</code></pre>

<h3>14. Log System</h3>

<pre><code>http://devops.com/2014/09/02/guide-modern-monitoring-alerting/
http://network.51cto.com/art/201505/475518_all.htm
https://linux.cn/article-5252-shareweibo.html
http://kibana.logstash.es/content/logstash/index.html
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-graphite-on-an-ubuntu-14-04-server
</code></pre>

<h3>15. Discussion on monitor</h3>

<p><a href="http://segmentfault.com/q/1010000000116157">http://segmentfault.com/q/1010000000116157</a></p>

<h3>16. Simulation</h3>

<p>Online simulation for electronics:  <br/>
<a href="https://www.systemvision.com/">https://www.systemvision.com/</a></p>

<h3>17. Website Generator</h3>

<p>hugo:</p>

<p><a href="http://gohugo.io/overview/introduction/">http://gohugo.io/overview/introduction/</a></p>

<h3>18. Install Collectd On CentOS6</h3>

<pre><code>$ http://giovannitorres.me/how-to-build-rpms-collectd-example.html
$ http://giovannitorres.me/enabling-almost-all-collectd-plugins-on-centos-6.html
</code></pre>

<h3>19. View CentOS Version</h3>

<pre><code># cat /etc/redhat-release 
CentOS Linux release 7.1.1503 (Core) 
</code></pre>

<h3>20. Get Collectd Packages</h3>

<pre><code># wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo
# yum install --downloadonly --downloaddir=/root/Collectd collectd*
</code></pre>

<h3>21. Vagrant Verification</h3>

<pre><code># mkdir collectdtest
# cd collectdtest/
# vagrant box list
centos66        (virtualbox, 0)
vagrant_machine (virtualbox, 0)
# vagrant init centos66
# vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
</code></pre>

<h3>22. Cockpit</h3>

<pre><code>Cockpit由红帽公司开发，旨在让服务器管理起来更容易。借助这个基于Web的GUI，你就能处理众多任务，比如管理存储资源、检查日志、启动/终止服务以及监控多台服务器。Cockpi可以在Fedora Server、Arch Linux、CentOS Atomic、Fedora Atomic和红帽企业级Linux(RHEL)上运行。

相关链接：http://cockpit-project.org
</code></pre>

<h3>23. OpenWRT DHCP Pool Configuration</h3>

<p>By Luci is very hard to find, so directly edit it under terminal.</p>

<pre><code># vi /etc/config/dhcp
config dhcp 'lan'
        option interface 'lan'
        option start '100'
        option limit '150'
        option leasetime '12h'
</code></pre>

<h3>24. Read-Only System In CentOS 6</h3>

<p>Enter root&rsquo;s password, and then remount the filesystem via following command:</p>

<pre><code>#  mount -o remount,rw /
</code></pre>

<p>Now you could edit your filesystem and configure its configuration files.</p>

<h3>25. ArchLinux nf_conntrack limitation</h3>

<pre><code># vim /etc/sysctl.d/99-sysctl.conf
net.netfilter.nf_conntrack_max = 1048576
# sysctl --system
</code></pre>

<h3>26. Conntrack调优</h3>

<p><a href="http://www.linuxsky.org/doc/admin/200704/35.html">http://www.linuxsky.org/doc/admin/200704/35.html</a></p>

<h3>27. Qemu With OpenVswitch</h3>

<p><a href="http://git.openvswitch.org/cgi-bin/gitweb.cgi?p=openvswitch;a=blob_plain;f=INSTALL.KVM;hb=HEAD">http://git.openvswitch.org/cgi-bin/gitweb.cgi?p=openvswitch;a=blob_plain;f=INSTALL.KVM;hb=HEAD</a></p>

<p><a href="https://airtower.wordpress.com/2012/12/26/multiple-network-devices-in-kvm/">https://airtower.wordpress.com/2012/12/26/multiple-network-devices-in-kvm/</a></p>

<h3>28. Ubuntu ffmpeg</h3>

<pre><code>$ axel http://ffmpeg.org/releases/ffmpeg-2.8.1.tar.bz2
$ sudo apt-get install yasm
$ sudo apt-get install -y libx264-142 libx264-dev
$ sudo apt-get install -y libfaac0 libfaac-dev
$ sudo apt-get install -y libmp3lame-dev libmp3lame0
$ sudo apt-get install libtheora-dev libtheora0
$ sudo apt-get install libvorbis-dev
$ sudo apt-get install libxvidcore-dev
$ tar xjvf ffmpeg-2.8.1.tar.bz2
$ cd ffmpeg-2.8.1
$ ./configure --enable-gpl --enable-version3 --enable-nonfree --enable-postproc
--enable-pthreads --enable-libfaac  --enable-libmp3lame --enable-libtheora
--enable-libx264 --enable-libxvid --enable-x11grab --enable-libvorbis --prefix=/usr
$ make -j4 
$ sudo make install
</code></pre>

<h3>29. Use pdftk For Splitting PDF</h3>

<pre><code>$ sudo apt-get install -y pdftk
$ pdftk A=book.pdf cat A75-84 output Cut.pdf 
</code></pre>

<h3>30. Teamviewer Related</h3>

<p>On Ubuntu14.04 Server, install lightdm and fluxbox:</p>

<pre><code># apt-get install -y lightdm fluxbox sakura
# vim /usr/share/xsessions/lightdm-xsession.desktop
[Desktop Entry]
Version=1.0
Name=Default Xsession
Exec=fluxbox
Icon=
Type=Application
</code></pre>

<p>Now you could select fluxbox for using at the startup screen.</p>

<p>Auto-login into fluxbox:</p>

<pre><code># vim /etc/lightdm/lightdm.conf
[SeatDefaults]
autologin-user=adminubuntu
autologin-user-timeout=0
</code></pre>

<p>Install teamviewer, first download the teamviewer&rsquo;s deb from its official website, then
install it via:  <br/>
Remember to manually resolve the dependencies.</p>

<pre><code># dpkg --add-architecture i386
# apt-get update
# dpkg -i teamviewer_11.0.50678_i386.deb
# apt-get -f install
</code></pre>

<p>Be sure to turn off the ufw to allow the connection:</p>

<pre><code># sudo ufw disable
</code></pre>

<p>Automatically save your screen via adding following definition:</p>

<pre><code>$ vim ~/.config/.fluxbox/startup
+ xscreensaver&amp;
</code></pre>

<h3>31. Monitor Docker filesystem</h3>

<p><a href="https://sysdig.com/monitoring-docker-file-systems-and-file-io-with-sysdig-cloud/">https://sysdig.com/monitoring-docker-file-systems-and-file-io-with-sysdig-cloud/</a></p>

<h3>32. Socat Connection</h3>

<p>Reuse the ports:</p>

<pre><code>vps# socat TCP4-LISTEN:2222,reuseaddr,fork TCP4:localhost:3322
</code></pre>

<h3>33. Office 2013</h3>

<p>activate the serial no together with your office installation.</p>

<p><a href="http://www.zhihu.com/collection/38938285?page=1">http://www.zhihu.com/collection/38938285?page=1</a></p>

<h3>34. Linux And Music</h3>

<p><a href="https://www.maketecheasier.com/linux-learning-music/">https://www.maketecheasier.com/linux-learning-music/</a></p>

<h3>35. ia32-libs</h3>

<p>To install ia32-libs, using raring repository, after installation , remove
this repository:</p>

<pre><code>sudo apt-get install libc6:i386
sudo -i
cd /etc/apt/sources.list.d
echo "deb http://old-releases.ubuntu.com/ubuntu/ raring main restricted
universe multiverse" &gt;ia32-libs-raring.list
apt-get update
apt-get install ia32-libs
rm /etc/apt/sources.list.d/ia32-libs-raring.list
apt-get update
exit
sudo apt-get install gcc-multilib
</code></pre>

<h3>36. Install libc6 in Debian</h3>

<p>The newer version.</p>

<pre><code>    Add the following line to the file /etc/apt/sources.list:
    deb http://ftp.debian.org/debian experimental main
    Update your package database:
    apt-get update
    Install the eglibc package:
    apt-get -t experimental install libc6-amd64 libc6-dev libc6-dbg
</code></pre>

<h3>37. Teamviewer connection</h3>

<p>In order to connect the remote machine, close the ufw, then you could directly connect
to</p>

<pre><code>teamViewer? Open 80, 443 and 5938-5939 port.
# ufw disable
</code></pre>

<h3>38. Pygment Error</h3>

<p>When you encounter following error:</p>

<pre><code>Error:  Pygments can't parse unknown language: &lt;/p&gt;
</code></pre>

<p>Then edit <code>plugins/pygments_code.rb</code>:</p>

<pre><code>rescue MentosError
   raise "Pygments can't parse unknown language: #{lang}#{code}."
end
</code></pre>

<p>Now <code>rake generate</code> again, you will see the error hints, modify the
corresponding markdown page.</p>

<h3>39. Install rhc</h3>

<p>For installing rhc on your machine, while your machine is Ubuntu14.04, you could only
use gem for installing, while in vivid or later you could directly <code>apt-get install
rhc</code>:</p>

<pre><code>$ sudo gem install rhc
$ rhc setup
</code></pre>

<h3>40. pelican-openshift</h3>

<h3>41. Show Pop-Up Dialog</h3>

<p>Show the message with a dialog.</p>

<pre><code>zenity --info --text="Calculation complete"
</code></pre>

<p>Remote show:</p>

<pre><code>ssh -Y xxxx@192.168.0.119 'zenity --info --text="Calculation complete"'

### 42. Git tips
Remove the remote branch:    
</code></pre>

<h1>git push origin &ndash;delete c0de</h1>

<pre><code>
Check the remote's branch:    
</code></pre>

<p>$ git remote show origin
* remote origin
  Fetch URL: <a href="https://github.com/xxxxxxxxxxxxxxxx">https://github.com/xxxxxxxxxxxxxxxx</a>
  Push  URL: <a href="https://github.com/xxxxxxxxxxxxxxxxx">https://github.com/xxxxxxxxxxxxxxxxx</a>
  HEAD branch: master
  Remote branches:
    code     tracked
    gh-pages tracked
    master   tracked</p>

<blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>4a0fd58a35726d413edcc93e2e7dcfe31d4861ac
```</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote>

<h3>43. Add another IP</h3>

<p>Add the 10 subnet IP Address.</p>

<pre><code># ifconfig ovsbr0:10 192.168.10.119/24
</code></pre>

<h3>44. Chromebook Using Samba</h3>

<p>Install samba client:</p>

<pre><code>$ sudo apt-get install samba smbclient
</code></pre>

<p>Detect the remote samba server&rsquo;s sharing folder:</p>

<pre><code>$ sudo smbclient -L 192.168.0.119 -U%
</code></pre>

<p>But still you could not mount the remote machine. Finally i have to install the plugins
from chromestore which named <code>File System For Windows</code>.</p>

<p>Still, mount with some problems when using samba server of Ubuntu.</p>

<h3>45. oh-my-zsh</h3>

<p>Install oh-my-zsh via:</p>

<pre><code># sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O
-)"
# vim ~/.zshrc
ZSH_THEME="agnoster"
</code></pre>

<p>Select the theme in konsole for Solarized, then you got pretty good looking for your
zsh.</p>

<h3>46. Surface Pro Issue</h3>

<pre><code>gpg --keyserver pgpkeys.mit.edu --recv-key  38DBBDC86092693E
gpg --keyserver pgpkeys.mit.edu --recv-key  79BE3E4300411886

https://github.com/nuclearsandwich/surface3-archlinux
https://www.reddit.com/r/SurfaceLinux/comments/2b1hf6/running_ubuntu_1404_on_surface_pro_1_full_time/
Marvell: 
https://origin-www.marvell.com/wireless/avastar/88W8897/

Good, signature: 
http://www.cyberciti.biz/faq/pgp-tarball-file-signature-keys-verification/
</code></pre>

<h3>47. Ceph Example</h3>

<p><a href="https://linux.cn/article-6624-1.html?utm_source=weibo&amp;utm_medium=weibo">https://linux.cn/article-6624-1.html?utm_source=weibo&amp;utm_medium=weibo</a>  <br/>
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>

<h3>48. Daily Cron</h3>

<p>You should edit the following configuration file for customize your own crontab task
for everyday/everyweek/everymonth:</p>

<pre><code>$  vim /etc/crontab 

17 *    * * *   root    cd / &amp;&amp; run-parts --report /etc/cron.hourly
25 6    * * *   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report
/etc/cron.daily )
47 6    * * 7   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report
/etc/cron.weekly )
52 6    1 * *   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report
/etc/cron.monthly )
</code></pre>

<p>For example, change the <code>25 6</code> to <code>25 12</code>, thus change the daily crontab task from 6:25
AM to 12:25 AM of the day.</p>

<h3>49. SRX Issue</h3>

<p><a href="https://www.citrix.com/blogs/2015/11/05/configure-juniper-srx-in-cloudplatform/">https://www.citrix.com/blogs/2015/11/05/configure-juniper-srx-in-cloudplatform/</a></p>

<h3>50. Quickly For AlsaMixer</h3>

<pre><code>$ sudo pacman -S alsa-utils
$ amixer sset Master unmute
$ mplay *.mp3
</code></pre>

<h3>51. x2x</h3>

<p>Synergy could lost connection between client/server, so I have to change to x2x, simply
do following then I could setup the connection between 2 machines and sharing the
mouse/keyboard.</p>

<p>Ubuntu As Server</p>

<pre><code>$ sudo apt-get install -y x2x
</code></pre>

<p>Arch As Client</p>

<pre><code>$ yaourt x2x
....
2 aur/x2x-git
</code></pre>

<p>Then we start sharing the server&rsquo;s keyboard/mouse via:</p>

<pre><code>$ ssh -X 10.0.80.17 x2x -west -to :0
</code></pre>

<h1>Todo: while the shortcuts are not OK. You have to use mouse for switching the screen.     </h1>

<blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>b533e98cc5fdf3921bf6cfe82e753224dfbff23c</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote>
]]></content>
  </entry>
  
</feed>
