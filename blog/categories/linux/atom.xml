<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-06-07T16:11:53+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Quickly Change CentOS Networking]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/07/quickly-change-centos-networking/"/>
    <updated>2015-06-07T14:44:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/07/quickly-change-centos-networking</id>
    <content type="html"><![CDATA[<p>When adding the existing qcow2 files to a new machine, following steps needs to be done to enable the new configuration for the networking:</p>

<h3>Change udev rules</h3>

<p>Change the eth1 to eth0, and disable the previous defined eth0:</p>

<pre><code>[root@CentOSVM1 ~]# cat /etc/udev/rules.d/70-persistent-net.rules
# This file was automatically generated by the /lib/udev/write_net_rules
# program, run by the persistent-net-generator.rules rules file.
#
# You can modify it, as long as you keep each rule on a single
# line, and change only the value of the NAME= key.

# PCI device 0x1af4:0x1000 (virtio-pci)
#SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="52:54:00:23:14:96", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"

# PCI device 0x1af4:0x1000 (virtio-pci)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="52:54:00:bc:c6:f5", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"
</code></pre>

<h3>Change the ethernet configuration</h3>

<h4>Hostname</h4>

<p>The hostname and the gateway could be modified via:</p>

<pre><code># cat /etc/sysconfig/network
NETWORKING=yes
+ HOSTNAME=CentOSVM1
+ GATEWAY=172.16.0.1
</code></pre>

<h4>Change the IP configuration of the eth0</h4>

<pre><code>[root@CentOSVM1 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
TYPE=Ethernet
UUID=9d92e12c-54a3-404a-bd1c-ae033e8e968c
ONBOOT=yes
NM_CONTROLLED=yes
BOOTPROTO=none
+ IPADDR=172.16.0.20
PREFIX=24
GATEWAY=172.16.0.1
DNS1=114.114.114.114
DNS2=180.76.76.76
DEFROUTE=yes
IPV4_FAILURE_FATAL=yes
IPV6INIT=no
NAME="System eth0"
#HWADDR=52:54:00:23:14:96
+ HWADDR=52:54:00:BC:C6:F5
</code></pre>

<p>By now you could customize the network configuration of the CentOS using the same qcow2 disk file.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef for Deploying OpenStack]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/01/chef-for-deploying-openstack/"/>
    <updated>2015-06-01T11:19:34+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/01/chef-for-deploying-openstack</id>
    <content type="html"><![CDATA[<p>Following article records all of the steps for using chef for deploying OpenStack.</p>

<p>Refers to:  <br/>
<a href="http://ehaselwanter.com/en/blog/2014/10/15/deploying-openstack-with-stackforge-chef-zero-style/">http://ehaselwanter.com/en/blog/2014/10/15/deploying-openstack-with-stackforge-chef-zero-style/</a></p>

<h3>Change vbox files</h3>

<p>Edit the Vagrantfile for bring up the vbox, then startup the machine, modify its content , save it.</p>

<pre><code>$ vim Vagrantfile
    # -*- mode: ruby -*-
    # vi: set ft=ruby :
    Vagrant::Config.run do |config|
    config.vm.box = "Trusy64"
    config.vm.box_url = "http://xxx.xxx.xxx.xxx/opscode_ubuntu-14.04_chef-provisionerless.box"
    config.vm.customize ["modifyvm", :id, "--memory", 1024]
    end
</code></pre>

<p>Login to the running machine and modify its default repository from official to local repository.</p>

<pre><code>$ vagrant up
$ vagrant ssh
(YourVagrantMachine) $ sudo vim /etc/apt/sources.list
(YourVagrantMachine) $ sudo vim /etc/apt/apt.conf
(YourVagrantMachine) $ sudo apt-get update &amp;&amp; sudo apt-get -y upgrade
</code></pre>

<p>Now save your modification to the vbox file:</p>

<pre><code>$ vagrant package --base vagrant_default_1433130468275_38998
$ ls
package.box Vagrantfile
</code></pre>

<h3>Setup Chef Code</h3>

<p>First install the vagrant plugins via:</p>

<pre><code>$ vagrant plugin install vagrant-berkshelf
$ vagrant plugin install vagrant-chef-zero
$ vagrant plugin install vagrant-omnibus
$ vagrant plugin list
</code></pre>

<p>Get the repository from github, modify the file <code>vagrant_linux.rb</code>:</p>

<pre><code>[xxxx@~/Code/Chef/MasterVersion]$ git clone https://github.com/stackforge/openstack-chef-repo.git
$ cd openstack-chef-repo
$ vim vagrant_linux.rb
  #url 'http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_centos-7.1_chef-provisionerless.box'
  url 'http://xxx.xxx.xxx.xxx/opscode_centos-7.1_chef-provisionerless.box'

  #url 'http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-14.04_chef-provisionerless.box'
  url 'http://xxx.xxx.xxx.xxx/package.box'

  'vm.box' =&gt; 'ubuntu14'
</code></pre>

<p>Download all of the cookbooks, and modify the rubygems.org to Chinese mirror, Thanks for the fucking GreatFW!:</p>

<pre><code>$ chef exec rake berks_vendor
$ cp -r cookbooks cookbooks.back
$ cd cookbooks
$ find . -type f -exec sed -i -e 's/https:\/\/rubygems.org/http:\/\/mirrors.aliyun.com\/rubygems/g' {} \; 
</code></pre>

<p>Edit the ruby definition file for avoiding <code>Chef encountered an error attempting to load the node data for "controller"</code>:</p>

<pre><code>$ vim ./aio-neutron.rb
machine 'controller' do
  add_machine_options vagrant_config: controller_config
+  chef_server( :chef_server_url =&gt; 'http://localhost:8889')
  role 'allinone-compute'
  role 'os-image-upload'
</code></pre>

<p>One Cookbook needs to modify, because it will automatically use source from <code>rubygems.org</code>, Thanks again for the fucking GreatFW!:</p>

<pre><code>$ cd cookbooks
$ vim ./mysql2_chef_gem/libraries/provider_mysql2_chef_gem_mysql.rb
             options("--clear-sources --source http://mirrors.aliyun.com/rubygems/gems/mysql2-0.3.18.gem") 
</code></pre>

<p>Now begin to provision via:</p>

<pre><code>$ chef exec rake aio_neutron 2&gt;&amp;1 | tee aio_neutron.txt
</code></pre>

<p>After installation and configuration, you could visit following URL for your OpenStack:</p>

<p><a href="https://127.0.0.1:9443">https://127.0.0.1:9443</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Apt-cacher for Speeding Up Deployment]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/05/23/use-apt-cacher-for-speeding-up-deployment/"/>
    <updated>2015-05-23T08:27:55+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/05/23/use-apt-cacher-for-speeding-up-deployment</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<p>Install apt-cacher via following command:</p>

<pre><code>$ sudo apt-get install apt-cacher
</code></pre>

<p>Choose &ldquo;Daemon&rdquo; When you see following picture:</p>

<p><img src="/images/2015_05_23_08_28_39_418x264.jpg" alt="/images/2015_05_23_08_28_39_418x264.jpg" /></p>

<h3>Configuration</h3>

<p>Make sure the configuration <code>AUTOSTART=1</code> in <code>/etc/default/apt-cacher</code>.</p>

<p>Enable <code>allowed_hosts=*</code> in <code>/etc/apt-cacher/apt-cacher.conf</code>.</p>

<p>Now restart the machine, and check the apt-cacher service via following command:</p>

<pre><code>$ ps -ef | grep apt
www-data   825     1  0 20:34 ?        00:00:00 /usr/bin/perl /usr/sbin/apt-cacher -R 3 -d -p /var/run/apt-cacher.pid
$ sudo netstat -anp | grep 3142
tcp6       0      0 :::3142                 :::*                    LISTEN      825/perl
</code></pre>

<p>Now when you setup the machines, point the http-proxy into this machine, it will automatically cache the packages.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup CentOS6/7 Local Repository]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/05/20/setup-centos6-slash-7-local-repository/"/>
    <updated>2015-05-20T11:32:56+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/05/20/setup-centos6-slash-7-local-repository</id>
    <content type="html"><![CDATA[<p>For speeding up the deployment, I have to setup the local repository for CentOS6/7, following is the steps for setting up such two repositories.  <br/>
The steps are followed by following URL:  <br/>
<a href="https://support.opennodecloud.com/wiki/doku.php?id=usrdoc:os:repomirror">https://support.opennodecloud.com/wiki/doku.php?id=usrdoc:os:repomirror</a></p>

<pre><code># cd /etc/yum.repos.d/
# curl -O https://copr.fedoraproject.org/coprs/baurzhanm/mrepo/repo/epel-6/baurzhanm-mrepo-epel-6.repo
# vim baurzhanm-mrepo-epel-6.repo
# yum update
# yum -y install screen lftp httpd mrepo
# vim mrepo.conf
    ### Configuration file for mrepo

    ### The [main] section allows to override mrepo's default settings
    ### The mrepo-example.conf gives an overview of all the possible settings
    [main]
    srcdir = /var/mrepo
    wwwdir = /var/www/mrepo
    confdir = /etc/mrepo.conf.d
    arch = x86_64

    mailto = root@localhost
    smtp-server = localhost

    #rhnlogin = username:password

    ### Any other section is considered a definition for a distribution
    ### You can put distribution sections in /etc/mrepo.conf.d/
    ### Examples can be found in the documentation at:
    ###     /usr/share/doc/mrepo-0.8.9/dists/.
</code></pre>

<p>Add the configuration files for CentOS 6:</p>

<pre><code># vim  /etc/mrepo.conf.d/centos6.conf
[centos6]
name = CentOS $release ($arch)
release = 6
arch = x86_64
metadata = yum repomd

#iso = http://mirrors.aliyun.com/centos/$release/isos/$arch/CentOS-6.6-x86_64-bin-DVD?.iso
#os = http://mirrors.aliyun.com/centos/$release/os/$arch/Packages/ 
#updates = http://mirrors.aliyun.com/centos/$release/updates/$arch/Packages/
extras = http://mirrors.aliyun.com/centos/$release/extras/$arch/Packages/
epel = http://mirrors.aliyun.com/epel/$release/$arch/
</code></pre>

<p>Add configuraiton files for CentOS 7:</p>

<pre><code># vim  /etc/mrepo.conf.d/centos7.conf
[centos7]
name = CentOS $release ($arch)
release = 7
arch = x86_64
metadata = yum repomd

#iso = http://mirrors.aliyun.com/centos/$release/isos/$arch/CentOS-7.0-1406-x86_64-DVD.iso
#os = http://mirrors.aliyun.com/centos/$release/os/$arch/Packages/ 
#updates = http://mirrors.aliyun.com/centos/$release/updates/$arch/Packages/
#epel = http://mirrors.aliyun.com/epel/$release/$arch/
extra=http://mirrors.aliyun.com/centos/$release/extras/$arch/Packages/
</code></pre>

<p>Use following comands for initial sync, it will take a very~long~long~long time.</p>

<pre><code># mrepo -g -u -vvv [centos6|centos7]
</code></pre>

<p>After syncing, add definition into the apache&rsquo;s configuration:</p>

<pre><code># vi /etc/httpd/conf.d/mrepo.conf
--- ADD ---
AddDescription "CentOS 6 for x86" centos6-i386
AddDescription "CentOS 6 for x86_64" centos6-x86_64
AddDescription "CentOS 7 for x86" centos7-i386
AddDescription "CentOS 7 for x86_64" centos7-x86_64
--- ADD ---
# Add repofile for CentOS 6 mirror
cat &lt;&lt; 'EOF' &gt; /var/www/mrepo/centos6-x86_64/CentOS-local-http.repo 
#
# CentOS-local-http.repo
#

[0-base]
name=CentOS-local-base
baseurl=http://mirror.local.int/mrepo/centos6-x86_64/RPMS.os/
gpgcheck=0

[0-updates]
name=CentOS-local-updates
baseurl=http://mirror.local.int/mrepo/centos6-x86_64/RPMS.updates/
gpgcheck=0
EOF

# Add repofile for CentOS 7 mirror
cat &lt;&lt; 'EOF' &gt; /var/www/mrepo/centos7-x86_64/CentOS-local-http.repo 
#
# CentOS-local-http.repo
#

[0-base]
name=CentOS-local-base
baseurl=http://mirror.local.int/mrepo/centos7-x86_64/RPMS.os/
gpgcheck=0

[0-updates]
name=CentOS-local-updates
baseurl=http://mirror.local.int/mrepo/centos7-x86_64/RPMS.updates/
gpgcheck=0
EOF

# chkconfig httpd on
# service httpd restart
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Local Repository]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/05/19/setup-local-repository/"/>
    <updated>2015-05-19T11:57:19+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/05/19/setup-local-repository</id>
    <content type="html"><![CDATA[<h3>Ubuntu</h3>

<p>After using apt-mirror syncing all of the packages from the repository website, setup a ftp site:</p>

<pre><code># apt-get install -y proftpd
# cat conf.d/anonymous.conf 
&lt;Anonymous ~ftp&gt;
   User                    ftp
   Group                nogroup
   UserAlias         anonymous ftp
   RequireValidShell        off
#   MaxClients                   10
   &lt;Directory *&gt;
     &lt;Limit WRITE&gt;
       DenyAll
     &lt;/Limit&gt;
   &lt;/Directory&gt;
 &lt;/Anonymous&gt;
#  mount --bind /mnt/myrepo/mirror/mirrors.aliyun.com/ /srv/ftp/
# service proftpd restart
</code></pre>

<p>Now Open your browser to <code>ftp://Your_URL/</code>, you will find the repository available.</p>

<h3>CentOS Proftpd</h3>

<p>Just remember the default directory is located at <code>/var/ftp</code>,</p>

<pre><code># yum install -y proftpd
# mount --bind /mirror/mirrors.aliyun.com/ /var/ftp/
# service proftpd restart
</code></pre>

<h3>Client Configuration</h3>

<p>Replace the URL into your ftp url:</p>

<pre><code># vim /etc/apt/sources.list
deb ftp://YourURL/ubuntu/ trusty main restricted universe multiverse
deb ftp://YourURL/ubuntu/ trusty-security main restricted universe multiverse
deb ftp://YourURL/ubuntu/ trusty-updates main restricted universe multiverse
deb ftp://YourURL/ubuntu/ trusty-proposed main restricted universe multiverse
deb ftp://YourURL/ubuntu/ trusty-backports main restricted universe multiverse
deb-src ftp://YourURL/ubuntu/ trusty main restricted universe multiverse
deb-src ftp://YourURL/ubuntu/ trusty-security main restricted universe multiverse
deb-src ftp://YourURL/ubuntu/ trusty-updates main restricted universe multiverse
deb-src ftp://YourURL/ubuntu/ trusty-proposed main restricted universe multiverse
deb-src ftp://YourURL/ubuntu/ trusty-backports main restricted universe multiverse
# apt-get update &amp;&amp; apt-get upgrade 
</code></pre>

<p>Using local repository will greately improve your development speed.</p>
]]></content>
  </entry>
  
</feed>
