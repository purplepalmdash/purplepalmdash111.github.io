<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2016-02-01T20:35:26+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux Tips(4)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/01/15/linux-tips-4/"/>
    <updated>2016-01-15T18:37:03+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/01/15/linux-tips-4</id>
    <content type="html"><![CDATA[<h3>1. Run ansible commands</h3>

<p>Run commands in all hosts:</p>

<pre><code># ansible all -i inventory.ini -m command -u root --args "uptime"
</code></pre>

<h3>2. mesos introduction</h3>

<p><a href="http://www.infoq.com/cn/articles/analyse-mesos-part-02">http://www.infoq.com/cn/articles/analyse-mesos-part-02</a></p>

<h3>3. Limit ansible run hosts</h3>

<pre><code># ansible-playbook -i inventory_mesos_cluster changehostname.yml -u root -k
-vvvv --list-hosts

playbook: changehostname.yml

  play #1 (master1): host count=1
    10.47.58.31

#  ansible-playbook -i
inventory_mesos_cluster changehostname.yml -u root -k -vvvv --limit="master1"
</code></pre>

<h3>4. Configure the dhcp configuration of libvirtd</h3>

<p>First edit the net configuration:</p>

<pre><code># virsh net-edit xxxxx
</code></pre>

<p><img src="/images/2016_01_16_20_23_08_715x270.jpg" alt="/images/2016_01_16_20_23_08_715x270.jpg" /></p>

<h3>5. Copy items into clipboard in vim</h3>

<p>Hit <code>Ctrl+v</code> to visual model, then select the items you want to copy, after select
them, click <code>"*y</code> will copy whatever you selected into your clipbard.</p>

<p>Copy from clipboard&mdash;- simply hit <code>p</code> in command mode.</p>

<h3>6. mesos.cli</h3>

<p>When you meet <code>no module named mesos</code>, install it via pip:</p>

<pre><code>$ pip install mesos.cli
</code></pre>

<h3>7. Startdict In Command Line</h3>

<pre><code>$ sudo apt-get install -y sdcv
$ wget
https://web.archive.org/web/20140917131745/http://abloz.com/huzheng/stardict-dic/dict.org/stardict-dictd_www.dict.org_gcide-2.4.2.tar.bz2
$ sudo mkdir -p /usr/share/stardict/dic/
$ sudo tar xjvf stardict-dictd_www.dict.org_gcide-2.4.2.tar.bz2 -C /usr/share/stardict/dic 
</code></pre>

<h3>8. Golden Dict</h3>

<p>Golden Dict.</p>

<h3>9. Latest Info On OpenStack</h3>

<p><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjkwMDY5OA==&amp;mid=404253985&amp;idx=1&amp;sn=0d6c544dfb129e35bde7d19a0de8887b&amp;scene=1&amp;srcid=01267Etq7arAdYaFqbUG5BNa&amp;pass_ticket=qT7Nk3zsTIegBKqnPTUL%2FTtS%2FMNDH%2F07Fz%2Bfua9RcTwSHVO5OLo5wDpfeb%2FBLCEH#rd">https://mp.weixin.qq.com/s?__biz=MzA3MjkwMDY5OA==&amp;mid=404253985&amp;idx=1&amp;sn=0d6c544dfb129e35bde7d19a0de8887b&amp;scene=1&amp;srcid=01267Etq7arAdYaFqbUG5BNa&amp;pass_ticket=qT7Nk3zsTIegBKqnPTUL%2FTtS%2FMNDH%2F07Fz%2Bfua9RcTwSHVO5OLo5wDpfeb%2FBLCEH#rd</a></p>

<h3>10. Quickly Configure vagrant machine</h3>

<p>Via following you could get outside world:</p>

<pre><code>ip route del default gw 10.0.2.2 dev enp0s3
ip a del 192.168.10.199/24 dev enp0s8
ip a add 192.168.10.199/16 dev enp0s8
ip route add default via 192.168.0.79 dev enp0s8
</code></pre>

<h3>11. Change the default gateway On CentOS 7</h3>

<p>Default gateway should go here:</p>

<pre><code>$ cat /etc/sysconfig/network
# Created by anaconda
GATEWAY=192.168.0.79
</code></pre>

<p>And remove the origin default gateway by adding following definitions :</p>

<pre><code>$ cat /etc/sysconfig/network-scripts/ifcfg-enp0s3 
# Generated by dracut initrd
NAME="enp0s3"
DEVICE="enp0s3"
BOOTPROTO=dhcp
# This one is not the default gw
DEFROUTE=no
# Do not override the dns
PEERDNS=no
</code></pre>

<p>Thus the default gateway won&rsquo;t go from enp0s3, but from enp0s8, won&rsquo;t configure the dns
address to 10.0.x.x.</p>

<h3>12. On VPNs</h3>

<pre><code>http://linsir.org/post/how_to_install_IPSec_IKEV2_base_on_strongswan_with_CentOS7
https://quericy.me/blog/512
https://quericy.me/blog/699
http://lifehacker.io/post/108814979111/%E5%9C%A8%E6%90%AC%E7%93%A6%E5%B7%A5%E7%9A%84centos7%E4%B8%8B%E6%90%AD%E5%BB%BAstrongswan%E5%AE%9E%E7%8E%B0%E5%9C%A8ios%E4%B8%8A%E6%8C%89%E9%9C%80%E8%BF%9E%E6%8E%A5vpn
https://raymii.org/s/tutorials/IPSEC_vpn_with_CentOS_7.html
https://linux.cn/article-5938-weibo.html
</code></pre>

<p>MMC snap-in:  <br/>
<a href="https://technet.microsoft.com/en-us/library/cc722035.aspx">https://technet.microsoft.com/en-us/library/cc722035.aspx</a></p>

<h3>13. Use iptables On CentOS7</h3>

<p>Use  following steps for disable firewalld and use iptables.</p>

<pre><code>$ systemctl stop firewalld
$ systemctl mask firewalld
$ yum install iptables-services
$ systemctl enable iptables
$ systemctl start iptables
</code></pre>

<h3>14. Quickly Goes kernel configuration</h3>

<p>When you want to configure the newer kernel source tree using your old kernel
configuration, simply do following:</p>

<pre><code># yes "" | make oldconfig
</code></pre>

<h3>15. iptables problem</h3>

<p>After installing the newest kernel, I cannot use iptables, showing <code>can't initialize iptables : table does not exist</code>.</p>

<p>Solution: compile the modules again, select nat.</p>

<p><img src="/images/2016_01_28_16_05_52_496x361.jpg" alt="/images/2016_01_28_16_05_52_496x361.jpg" /></p>

<p>Selecting from:   <br/>
Networking Support  <br/>
Network Options   <br/>
Network packet filtering framework(Netfilter)  <br/>
IP: Netfilter Configuration</p>

<p>Then you should <code>make modules_install</code> under your kernel source building directory.</p>

<h3>16. DistCC For Building Kernel DEB</h3>

<p>On configurating distcc:  <br/>
<a href="http://linuxdeveloper.blogspot.tw/2012/03/distributed-kernel-compilation-in.html">http://linuxdeveloper.blogspot.tw/2012/03/distributed-kernel-compilation-in.html</a></p>

<p>On building Linux kernel deb files:</p>

<p><a href="http://www.cyberciti.biz/faq/debian-ubuntu-building-installing-a-custom-linux-kernel/">http://www.cyberciti.biz/faq/debian-ubuntu-building-installing-a-custom-linux-kernel/</a></p>

<p>And:</p>

<p><a href="https://help.ubuntu.com/community/Kernel/Compile">https://help.ubuntu.com/community/Kernel/Compile</a></p>

<p>Actual command:</p>

<pre><code>$ time sudo make -j12 CC=distcc
$ sudo MAKEFLAGS="CC=distcc" make-kpkg --rootcmd fakeroot --initrd --append-to-version=-suspend2 kernel-image kernel-headers kernel-source -j16
</code></pre>

<p>Really takes long time for building the kernel out, but the iptables won&rsquo;t works.</p>

<h3>17. dmenu On Ubuntu</h3>

<p>dmenu is in the package of suckless-tools.</p>

<pre><code>$ sudo apt-get install suckless-tools
</code></pre>

<h3>18. Virtio-GPU How-to</h3>

<p><a href="https://www.kraxel.org/blog/2015/06/virtio-gpu-on-the-way-upstream/">https://www.kraxel.org/blog/2015/06/virtio-gpu-on-the-way-upstream/</a></p>

<h3>20. Use Latest Dev Kernel On Fedora</h3>

<p>Refers to
<a href="http://fedoraproject.org/wiki/Kernel_Vanilla_Repositories">http://fedoraproject.org/wiki/Kernel_Vanilla_Repositories</a></p>

<pre><code>$ curl -s https://repos.fedorapeople.org/repos/thl/kernel-vanilla.repo | sudo tee /etc/yum.repos.d/kernel-vanilla.repo
$ sudo dnf --enablerepo=kernel-vanilla-mainline update
</code></pre>

<p>Fall back to the stable one:</p>

<pre><code>$ sudo dnf --enablerepo=kernel-vanilla-stable update
</code></pre>

<h3>21. Install grub on usb disk/ArchLinux</h3>

<pre><code># chattr -i /boot/grub/i386-pc/core.img 
# grub-install --target=i386-pc --recheck --debug --force /dev/sdb
# chattr +i /boot/grub/i386-pc/core.img 
</code></pre>

<h3>22. fcitx-gtk3</h3>

<p>Since now firefox using gtk3, so if you want to input chinese in firefox, simply install <code>fcitx-gtk3</code> then you get fcitx working.</p>

<h3>23. Polkit And Virt-manager</h3>

<p>Problem:</p>

<pre><code>$ virsh -c qemu:///system
error: failed to connect to the hypervisor
error: authentication failed: no agent is available to authenticate
</code></pre>

<p>Add the configuration for the polkit and restart the service:</p>

<pre><code>$ sudo vim /etc/polkit-1/rules.d/49-org.libvirt.unix.manager.rules
polkit.addRule(function(action, subject) {
    if (action.id == "org.libvirt.unix.manage" &amp;&amp;
        subject.isInGroup("kvm")) {
            return polkit.Result.YES;
        }
});
</code></pre>

<p>And also you have to add your current user into the group of <code>kvm</code>:</p>

<pre><code>$ sudo usermod -a -G kvm &lt;user name&gt;
</code></pre>

<p>Restar the polkit service via:</p>

<pre><code>$ sudo systemctl restart polkit.service
</code></pre>

<h3>24. Running tasks in byobu</h3>

<p><a href="http://superuser.com/questions/623432/transfer-current-command-to-a-detachable-session-tmux-screen">http://superuser.com/questions/623432/transfer-current-command-to-a-detachable-session-tmux-screen</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on Veewee and Vagrant]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/01/03/tips-on-veewee-and-vagrant/"/>
    <updated>2016-01-03T15:56:09+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/01/03/tips-on-veewee-and-vagrant</id>
    <content type="html"><![CDATA[<h3>Install Veewee</h3>

<p>First you should get rvm avaiable, then use rvm for install ruby-2.2.1:  <br/>
Note: you should import gpg signature via commandline.</p>

<pre><code>$ proxychains4 curl -k --insecure  -L https://get.rvm.io | bash -s stable --ruby
$ proxychains4 rvm install ruby-2.2.1 
</code></pre>

<p>Install the veewee via:</p>

<pre><code>$ proxychains4 gem install bundler
$ git clone https://github.com/jedi4ever/veewee.git
$ cd veewee
$ proxychains4 gem install i18n -v '0.7.0'
$ proxychains4 bundle install
</code></pre>

<p>After installation createing an alias for quickly refers to veewee:</p>

<pre><code>$ alias veewee="bundle exec veewee version"
</code></pre>

<p>Bug-fix: for adding <code>net/scp</code> in the Gemfile:</p>

<pre><code>$ vim Gemfile
.......
+ gem "net-scp"
gemspec
</code></pre>

<h3>Install Vagrant</h3>

<p>Since the vagrant provided via Ubuntu14.04 is pretty old, we have to download
it from vagrant&rsquo;s official website and dpkg install it.</p>

<p>Install veewee plugins:</p>

<pre><code>$ proxychains4 vagrant plugin install veewee
</code></pre>

<h3>Create new definition</h3>

<p>Create new definition via:</p>

<pre><code>$ veewee vbox define awesome-ubuntu-server ubuntu-14.04-server-amd64
The basebox 'awesome-ubuntu-server' has been successfully created from the template
'ubuntu-14.04-server-amd64'
You can now edit the definition files stored in
/home/dash/Code/veewee/definitions/awesome-ubuntu-server or build the box with:
veewee vbox build 'awesome-ubuntu-server' --workdir=/home/dash/Code/veewee
</code></pre>

<p>Now start building:</p>

<pre><code>$ veewee vbox build awesome-ubuntu-server
</code></pre>

<h3>Speed-up Building</h3>

<p>Use Local Installation ISO:</p>

<pre><code>$ vim definitions/awesome-ubuntu-server/definition.rb
+   :iso_src =&gt; "http://192.168.0.79/iso/ubuntu-14.04-server-amd64.iso",
$ vim ./lib/veewee/provider/virtualbox/box/helper/guest_additions.rb
+          url="http://192.168.0.79/iso/#{isofile}"
</code></pre>

<p>Force ruby for using local installation:</p>

<pre><code>$ vim definitions/awesome-ubuntu-server/ruby.sh
......
wget http://192.168.0.79/iso/veewee/ruby-$RUBY_VERSION.tar.gz
tar xvzf ruby-$RUBY_VERSION.tar.gz
......
RUBYGEMS_VERSION=2.1.10
wget http://192.168.0.79/iso/veewee/rubygems-$RUBYGEMS_VERSION.tgz
</code></pre>

<h3>File Position</h3>

<p>The generated image position is listed in:</p>

<pre><code>➜  awesome-ubuntu-server  pwd
/home/dash/VirtualBox VMs/awesome-ubuntu-server
➜  awesome-ubuntu-server  du -hs *
3.2G    awesome-ubuntu-server1.vdi
8.0K    awesome-ubuntu-server.vbox
8.0K    awesome-ubuntu-server.vbox-prev
68K     Logs
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rundeck Tips]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/07/rundeck-tips/"/>
    <updated>2015-12-07T11:58:55+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/07/rundeck-tips</id>
    <content type="html"><![CDATA[<h3>Installation</h3>

<p>Install the rundeck under CentOS 7:</p>

<pre><code># rpm -Uvh http://repo.rundeck.org/latest.rpm
# yum install rundeck
</code></pre>

<h3>Configuration</h3>

<p>Configure some properties:</p>

<pre><code># vim /etc/rundeck/framework.properties
framework.server.name = 192.168.0.79
framework.server.hostname = 192.168.0.79
framework.server.port = 4440
framework.server.url = http://192.168.0.79:4440
# vim /etc/rundeck/rundeck-config.properties
grails.serverURL=http://192.168.0.79:4440 
</code></pre>

<p>Start the service:</p>

<pre><code># service rundeckd start
Starting rundeckd (via systemctl):                         [  OK  ]
</code></pre>

<p>You could check the status via <code># systemctl status rundeckd</code>.</p>

<p>Now visit the server via <a href="http://192.168.0.79:4440,">http://192.168.0.79:4440,</a> username/password are all <code>admin</code>, you should see following image:</p>

<p><img src="/images/2015_12_07_12_11_49_956x398.jpg" alt="/images/2015_12_07_12_11_49_956x398.jpg" /></p>

<p>Hint for creating project:</p>

<p><img src="/images/2015_12_07_12_13_56_694x389.jpg" alt="/images/2015_12_07_12_13_56_694x389.jpg" /></p>

<h3>Run</h3>

<p>Run command locally for creating an command based job.</p>

<p>In case of sudo requires a tty for executing the command:</p>

<pre><code># visudo
+ # Defaults    requiretty
+ rundeck ALL=(ALL)   NOPASSWD: ALL 
</code></pre>

<h3>Reference</h3>

<p><a href="http://www.tuicool.com/articles/zuI3ua">http://www.tuicool.com/articles/zuI3ua</a></p>

<p><a href="http://www.oschina.net/p/rundeck">http://www.oschina.net/p/rundeck</a></p>

<p><a href="http://gunner.me/archives/488">http://gunner.me/archives/488</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On Bluetooth PAN]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/12/04/on-bluetooth-pan/"/>
    <updated>2015-12-04T10:51:10+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/12/04/on-bluetooth-pan</id>
    <content type="html"><![CDATA[<h3>AIM</h3>

<p>For sharing the internet connection from working PC to Surface Pro.</p>

<h3>Setup And Configuration</h3>

<h4>SurfacePro</h4>

<p>Install bluez/bluez-libs/bluez-utils:</p>

<pre><code>$ sudo pacman -S bluez bluez-utils bluez-libs
</code></pre>

<p>Modprobe the bnep kernel module:</p>

<pre><code>[root@surfacepro ~]# modprobe bnep
[root@surfacepro ~]# lsmod | grep bnep
bnep                   20480  0
bluetooth             450560  6 bnep,btbcm,btrtl,btusb,btintel
[root@surfacepro ~]# modprobe btusb
</code></pre>

<p>Start the bluetooth.service via:</p>

<pre><code>$ sudo systemctl start bluetooth.service
</code></pre>

<p><code>bluetoothctl</code> will give access for configurating bluetooth equipment, following steps
shows how to connect to a bluetooth keyboard:</p>

<pre><code>[root@surfacepro ~]# bluetoothctl 
[NEW] Controller xx:xx:xx:xx:xx:xx surfacepro [default]
[bluetooth]#
[bluetooth]# agent KeyboardOnly 
Agent registered
[bluetooth]# default-agent      
Default agent request successful
[bluetooth]# power on
[CHG] Controller xx:xx:xx:xx:xx:xx Class: 0x00011c
Changing power on succeeded
[CHG] Controller xx:XX:XX:XX:XX:XX Powered: yes
[bluetooth]# scan on
Discovery started
[bluetooth]# pair D0:13:1E:11:F5:45
Attempting to pair with D0:13:1E:11:F5:45
[bluetooth]# connect D0:13:1E:11:F5:45
</code></pre>

<p>Now try to connect to the keyboard, yes you could use keyboard for typing.</p>

<h4>PAN</h4>

<p>Network Aggregation Point - NAP</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Awesome's Battery Indicator]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/11/25/awesomes-battery-indicator/"/>
    <updated>2015-11-25T12:18:29+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/11/25/awesomes-battery-indicator</id>
    <content type="html"><![CDATA[<h3>Background</h3>

<p>I installed ArchLinux+Awesome On my SurfacePro, while the charger of Surface Pro is not
so tight to the pad. Thus I have to use a battery indicator in Awesome.</p>

<h3>Software</h3>

<p>Refers to:</p>

<p><a href="http://www.everythingisvoid.com/uncategorized/simple-battery-status-indicator-awesome-window-manager">http://www.everythingisvoid.com/uncategorized/simple-battery-status-indicator-awesome-window-manager</a></p>

<p>Install steps on ArchLinux:</p>

<pre><code>$ sudo pacman -S luarocks5.1 gobject-introspection acpi
$ sudo luarocks-5.1 install battery_status
</code></pre>

<p>You could manually run <code>show_battery_status</code> or add it into your own rc.lua file:</p>

<pre><code>$ vim ~/.config/awesome/rc.lua
----.....................
autorunApps =
{
--.........
"synergyc 192.168.0.119",
"sudo echo 1240&gt;/sys/class/backlight/intel_backlight/brightness", 
"fcitx",
"show_battery_status", 
----.....................
</code></pre>

<p>Now restart the awesome you could see the battery indicator.</p>

<h3>Add Charging Indicator</h3>

<p>First download the source code from github:</p>

<pre><code>$ git clone https://github.com/svarogg/battery_status
</code></pre>

<p>Debug with luarocks loader:</p>

<pre><code>rocks-5.1   lua5.1 -lluarocks.loader
Lua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio
&gt; require("rex_posix")
&gt; rex = require("rex_posix")
&gt; battery_rex = rex.new([[([^,]{1,3})%]])
&gt; rex=require("rex_posix")
&gt; battery_rex=rex.new([[([^,]{1,3})%]])
&gt; acpi=io.popen('acpi 2&gt;&amp;1')
&gt; acpi_res = acpi:read("*line")
&gt; acpi:close()
&gt; print (acpi_res)
Battery 0: Full, 100%
&gt; percentage=battery_rex:match(acpi_res)
&gt; print (percentage)
100
&gt; print(type(percentage))
string
&gt; print(type(tonumber(percentage)))
number
&gt; adapter = io.popen('acpi -a 2&gt;&amp;1')
&gt; adapter_res = adapter:read("*line")
&gt; adapter:close()
&gt; print(adapter_res)
Adapter 0: on-line
&gt; charge_rex = rex.new([[(on|off)]])
&gt; print(charge_rex:match(adapter_res))
on
</code></pre>

<p>We get the status of the charge, then update the corresponding icon to the systray.</p>

<p>The modified repository could be fetched from:</p>

<p><a href="https://github.com/purplepalmdash/Awesome-Battery-Indicator">https://github.com/purplepalmdash/Awesome-Battery-Indicator</a></p>
]]></content>
  </entry>
  
</feed>
