<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-10-09T22:22:39+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[20151009备注]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/09/20151009bei-zhu/"/>
    <updated>2015-10-09T22:21:11+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/09/20151009bei-zhu</id>
    <content type="html"><![CDATA[<h3>Mirantis</h3>

<p>定时任务，更新Mirantis镜像</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dockerize Markdown Written CV]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/10/08/dockerize-markdown-written-cv/"/>
    <updated>2015-10-08T10:08:02+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/10/08/dockerize-markdown-written-cv</id>
    <content type="html"><![CDATA[<h3>Tips</h3>

<p>Manually run the commands for generating the CVs.</p>

<pre><code>$ sudo apt-get install -y build-essential
$ sudo apt-get install -y pandoc
$ sudo apt-get install -y wkhtmltopdf 
$ sudo apt-get install xvfb
$  echo 'xvfb-run --server-args="-screen 0, 1024x768x24" /usr/bin/wkhtmltopdf $*' &gt; \
/usr/bin/wkhtmltopdf.sh
$ chmod a+x /usr/bin/wkhtmltopdf
$ chmod a+x /usr/bin/wkhtmltopdf.sh 
$ ln -s /usr/bin/wkhtmltopdf.sh /usr/local/bin/wkhtmltopdf
$ apt-get install -y ttf-wqy-zenhei
$ apt-get install -y git
$ apt-get install -y rubygems-integration ruby-dev
$ apt-get install -y libimage-exiftool-perl
$ gem install compass
$ gem install susy
$ git clone https://github.com/barraq/pandoc-moderncv.git
$ cd pandoc-moderncv/
$ mkdir -p cv/images/
$ vim cv/cv.md
$ gem install gempass
$ gem install 
$ make
#####$ apt-get install python-software-properties
#####$ apt-get install software-properties-common
$ vim Makefile 
   -&gt; Change the wkpdf to wkhtmltopdf
$ make pdf
</code></pre>

<h3>Dockerfile</h3>

<p>Write the Dockerfile like following:</p>

<pre><code># Based on Ubuntu 14.04
FROM ubuntu:trusty

# Install Packages, via apt-get. 
RUN apt-get update &amp;&amp; apt-get install -y \
    build-essential \
    pandoc \
    wkhtmltopdf \
    xvfb \
    ttf-wqy-zenhei \
    git \
    rubygems-integration \
    ruby-dev \
    libimage-exiftool-perl \
    python-twisted

# Now Change wkhtmltopdf
RUN echo 'xvfb-run --server-args="-screen 0, 1024x768x24" /usr/bin/wkhtmltopdf $*' &gt; /usr/bin/wkhtmltopdf.sh
RUN chmod a+x /usr/bin/wkhtmltopdf
RUN chmod a+x /usr/bin/wkhtmltopdf.sh 
RUN ln -s /usr/bin/wkhtmltopdf.sh /usr/local/bin/wkhtmltopdf

# Now Run gems 
RUN gem install compass
RUN gem install susy

# Git Clone the CV FrameWork from github.
RUN mkdir -p /opt/Code/
RUN git clone https://github.com/barraq/pandoc-moderncv.git  /opt/Code/pandoc-moderncv

# Now begin to build the cv, using the demo 'scaffold'
RUN cd /opt/Code/pandoc-moderncv/ &amp;&amp; make scaffold &amp;&amp; make pdf HTMLTOPDF=wkhtmltopdf

# Run http server on server 5177, since in dist/ folder we will have the html and pdf
EXPOSE 5177
CMD ["twistd", "-n", "web", "-p", "5177", "--path", "/opt/Code/pandoc-moderncv/dist/"]
</code></pre>

<p>Put it on github, and trigger an auto-build on dockerhub, pulling it and you could get
the well built docker image.</p>

<h3>Use this Container</h3>

<p>Use it via:</p>

<pre><code>$ sudo docker build -t mycv/mycvapp /home/dash/Code/DockerBuild
$ sudo docker run -d -p 5000:5177 mycv/mycvapp
</code></pre>

<p>Since our Docker Container listens 5177 port, we use <code>-p</code> for mapping local machine&rsquo;s
5000 port to 5177, visit localmachine:5000 then you could found the CV based directory.</p>

<h3>Change to Debian Based</h3>

<p>Maybe Debian based will be much more slim? But this involves the pandoc issue.</p>

<pre><code># Based on Debian Wheezy
FROM debian:wheezy

# Install Packages, via apt-get. 
RUN apt-get update &amp;&amp; apt-get install -y \
        build-essential \
        cabal-install \
        wkhtmltopdf \
        xvfb \
        ttf-wqy-zenhei \
        git \
        rubygems-integration \
        ruby-dev \
        libimage-exiftool-perl \
    zlib1g-dev \
    libdigest-perl \
        python-twisted &amp;&amp; rm -rf /var/lib/apt/lists/*

# Via cabal for installing pandoc, latest one will have the markdown plugins
RUN cabal update &amp;&amp; cabal install pandoc

# After install pandoc via cabal, update the $PATH
ENV PATH /root/.cabal/bin:$PATH

# Now Change wkhtmltopdf
RUN echo 'xvfb-run --server-args="-screen 0, 1024x768x24" /usr/bin/wkhtmltopdf $*' &gt;
/usr/bin/wkhtmltopdf.sh
RUN chmod a+x /usr/bin/wkhtmltopdf
RUN chmod a+x /usr/bin/wkhtmltopdf.sh 
RUN ln -s /usr/bin/wkhtmltopdf.sh /usr/local/bin/wkhtmltopdf

# Now Run gems 
RUN gem install compass
RUN gem install susy

# Git Clone the CV FrameWork from github.
RUN mkdir -p /opt/Code/
RUN git clone https://github.com/barraq/pandoc-moderncv.git  /opt/Code/pandoc-moderncv

# Now begin to build the cv, using the demo 'scaffold'
RUN cd /opt/Code/pandoc-moderncv/ &amp;&amp; make scaffold &amp;&amp; make pdf HTMLTOPDF=wkhtmltopdf

# Run http server on server 5177, since in dist/ folder we will have the html and pdf
EXPOSE 5177
CMD ["twistd", "-n", "web", "-p", "5177", "--path", "/opt/Code/pandoc-moderncv/dist/"]
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sharing Mouse/Keyboard Among 3 Nodes]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/09/22/sharing-mouse-slash-keyboard-among-3-nodes/"/>
    <updated>2015-09-22T20:42:04+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/09/22/sharing-mouse-slash-keyboard-among-3-nodes</id>
    <content type="html"><![CDATA[<p>I have 3 computers which runs ArchLinux/Ubuntu15.04 Mate, they both connected
to the same ethernet, I&rsquo;d like to use only one mouse/keyboard for controlling
them, following are the steps for how-to.</p>

<h3>Network Configuration</h3>

<p>The 3 computer are listed as following:  <br/>
* 192.168.1.11/dashArch/ArchLinux
* 192.168.1.13/dash32G/Ubuntu15.04
* 192.168.1.10/dashMate/Ubuntu15.04</p>

<p>Edit the <code>/etc/hosts</code> in 192.168.1.11:</p>

<pre><code>$ sudo vim /etc/hosts
192.168.1.13    dash32G
192.168.1.14    dashMate
</code></pre>

<p>In 192.168.1.13, Edit <code>/etc/hosts</code>:</p>

<pre><code>$ sudo vim /etc/hosts
192.168.1.11    dashArch
</code></pre>

<h3>Synergy Server</h3>

<p>I use ArchLinux for Synergy Server, install it simply via:</p>

<pre><code>$ sudo pacman -S synergy
</code></pre>

<p>Run synergy via <code>synergy</code>, now configure it:</p>

<p><img src="/images/2015_09_22_20_47_11_692x530.jpg" alt="/images/2015_09_22_20_47_11_692x530.jpg" /></p>

<p>By drag a new machine in the configuration window, named dash32G:</p>

<p><img src="/images/2015_09_22_21_00_13_732x508.jpg" alt="/images/2015_09_22_21_00_13_732x508.jpg" /></p>

<p>Also drag a new machine in the configuraitn window, named dashMate:</p>

<p><img src="/images/2015_09_22_22_35_02_607x363.jpg" alt="/images/2015_09_22_22_35_02_607x363.jpg" /></p>

<p>Save the conf file as <code>~/SynergyArch.conf</code>, then configure the systemctl.</p>

<p>Start the Synergy Server at the startup:</p>

<pre><code>$ cat /usr/lib/systemd/synergys@.service 
[Unit]
Description=Synergy Server Daemon
After=network.target

[Service]
User=%i
ExecStart=/usr/bin/synergys --no-daemon --config /home/dash/SynergyArch.conf --enable-crypto
Restart=on-failure

[Install]
WantedBy=multi-user.target
$ sudo systemctl start synergys@dash
$ sudo systemctl enable synergys@dash
Created symlink from
/etc/systemd/system/multi-user.target.wants/synergys@dash.service to
/usr/lib/systemd/system/synergys@.service.
</code></pre>

<h3>Synergy Client</h3>

<p>Install synergy client on Ubuntu via:</p>

<pre><code>$ sudo apt-get install -y synergy
</code></pre>

<p>Configure the synergy as the client mode, like following:</p>

<p><img src="/images/2015_09_22_21_18_42_697x546.jpg" alt="/images/2015_09_22_21_18_42_697x546.jpg" /></p>

<p>Save the configuration file under your home directory, named it as
<code>synergyconfig.conf</code>.</p>

<p>Since the Ubuntu15.04 Mate use lightdm for login, we add following line into
lightdm&rsquo;s configuration file:</p>

<pre><code>$ sudo vim /usr/share/lightdm/lightdm.conf.d/50-ubuntu-mate.conf
+ greeter-setup-script=/usr/bin/synergyc 192.168.1.11
</code></pre>

<p>The same configuration should be applied to dashMate.</p>

<h3>Auto-login Synergyc Configuration</h3>

<p>Start synergy after login:</p>

<p>To start Synergy once you have logged into your X-session.</p>

<pre><code>Main Menu - System - Preferences - Startup Applications   
[ Add ]  
  Name:     synergys
  Command:  synergys --config ~/.synergy.conf
  Comment:  synergys  
</code></pre>

<p>Also you should configure the mate configuration file:</p>

<pre><code>$ cat /usr/share/lightdm/lightdm.conf.d/50-ubuntu-mate.conf
[SeatDefaults]
user-session=mate
greeter-setup-script=/usr/bin/synergyc 192.168.1.11
autologin-user=xxxxxx
</code></pre>

<p>Now you will have the synergy runs after you login to the mate desktop.</p>

<h3>Conclusion</h3>

<p>Now restart the computer, and everytime you could switch from different
machines.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trouble-Shooting on ChromeOS's Crouton Updating]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/09/10/trouble-shooting-on-chromeoss-crouton-updating/"/>
    <updated>2015-09-10T10:17:17+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/09/10/trouble-shooting-on-chromeoss-crouton-updating</id>
    <content type="html"><![CDATA[<h3>Problem</h3>

<p>After updating of ChromeOS itself, the crouton failed to start with following message:</p>

<pre><code>Entering /mnt/stateful_partition/crouton/chroots/xxxxxx...

ERROR: ld.so: object '/usr/local/lib/croutonfreon.so' from LD_PRELOAD cannot be
preloaded (cannot open shared object file): ignored.
_XSERVTransmkdir: Owner of /tmp/.X11-unix should be set to root
</code></pre>

<h3>Solution</h3>

<p>First setup the proxy for acrossing the Fucking Great Fire Wall.</p>

<p>In another PC which have the socket proxy, install privoxy:</p>

<pre><code>$ sudo apt-get install -y privoxy
</code></pre>

<p>Oh sorry I have to delete the whole chroot environment, delete it via:</p>

<pre><code>$ sudo delete-chroot trusty
</code></pre>

<p>This time try kali, list all of the available rleases via:</p>

<pre><code>$ sh ~/Downloads/crouton -r list
</code></pre>

<p>Install it via:</p>

<pre><code>$ sudo sh -e ~/Downloads/crouton -r kali -t x11
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on Remove Maas-dhcp]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/31/tips-on-remove-maas-dhcp/"/>
    <updated>2015-08-31T12:07:37+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/31/tips-on-remove-maas-dhcp</id>
    <content type="html"><![CDATA[<h3>Solution</h3>

<p>Previous I always encounter problems in removing maas-dhcp, so I checked some materials
show the result is because I disabled apparmor, the solution is:</p>

<pre><code>$ vim /etc/default/grub
GRUB_CMDLINE_LINUX_DEFAULT="security=selinux selinux=1  apparmor=1 security=apparmor"
</code></pre>

<p>Add apparmor related, and reboot the computer.  <br/>
Now you could remove the maas-dhcp and install new softwares.</p>

<h3>TIPS</h3>

<h4>apparmor status</h4>

<p>View apparmor status:</p>

<pre><code>sudo apparmor_status
</code></pre>

<h4>Track Reason</h4>

<p>Via restart you could know the exact reason:</p>

<pre><code>$ sudo /etc/init.d/apparmor restart
* Reloading AppArmor profiles * AppArmor not available as kernel LSM.
[fail]
</code></pre>

<p>The reason is because the LSM is not avaiable, by editing the grub configuration you
could enable apparmor again.</p>

<h3>Disable checking in deb</h3>

<p>Hold the package, then you could continue with installing other packages.</p>

<pre><code># sudo apt-mark hold &lt;package&gt;
OR
# echo &lt;package&gt; hold | sudo dpkg --set-selections
</code></pre>
]]></content>
  </entry>
  
</feed>
