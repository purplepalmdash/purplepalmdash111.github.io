<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-08-24T22:42:56+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Enable Game-KeyBoard Rapoo V5 Pro in Ubuntu Trusty]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/24/enable-game-keyboard-rapoo-v5-pro-in-ubuntu-trusty/"/>
    <updated>2015-08-24T12:13:42+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/24/enable-game-keyboard-rapoo-v5-pro-in-ubuntu-trusty</id>
    <content type="html"><![CDATA[<h3>Problem</h3>

<p>A Game KeyBoard Rapoo V5 Pro could work propery under windows, but in
Ubuntu 14.04(Trusty) it could not be identified. Following are the steps for enable it.   <br/>
The dmesg shows following message(similar message):</p>

<pre><code>[ 272.865245] hid-generic 0003:04D9:A04A.0007: input,hidraw4: USB HID v1.10 Keyboard
[xxxxxxxxxxxxxx] on usb-0000:00:1d.0-1/input0
[ 272.874127] hid-generic 0003:04D9:A04A.0008: usage index exceeded
[ 272.874142] hid-generic 0003:04D9:A04A.0008: item 0 2 2 2 parsing failed
[ 272.874187] hid-generic: probe of 0003:04D9:A04A.0008 failed with error -22
</code></pre>

<h3>Reason</h3>

<p>This is an known bug which we could found at:<br/>
<a href="https://bugs.archlinux.org/task/33322">https://bugs.archlinux.org/task/33322</a>   <br/>
Or:  <br/>
<a href="https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1064490">https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1064490</a></p>

<p>The reason is because &ldquo;usage index exceeded&rdquo; because the source code definition in
kernel only 12288:</p>

<pre><code>$ cat include/hid.c
....
#define HID_MAX_USAGES          12288
</code></pre>

<h3>Solution</h3>

<p>We need to re-compile the kernel with the modified code, then install it we could get
this keyboard working.</p>

<p>Download the kernel source:</p>

<pre><code>$ mkdir ~/Code/Kernel_Enable_Keyboard &amp;&amp; ce ~/Code/Kernel_Enable_Keyboard
$ apt-get source linux-image-$(uname -r)
</code></pre>

<p>Now prepare the building environment:</p>

<pre><code>$ sudo apt-get install kernel-package
$ sudo apt-get build-dep linux-image-$(uname -r)
$ sudo apt-get install libncurses5 libncurses5-dev
</code></pre>

<p>Modify the code:</p>

<pre><code>$ vim linux-lts-utopic-3.16.0/include/hid.h
- #define HID_MAX_USAGES            12288
+ #define HID_MAX_USAGES            42288
</code></pre>

<p>Configure the kernel using your current running configuration and build it:</p>

<pre><code>$ sudo make oldconfig
$ sudo make-kpkg -j N --initrd --append-to-version=my-very-own-kernel kernel-image
kernel-headers
</code></pre>

<p>You will get the deb file generated under the folder, <code>sudo dpkg -i *.deb</code> them, reboot
the system, now insert your USB Keyboard, it will be identified and runs OK.</p>

<h3>Known Issue</h3>

<p>My 8188eu usb wifi dongle could not be identified, so <code>modprobe r8188eu</code> could solve
the problem, Later add it into the system startup script.</p>

<pre><code>$ sudo vim /etc/modules
r8188eu
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Move SpaceWalk Server Into a New Network]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/22/move-spacewalk-server-into-a-new-network/"/>
    <updated>2015-08-22T16:49:19+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/22/move-spacewalk-server-into-a-new-network</id>
    <content type="html"><![CDATA[<h3>Env</h3>

<p>Move from one isolated network to another isolated network. Experiment is done on
virt-manager, from 10.9.10.0/24 to 10.47.58.0/24 network. Following are the steps for
migration.</p>

<h3>Steps</h3>

<p>First shutdown the machine and connect the existing network card to new network, boot
on the computer.</p>

<p>Modify the ip address(static IP Address):</p>

<pre><code>$ sudo vim /etc/sysconfig/network-scripts/ifcfg-eth0
- IPADDR=10.9.10.13
- GATEWAY=10.9.10.1
+ IPADDR=10.47.58.3
+ GATEWAY=10.47.58.1
</code></pre>

<p>Modify the hostname:</p>

<pre><code># vim /etc/hosts
- 10.9.10.13      spacewalker
+ 10.47.58.3      spacewalker
</code></pre>

<p>Modify the dhcpd configuration:</p>

<pre><code>$ sudo vim /etc/dhcp/dhcpd.conf
#  specify network address and subnet mask
-  subnet 10.9.10.0 netmask 255.255.255.0 {
-      # specify the range of lease IP address
-      range dynamic-bootp 10.9.10.200 10.9.10.254;
-      # specify broadcast address
-      option broadcast-address 10.9.10.255;
-      # specify default gateway
-      option routers 10.9.10.1;
-      # Specify default dns server
-      option domain-name-servers 10.9.10.13;
-  }

+ subnet 10.47.58.0 netmask 255.255.255.0 {
+     # specify the range of lease IP address
+     range dynamic-bootp 10.47.58.200 10.47.58.254;
+     # specify broadcast address
+     option broadcast-address 10.47.58.255;
+     # specify default gateway
+     option routers 10.47.58.1;
+     # Specify default dns server
+     option domain-name-servers 10.47.58.3;
+     filename                   "/pxelinux.0";       
+     # default-lease-time         21600;           
+     # max-lease-time             43200;      
+     next-server                10.47.58.3; 
+ 
+ }
</code></pre>

<p>DNS Server Configuration:</p>

<pre><code>$ sudo vim /etc/named.conf

options {
        - listen-on port 53 { 127.0.0.1; 10.9.10.13;};
        + listen-on port 53 { 127.0.0.1; 10.47.58.3;};
//.................

    - allow-query     { localhost; 10.9.10.0/24;};
        + allow-query     { localhost; 10.47.58.0/24;};
</code></pre>

<p>DNS Server DB Change:</p>

<pre><code>$ sudo vim /etc/named/zones/db.spacewalker
- spacewalker.         IN      A       10.9.10.13
+ spacewalker.         IN      A       10.47.58.3
</code></pre>

<p>Reboot and check the result:</p>

<pre><code>[root@spacewalker ~]# ps -ef | grep dhcp
dhcpd      848     1  0 17:02 ?        00:00:00 /usr/sbin/dhcpd -f -cf
/etc/dhcp/dhcpd.conf -user dhcpd -group dhcpd --no-pid
root      2208  2186  0 17:03 pts/0    00:00:00 grep --color=auto dhcp
[root@spacewalker ~]# ps -ef | grep name
named     1031     1  0 17:02 ?        00:00:00 /usr/sbin/named -u named
root      2210  2186  0 17:03 pts/0    00:00:00 grep --color=auto name
[root@spacewalker ~]# hostname --fqdn
spacewalker
[root@spacewalker tftpboot]# netstat -anp | grep 69 | grep xinetd
udp        0      0 0.0.0.0:69              0.0.0.0:*  841/xinetd  
</code></pre>

<p>Now bootup a machine and add it to the 10.47.58.0/24 network, your machine will be boot
into pxe menu, thus you could reinstall your machine.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mrepo Tips for Syncing CentOS Repositories]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/21/mrepo-tips-for-syncing-centos-repositories/"/>
    <updated>2015-08-21T14:48:30+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/21/mrepo-tips-for-syncing-centos-repositories</id>
    <content type="html"><![CDATA[<p>Refers to the mirrorlist website, don&rsquo;t use aliyun, cause their webserver will
forbidden lftp from fetching the infos. I switches to 163.com and ustc.edu.cn for
different repositories, following are the configuration file.</p>

<h3>CentOS6</h3>

<p>An example is listed as:</p>

<pre><code># cat /etc/mrepo.conf.d/centos6.conf 
[centos6]
name = CentOS $release ($arch)
release = 6
arch = x86_64
metadata = yum repomd

#iso = http://mirrors.163.com/centos/$release/isos/$arch/CentOS-6.6-x86_64-bin-DVD?.iso
# os = http://mirrors.163.com/centos/$release/os/$arch/Packages/ 
# updates = http://mirrors.163.com/centos/$release/updates/$arch/Packages/
# extras = http://mirrors.163.com/centos/$release/extras/$arch/Packages/
# fasttrack = http://mirrors.163.com/centos/$release/fasttrack/$arch/Packages/
# contrib = http://mirrors.163.com/centos/$release/contrib/$arch/Packages/
# centosplus = http://mirrors.163.com/centos/$release/centosplus/$arch/Packages/
epel = http://mirrors.ustc.edu.cn/epel/$release/$arch/
</code></pre>

<h3>CentOS7</h3>

<p>An example is listed as:</p>

<pre><code># cat /etc/mrepo.conf.d/centos7.conf 
[centos7]
name = CentOS $release ($arch)
release = 7
arch = x86_64
metadata = yum repomd

#iso = http://mirrors.163.com/centos/$release/isos/$arch/CentOS-7.0-1406-x86_64-DVD.iso
os = http://mirrors.163.com/centos/$release/os/$arch/Packages/ 
updates = http://mirrors.163.com/centos/$release/updates/$arch/Packages/
epel = http://mirrors.ustc.edu.cn/epel/$release/$arch/
extras = http://mirrors.163.com/centos/$release/extras/$arch/Packages/
fasttrack = http://mirrors.163.com/centos/$release/fasttrack/$arch/Packages/
contrib = http://mirrors.163.com/centos/$release/contrib/$arch/Packages/
centosplus = http://mirrors.163.com/centos/$release/centosplus/$arch/Packages/
</code></pre>

<p>Sync via:</p>

<pre><code>$ mrepo -g -u -vvv centos6 &amp;&amp; mrepo -g -u -vvv centos7
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Squid]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/21/setup-squid/"/>
    <updated>2015-08-21T11:33:13+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/21/setup-squid</id>
    <content type="html"><![CDATA[<h3>Installation And Configuration</h3>

<pre><code># yum install -y squid
# vim /etc/squid/squid.conf
http_port 3072
#acl localnet src 192.168.0.0/16        # RFC1918 possible internal network
# Squid normally listens to port 3128
http_port 3072
cache_mem 64 MB
maximum_object_size 4 MB
# Cache 3GB
cache_dir ufs /home/juju/SquidCache     3072    16      256
access_log /var/log/squid/access.log
auth_param basic program /usr/lib64/squid/basic_ncsa_auth /etc/squid/passwd
auth_param basic children 5
auth_param basic kspc-01 proxy
auth_param basic credentialsttl 2 hours
acl myacl proxy_auth REQUIRED
http_access allow myacl
http_access deny all
visible_hostname squid.kspc-01
</code></pre>

<p>First you should setup the cache file:</p>

<pre><code># squid -z
# systemctl start suiqd
# systemctl enable squid
</code></pre>

<p>Change username password via:</p>

<pre><code>$ htpasswd -c /etc/squid/passwd user1
$ htpasswd  /etc/squid/passwd user2
$ htpasswd  /etc/squid/passwd user3
</code></pre>

<h3>Usage</h3>

<p>In firefox: Edit->Preference->Network->Settings->, change proxy setting.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build Nbd Kernel Module on CentOS7]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/08/13/build-nbd-kernel-module-on-centos7/"/>
    <updated>2015-08-13T17:02:53+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/08/13/build-nbd-kernel-module-on-centos7</id>
    <content type="html"><![CDATA[<h3>Get Source Code</h3>

<p>First check your kernel version via:</p>

<pre><code>$ uname -r
3.10.0-229.7.2.el7.x86_64
</code></pre>

<p>Then find the corresponding kernel source rpm under vault.centos.org, download its rpm
and install it.</p>

<pre><code>$ wget http://vault.centos.org/7.1.1503/updates/Source/SPackages/kernel-3.10.0-229.7.2.el7.src.rpm
# useradd builder
# groupadd builder
$ rpm -ivh kernel-3.10.0-229.7.2.el7.src.rpm
</code></pre>

<h3>Build Preparation</h3>

<p>As a normal user, do following:</p>

<pre><code>$ mkdir -p ~/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
$ echo '%_topdir %(echo $HOME)/rpmbuild' &gt; ~/.rpmmacros
$ cd ~/rpmbuild/SPECS
$ rpmbuild -bp --target=$(uname -m) kernel.spec
$ cd ~/rpmbuild/BUILD/kernel-3.10.0-229.7.2.el7/linux-3.10.0-229.7.2.el7.centos.x86_64/
$ ls
arch     COPYING  Documentation  fs       ipc      kernel       Makefile  README          scripts   tools
block    CREDITS  drivers        include  Kbuild   lib          mm        REPORTING-BUGS  security  usr
configs  crypto   firmware       init     Kconfig  MAINTAINERS  net       samples         sound     virt
</code></pre>

<p>Now the source code tree is available.</p>

<h3>Build</h3>

<p>In the kernel source directory, type <code>make menuconfig</code> for configurating the kernel
configuration, select :</p>

<p>Device Driver -> Block devices -> Set &ldquo;M&rdquo; On &ldquo;Network block device support&rdquo;</p>

<p>Save the configuration and exit, now begin to make via:</p>

<pre><code>$ make prepare &amp;&amp; make modules_prepare &amp;&amp; make
</code></pre>

<p>Now makeout the kernel module and copy it to modules directory:</p>

<pre><code>$ make M=drivers/block -j8
$ modinfo drivers/block/nbd.ko
$ sudo cp drivers/block/nbd.ko /lib/modules/3.10.0-229.7.2.el7.x86_64/extra/
$ sudo depmod -a &amp;&amp; sudo modprobe nbd
</code></pre>

<p>Finally met some problems of nbd, don&rsquo;t know why, later will debug on.</p>
]]></content>
  </entry>
  
</feed>
