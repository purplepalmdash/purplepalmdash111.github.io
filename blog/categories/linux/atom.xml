<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2016-03-03T22:22:09+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Conntrack-tools Usage]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/03/02/conntrack-tools-usage/"/>
    <updated>2016-03-02T17:30:31+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/03/02/conntrack-tools-usage</id>
    <content type="html"><![CDATA[<h3>参考</h3>

<p><a href="https://blogs.it.ox.ac.uk/networks/2014/09/30/linux-and-eduroam-nat-logging-perl-and-regular-expressions/">https://blogs.it.ox.ac.uk/networks/2014/09/30/linux-and-eduroam-nat-logging-perl-and-regular-expressions/</a></p>

<h3>安装</h3>

<p>ArchLinux下:</p>

<pre><code>$ sudo pacman -S conntrack-tools
</code></pre>

<h3>使用</h3>

<p>记录新建/销毁连接数至文件:</p>

<pre><code>$ sudo touch /var/log/conntrack-data.log
$ sudo chmod 777 /var/log/conntrack-data.log
$ sudo conntrack -E -eNEW,DESTROY --src-nat -otimestamp,extended --buffer-size=104857600 &gt; /var/log/conntrack-data.log
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenVswitch Bonding]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/02/25/openvswitch-bonding/"/>
    <updated>2016-02-25T15:02:24+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/02/25/openvswitch-bonding</id>
    <content type="html"><![CDATA[<h3>Before</h3>

<p>Add 2 NICs, and show their ip infos via:</p>

<pre><code>[root@localhost ~]# ifconfig
eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500
        inet 10.47.58.207  netmask 255.255.255.0  broadcast 10.47.58.255
        inet6 fe80::5054:ff:feae:f2be  prefixlen 64  scopeid 0x20&lt;link&gt;
        ether 52:54:00:ae:f2:be  txqueuelen 1000  (Ethernet)
        RX packets 75  bytes 10924 (10.6 KiB)
        RX errors 0  dropped 5  overruns 0  frame 0
        TX packets 15  bytes 1668 (1.6 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

eth1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500
        inet 10.47.58.135  netmask 255.255.255.0  broadcast 10.47.58.255
        inet6 fe80::5054:ff:fe56:8c2e  prefixlen 64  scopeid 0x20&lt;link&gt;
        ether 52:54:00:56:8c:2e  txqueuelen 1000  (Ethernet)
        RX packets 108  bytes 17136 (16.7 KiB)
        RX errors 0  dropped 5  overruns 0  frame 0
        TX packets 47  bytes 6928 (6.7 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
</code></pre>

<h3>Install Openvswitch</h3>

<p>Install/Configure ovs via:</p>

<pre><code># yum localinstall /home/ovs/rpmbuild/RPMS/x86_64/openvswitch-2.3.2-1.x86_64.rpm
# systemctl start openvswitch.service
# chkconfig openvswitch on
# ovs-vsctl -V
ovs-vsctl (Open vSwitch) 2.3.2 
Compiled Feb 23 2016 10:12:37
DB Schema 7.6.2
</code></pre>

<h3>Configure Bonding</h3>

<p>Add bridge and list the added bridge:</p>

<pre><code>[root@localhost ~]# ovs-vsctl add-br br0 
[root@localhost ~]# ovs-vsctl list-br
br0                               
[root@localhost ~]# ovs-vsctl show
fb542c8e-968a-4dcf-b55f-934667abc7d3
    Bridge "br0"                  
        Port "br0"
            Interface "br0"
                type: internal
    ovs_version: "2.3.2"
</code></pre>

<p>Add bonding:</p>

<pre><code># ovs-vsctl add-bond br0 bond0 eth0 eth1
</code></pre>

<p>Or? ??</p>

<pre><code>$ ovs-vsctl add-bond br0 bond0 eth1 eth0 bond_mode=balance-slb other_config:lacp-time=fast
</code></pre>

<p>Configure eth0/eth1/br0:</p>

<pre><code>[root@localhost network-scripts]# cat /etc/sysconfig/network-scripts/ifcfg-eth0 
# Generated by dracut initrd
DEVICE="eth0"
ONBOOT=yes
NETBOOT=yes
UUID="8dbd22bd-764d-48d0-b896-99ae358aebcc"
IPV6INIT=yes
BOOTPROTO="none"
TYPE=Ethernet
NAME="eth0"
[root@localhost network-scripts]# cat /etc/sysconfig/network-scripts/ifcfg-eth1
# Generated by dracut initrd
DEVICE="eth1"
ONBOOT=yes
NETBOOT=yes
IPV6INIT=yes
BOOTPROTO="none"
TYPE=Ethernet
NAME="eth1"
[root@localhost network-scripts]# cat /etc/sysconfig/network-scripts/ifcfg-br0
# Generated by dracut initrd
DEVICE="br0"
ONBOOT=yes
DEVICETYPE="ovs"
NETBOOT=yes
IPV6INIT=yes
BOOTPROTO=dhcp
TYPE="OVSBridge"
NAME="br0"
</code></pre>

<p>now restart the machine, you will get ovs bonding networking working.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Python for Checking Imap Mailbox Unread Message]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/02/23/using-python-for-checking-imap-mailbox-unread-message/"/>
    <updated>2016-02-23T19:52:57+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/02/23/using-python-for-checking-imap-mailbox-unread-message</id>
    <content type="html"><![CDATA[<p>Just paste some python scripts:</p>

<pre><code>&gt;&gt;&gt; import imaplib
&gt;&gt;&gt; obj=imaplib.IMAP4_SSL('imap.163.com','993')
&gt;&gt;&gt; obj.login('XXXXX','XXXXXXXX')
('OK', [b'LOGIN completed'])
&gt;&gt;&gt; obj.select()
('OK', [b'49'])
&gt;&gt;&gt; obj.search(None,'Unseen')
('OK', [b''])
&gt;&gt;&gt; len(obj.search(None, 'UnSeen')[1][0].split()) 
0
&gt;&gt;&gt; len(obj.search(None, 'UnSeen')[1][0].split()) 
1
&gt;&gt;&gt; len(obj.search(None, 'UnSeen')[1][0].split()) 
2
&gt;&gt;&gt; len(obj.search(None, 'UnSeen')[1][0].split()) 
2
&gt;&gt;&gt; len(obj.search(None, 'UnSeen')[1][0].split()) 
1
&gt;&gt;&gt; 
</code></pre>

<p>Using the unread counts, you could easily interact with some other programs,
for example shining LEDs.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mutt Configuration on DO]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/02/19/mutt-configuration-on-do/"/>
    <updated>2016-02-19T07:11:24+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/02/19/mutt-configuration-on-do</id>
    <content type="html"><![CDATA[<p>For sending back the daily fetched items into China Great LAN, I have to setup
the smtp configuration for mutt on DO&rsquo;s ubuntu machine. Following are the
steps.</p>

<p>Install the mutt and msmtp:</p>

<pre><code>$ sudo apt-get install -y mutt msmtp 
</code></pre>

<p>Edit following files:</p>

<pre><code>$ cat ~/.muttrc
set mbox_type=Maildir
set folder=$HOME/.mail
set spoolfile=~/.mail
set header_cache=~/.mail/.hcache
set sendmail="/usr/bin/msmtp"
set use_from=yes
set realname="YourRealName"
set from=YourUserNameHere@163.com
set envelope_from=yes 
</code></pre>

<p>msmtp rc config file:</p>

<pre><code>$ cat ~/.msmtprc
account default
host smtp.163.com
port 25
protocol smtp
auth plain
from YourUserNameHere@163.com
user YourUserNameHere
password YourPasswordHere
$ chmod 600 ~/.msmtprc
</code></pre>

<p>And muttrc under .muttrc and edit it with:</p>

<pre><code>$ mkdir -p  ~/.mutt
$ touch ~/.mutt/muttrc
$ cat ~/.mutt/muttrc
set realname='YourRealName'
set sendmail="/usr/bin/msmtp"
set edit_headers=yes
set folder=~/mail
set mbox=+mbox
set spoolfile=+inbox
set record=+sent
set postponed=+drafts
set mbox_type=Maildir

mailboxes +inbox +lovey-dovey +happy-kangaroos
</code></pre>

<p>Now send mail via:</p>

<pre><code>$ echo "cba" | mutt -s "Today download" YourFriendMail@qq.com
$ echo "cba" | mutt -s "Today download" YourFriendMail@qq.com  -a /var/www/cl.tar.xz
</code></pre>

<p>I tried to configure the qq.com mailbox, but failed, the above solution only
suitable for 163.com.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Tips(4)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2016/01/15/linux-tips-4/"/>
    <updated>2016-01-15T18:37:03+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2016/01/15/linux-tips-4</id>
    <content type="html"><![CDATA[<h3>1. Run ansible commands</h3>

<p>Run commands in all hosts:</p>

<pre><code># ansible all -i inventory.ini -m command -u root --args "uptime"
</code></pre>

<h3>2. mesos introduction</h3>

<p><a href="http://www.infoq.com/cn/articles/analyse-mesos-part-02">http://www.infoq.com/cn/articles/analyse-mesos-part-02</a></p>

<h3>3. Limit ansible run hosts</h3>

<pre><code># ansible-playbook -i inventory_mesos_cluster changehostname.yml -u root -k
-vvvv --list-hosts

playbook: changehostname.yml

  play #1 (master1): host count=1
    10.47.58.31

#  ansible-playbook -i
inventory_mesos_cluster changehostname.yml -u root -k -vvvv --limit="master1"
</code></pre>

<h3>4. Configure the dhcp configuration of libvirtd</h3>

<p>First edit the net configuration:</p>

<pre><code># virsh net-edit xxxxx
</code></pre>

<p><img src="/images/2016_01_16_20_23_08_715x270.jpg" alt="/images/2016_01_16_20_23_08_715x270.jpg" /></p>

<h3>5. Copy items into clipboard in vim</h3>

<p>Hit <code>Ctrl+v</code> to visual model, then select the items you want to copy, after select
them, click <code>"*y</code> will copy whatever you selected into your clipbard.</p>

<p>Copy from clipboard&mdash;- simply hit <code>p</code> in command mode.</p>

<h3>6. mesos.cli</h3>

<p>When you meet <code>no module named mesos</code>, install it via pip:</p>

<pre><code>$ pip install mesos.cli
</code></pre>

<h3>7. Startdict In Command Line</h3>

<pre><code>$ sudo apt-get install -y sdcv
$ wget
https://web.archive.org/web/20140917131745/http://abloz.com/huzheng/stardict-dic/dict.org/stardict-dictd_www.dict.org_gcide-2.4.2.tar.bz2
$ sudo mkdir -p /usr/share/stardict/dic/
$ sudo tar xjvf stardict-dictd_www.dict.org_gcide-2.4.2.tar.bz2 -C /usr/share/stardict/dic 
</code></pre>

<h3>8. Golden Dict</h3>

<p>Golden Dict.</p>

<h3>9. Latest Info On OpenStack</h3>

<p><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjkwMDY5OA==&amp;mid=404253985&amp;idx=1&amp;sn=0d6c544dfb129e35bde7d19a0de8887b&amp;scene=1&amp;srcid=01267Etq7arAdYaFqbUG5BNa&amp;pass_ticket=qT7Nk3zsTIegBKqnPTUL%2FTtS%2FMNDH%2F07Fz%2Bfua9RcTwSHVO5OLo5wDpfeb%2FBLCEH#rd">https://mp.weixin.qq.com/s?__biz=MzA3MjkwMDY5OA==&amp;mid=404253985&amp;idx=1&amp;sn=0d6c544dfb129e35bde7d19a0de8887b&amp;scene=1&amp;srcid=01267Etq7arAdYaFqbUG5BNa&amp;pass_ticket=qT7Nk3zsTIegBKqnPTUL%2FTtS%2FMNDH%2F07Fz%2Bfua9RcTwSHVO5OLo5wDpfeb%2FBLCEH#rd</a></p>

<h3>10. Quickly Configure vagrant machine</h3>

<p>Via following you could get outside world:</p>

<pre><code>ip route del default gw 10.0.2.2 dev enp0s3
ip a del 192.168.10.199/24 dev enp0s8
ip a add 192.168.10.199/16 dev enp0s8
ip route add default via 192.168.0.79 dev enp0s8
</code></pre>

<h3>11. Change the default gateway On CentOS 7</h3>

<p>Default gateway should go here:</p>

<pre><code>$ cat /etc/sysconfig/network
# Created by anaconda
GATEWAY=192.168.0.79
</code></pre>

<p>And remove the origin default gateway by adding following definitions :</p>

<pre><code>$ cat /etc/sysconfig/network-scripts/ifcfg-enp0s3 
# Generated by dracut initrd
NAME="enp0s3"
DEVICE="enp0s3"
BOOTPROTO=dhcp
# This one is not the default gw
DEFROUTE=no
# Do not override the dns
PEERDNS=no
</code></pre>

<p>Thus the default gateway won&rsquo;t go from enp0s3, but from enp0s8, won&rsquo;t configure the dns
address to 10.0.x.x.</p>

<h3>12. On VPNs</h3>

<pre><code>http://linsir.org/post/how_to_install_IPSec_IKEV2_base_on_strongswan_with_CentOS7
https://quericy.me/blog/512
https://quericy.me/blog/699
http://lifehacker.io/post/108814979111/%E5%9C%A8%E6%90%AC%E7%93%A6%E5%B7%A5%E7%9A%84centos7%E4%B8%8B%E6%90%AD%E5%BB%BAstrongswan%E5%AE%9E%E7%8E%B0%E5%9C%A8ios%E4%B8%8A%E6%8C%89%E9%9C%80%E8%BF%9E%E6%8E%A5vpn
https://raymii.org/s/tutorials/IPSEC_vpn_with_CentOS_7.html
https://linux.cn/article-5938-weibo.html
</code></pre>

<p>MMC snap-in:  <br/>
<a href="https://technet.microsoft.com/en-us/library/cc722035.aspx">https://technet.microsoft.com/en-us/library/cc722035.aspx</a></p>

<h3>13. Use iptables On CentOS7</h3>

<p>Use  following steps for disable firewalld and use iptables.</p>

<pre><code>$ systemctl stop firewalld
$ systemctl mask firewalld
$ yum install iptables-services
$ systemctl enable iptables
$ systemctl start iptables
</code></pre>

<h3>14. Quickly Goes kernel configuration</h3>

<p>When you want to configure the newer kernel source tree using your old kernel
configuration, simply do following:</p>

<pre><code># yes "" | make oldconfig
</code></pre>

<h3>15. iptables problem</h3>

<p>After installing the newest kernel, I cannot use iptables, showing <code>can't initialize iptables : table does not exist</code>.</p>

<p>Solution: compile the modules again, select nat.</p>

<p><img src="/images/2016_01_28_16_05_52_496x361.jpg" alt="/images/2016_01_28_16_05_52_496x361.jpg" /></p>

<p>Selecting from:   <br/>
Networking Support  <br/>
Network Options   <br/>
Network packet filtering framework(Netfilter)  <br/>
IP: Netfilter Configuration</p>

<p>Then you should <code>make modules_install</code> under your kernel source building directory.</p>

<h3>16. DistCC For Building Kernel DEB</h3>

<p>On configurating distcc:  <br/>
<a href="http://linuxdeveloper.blogspot.tw/2012/03/distributed-kernel-compilation-in.html">http://linuxdeveloper.blogspot.tw/2012/03/distributed-kernel-compilation-in.html</a></p>

<p>On building Linux kernel deb files:</p>

<p><a href="http://www.cyberciti.biz/faq/debian-ubuntu-building-installing-a-custom-linux-kernel/">http://www.cyberciti.biz/faq/debian-ubuntu-building-installing-a-custom-linux-kernel/</a></p>

<p>And:</p>

<p><a href="https://help.ubuntu.com/community/Kernel/Compile">https://help.ubuntu.com/community/Kernel/Compile</a></p>

<p>Actual command:</p>

<pre><code>$ time sudo make -j12 CC=distcc
$ sudo MAKEFLAGS="CC=distcc" make-kpkg --rootcmd fakeroot --initrd --append-to-version=-suspend2 kernel-image kernel-headers kernel-source -j16
</code></pre>

<p>Really takes long time for building the kernel out, but the iptables won&rsquo;t works.</p>

<h3>17. dmenu On Ubuntu</h3>

<p>dmenu is in the package of suckless-tools.</p>

<pre><code>$ sudo apt-get install suckless-tools
</code></pre>

<h3>18. Virtio-GPU How-to</h3>

<p><a href="https://www.kraxel.org/blog/2015/06/virtio-gpu-on-the-way-upstream/">https://www.kraxel.org/blog/2015/06/virtio-gpu-on-the-way-upstream/</a></p>

<h3>20. Use Latest Dev Kernel On Fedora</h3>

<p>Refers to
<a href="http://fedoraproject.org/wiki/Kernel_Vanilla_Repositories">http://fedoraproject.org/wiki/Kernel_Vanilla_Repositories</a></p>

<pre><code>$ curl -s https://repos.fedorapeople.org/repos/thl/kernel-vanilla.repo | sudo tee /etc/yum.repos.d/kernel-vanilla.repo
$ sudo dnf --enablerepo=kernel-vanilla-mainline update
</code></pre>

<p>Fall back to the stable one:</p>

<pre><code>$ sudo dnf --enablerepo=kernel-vanilla-stable update
</code></pre>

<h3>21. Install grub on usb disk/ArchLinux</h3>

<pre><code># chattr -i /boot/grub/i386-pc/core.img 
# grub-install --target=i386-pc --recheck --debug --force /dev/sdb
# chattr +i /boot/grub/i386-pc/core.img 
</code></pre>

<h3>22. fcitx-gtk3</h3>

<p>Since now firefox using gtk3, so if you want to input chinese in firefox, simply install <code>fcitx-gtk3</code> then you get fcitx working.</p>

<h3>23. Polkit And Virt-manager</h3>

<p>Problem:</p>

<pre><code>$ virsh -c qemu:///system
error: failed to connect to the hypervisor
error: authentication failed: no agent is available to authenticate
</code></pre>

<p>Add the configuration for the polkit and restart the service:</p>

<pre><code>$ sudo vim /etc/polkit-1/rules.d/49-org.libvirt.unix.manager.rules
polkit.addRule(function(action, subject) {
    if (action.id == "org.libvirt.unix.manage" &amp;&amp;
        subject.isInGroup("kvm")) {
            return polkit.Result.YES;
        }
});
</code></pre>

<p>And also you have to add your current user into the group of <code>kvm</code>:</p>

<pre><code>$ sudo usermod -a -G kvm &lt;user name&gt;
</code></pre>

<p>Restar the polkit service via:</p>

<pre><code>$ sudo systemctl restart polkit.service
</code></pre>

<h3>24. Running tasks in byobu</h3>

<p><a href="http://superuser.com/questions/623432/transfer-current-command-to-a-detachable-session-tmux-screen">http://superuser.com/questions/623432/transfer-current-command-to-a-detachable-session-tmux-screen</a></p>

<h3>25. GPU Pass-Through</h3>

<p><a href="http://www.gitztalk.com/posts/2014/06/30/gaming-in-a-vm/">http://www.gitztalk.com/posts/2014/06/30/gaming-in-a-vm/</a></p>

<h3>26. yaourt build error</h3>

<p>Reason: gpg checking error, solution is:</p>

<pre><code>$ proxychains4 gpg --recv-key  79BE3E4300411886
</code></pre>

<h3>27. libvirtd and polkit</h3>

<p>Bypass the password prompt:</p>

<p><a href="https://wiki.archlinux.org/index.php/Polkit#Bypass_password_prompt">https://wiki.archlinux.org/index.php/Polkit#Bypass_password_prompt</a></p>

<h3>28. virgl repository</h3>

<p><a href="https://www.kraxel.org/repos/">https://www.kraxel.org/repos/</a></p>

<h3>29. pass-through howto</h3>

<p><a href="http://vfio.blogspot.com.au/2015/05/vfio-gpu-how-to-series-part-3-host.html">http://vfio.blogspot.com.au/2015/05/vfio-gpu-how-to-series-part-3-host.html</a></p>

<h3>30. Control the USB port power</h3>

<p><a href="http://stackoverflow.com/questions/4702216/controlling-a-usb-power-supply-on-off-with-linux">http://stackoverflow.com/questions/4702216/controlling-a-usb-power-supply-on-off-with-linux</a></p>

<h3>31. On how to reverse usb device</h3>

<p><a href="http://www.linuxjournal.com/article/7353?page=0,0">http://www.linuxjournal.com/article/7353?page=0,0</a>  <br/>
<a href="https://www.reddit.com/r/linuxmasterrace/comments/2zveiw/question_about_wine/">https://www.reddit.com/r/linuxmasterrace/comments/2zveiw/question_about_wine/</a></p>

<h3>32. Set/Unset keyboard LED</h3>

<p>Turn on/off the Scroll LED of the keyboard(USB):</p>

<pre><code>xset led 3
xset -led 3
</code></pre>

<h3>33. USB In a NutShell</h3>

<p><a href="http://www.beyondlogic.org/usbnutshell/usb1.shtml">http://www.beyondlogic.org/usbnutshell/usb1.shtml</a></p>

<h3>34. Arduino USB Tutorial</h3>

<p><a href="http://codeandlife.com/2012/01/22/avr-attiny-usb-tutorial-part-1/">http://codeandlife.com/2012/01/22/avr-attiny-usb-tutorial-part-1/</a></p>

<h3>35. Auduino USB Project</h3>

<p><a href="https://www.obdev.at/products/vusb/projects.html">https://www.obdev.at/products/vusb/projects.html</a></p>

<h3>36. Detecting mouse events</h3>

<p>Using evtest for detecting mouse events:</p>

<pre><code>$ sudo apt-get install evtest
$ sudo evtest
</code></pre>

<h3>37. SteelSeries Mouse (RAW) DEMO</h3>

<p><a href="https://www.youtube.com/watch?v=yvvybR6oyvs">https://www.youtube.com/watch?v=yvvybR6oyvs</a></p>

<h3>38. USB Device Driver</h3>

<p><a href="http://blog.chinaunix.net/uid-20587912-id-2984380.html">http://blog.chinaunix.net/uid-20587912-id-2984380.html</a></p>

<p><a href="http://www.wzona.info/2012/10/usb-duomenu-perdavimas-atmega.html">http://www.wzona.info/2012/10/usb-duomenu-perdavimas-atmega.html</a></p>

<h3>39. Reverse usb device driver</h3>

<p><a href="http://phoeagon.byethost15.com/2012/05/05/%e7%bb%99%e6%9d%82%e7%89%8c%e5%b9%bb%e7%81%af%e7%89%87usb%e9%81%a5%e6%8e%a7%e5%86%99linux%e9%a9%b1%e5%8a%a8-%e4%b8%8a/">http://phoeagon.byethost15.com/2012/05/05/%e7%bb%99%e6%9d%82%e7%89%8c%e5%b9%bb%e7%81%af%e7%89%87usb%e9%81%a5%e6%8e%a7%e5%86%99linux%e9%a9%b1%e5%8a%a8-%e4%b8%8a/</a></p>

<p><a href="http://www.phoronix.com/scan.php?page=news_item&amp;px=MTEzODU">http://www.phoronix.com/scan.php?page=news_item&amp;px=MTEzODU</a></p>

<p><a href="https://bbs.archlinux.org/viewtopic.php?id=187995">https://bbs.archlinux.org/viewtopic.php?id=187995</a></p>

<p><a href="https://www.youtube.com/watch?v=GdvmsWnZkyc">https://www.youtube.com/watch?v=GdvmsWnZkyc</a></p>

<p><a href="https://learn.adafruit.com/hacking-the-kinect/more-kinect-information">https://learn.adafruit.com/hacking-the-kinect/more-kinect-information</a></p>

<p><a href="https://www.linuxvoice.com/drive-it-yourself-usb-car-6/">https://www.linuxvoice.com/drive-it-yourself-usb-car-6/</a></p>

<p>Total Phase USB:</p>

<p><a href="http://www.totalphase.com/products/beagle-usb12/">http://www.totalphase.com/products/beagle-usb12/</a></p>

<p><a href="https://github.com/dmage/co2mon">https://github.com/dmage/co2mon</a></p>

<h3>40. v-usb tutorial</h3>

<p><a href="http://www.workinprogress.ca/v-usb-tutorial-software-only-usb-for-mega-tiny/">http://www.workinprogress.ca/v-usb-tutorial-software-only-usb-for-mega-tiny/</a></p>

<h3>41. v-usb and Arduino</h3>

<p><a href="https://www.hackster.io/rayburne/arduino-to-excel-using-v-usb-cbf701">https://www.hackster.io/rayburne/arduino-to-excel-using-v-usb-cbf701</a></p>

<p><a href="http://www.geek-workshop.com/forum.php?mod=viewthread&amp;tid=8578&amp;highlight=v-usb">http://www.geek-workshop.com/forum.php?mod=viewthread&amp;tid=8578&amp;highlight=v-usb</a></p>

<p><a href="http://coopermaa2nd.blogspot.tw/2011/10/v-usb-examples-for-arduino.html">http://coopermaa2nd.blogspot.tw/2011/10/v-usb-examples-for-arduino.html</a></p>

<p><a href="http://www.geek-workshop.com/thread-1137-1-1.html">http://www.geek-workshop.com/thread-1137-1-1.html</a></p>

<p><a href="http://www.geek-workshop.com/forum.php?mod=viewthread&amp;tid=15114&amp;highlight=v-usb">http://www.geek-workshop.com/forum.php?mod=viewthread&amp;tid=15114&amp;highlight=v-usb</a></p>

<h3>42.Set Timezone of the ArchLinux</h3>

<p>Change from UTC to Asia/Shanghai:</p>

<pre><code>$ timedatectl set-timezone Asia/Shanghai
</code></pre>

<h3>43. Empty all of the bash history</h3>

<p>Empty the bash history via:</p>

<pre><code>$ rm -f ~/.bash_history
</code></pre>

<h3>44. Specify qemu-binary in Packer.io</h3>

<p>Edit the json files:</p>

<pre><code>"builders":
[
{
"type": "qemu",
"qemu_binary" : "/usr/libexec/qemu-kvm.sh",
</code></pre>

<h3>45. apprmor.d</h3>

<pre><code>I modified /etc/apparmor.d/abstractions/libvirt-qemu to include the
backing store directory
</code></pre>

<h3>46. Recover UEFI bootloader</h3>

<p>After remove the mainline linux kernel, the archlinux is using the default kernel, but
the UEFI bootloader didn&rsquo;t notice this, following are the steps for recover the UEFI
bootloader.</p>

<pre><code>grub-install --target=x86_64-efi --efi-directory=/boot/EFI   --bootloader-id=arch_grub --recheck
cat ./EFI/loader/entries/arch.conf
</code></pre>

<p>Change the items into <code>initramfs-linux</code>.</p>

<p>If you cannot login to the system, you could start the machine via USB disk or
installation media, using <code>arch-chroot /mnt/ /bin/bash</code> for login to the chroot system,
then do the above operations.</p>

<h3>47. bonding</h3>

<p><a href="http://sanswers.com/tube/wotC5GZ2FV0/bonding-eth0-and-wlan0-on-arch-linux">http://sanswers.com/tube/wotC5GZ2FV0/bonding-eth0-and-wlan0-on-arch-linux</a></p>

<h3>48. Fix currpted zsh history</h3>

<p>history corrupted.</p>

<pre><code>$ mv .zsh_history .zsh_history_bad
$ strings .zsh_history_bad &gt; .zsh_history
$ fc -R .zsh_history
</code></pre>

<h3>49. pulp</h3>

<p>Using pulp for managing the repositories of RPM/Docker, etc.</p>

<h3>50. Chromium flash</h3>

<p>Install chromium-pepper-flash in aur.</p>

<h3>51. Install xfce4 on CentOS</h3>

<p>Install xfce in epel repository via:</p>

<pre><code># yum --enablerepo=epel -y groups install "Xfce" 
</code></pre>

<h3>52. LED controller</h3>

<p><a href="http://www.seeedstudio.com/recipe/402-smart-power-outlet.html">http://www.seeedstudio.com/recipe/402-smart-power-outlet.html</a>_</p>

<h3>53. Build php envs</h3>

<p><a href="https://medium.com/dev-tricks/apache-and-php-on-docker-44faef716150#.c8bguolj0">https://medium.com/dev-tricks/apache-and-php-on-docker-44faef716150#.c8bguolj0</a></p>
]]></content>
  </entry>
  
</feed>
