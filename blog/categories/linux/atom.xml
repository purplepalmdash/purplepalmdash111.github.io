<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2015-08-06T22:57:22+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Chromebook Kernel Issue]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/25/chromebook-kernel-issue/"/>
    <updated>2015-07-25T11:34:48+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/25/chromebook-kernel-issue</id>
    <content type="html"><![CDATA[<h3>Issues</h3>

<p>Chromebook could not support: <br/>
* bluetooth LAN
* NFS  <br/>
* ETC</p>

<p>So I re-compile the Chromebook kernel for soving these issue.</p>

<h3>Kernel Version</h3>

<pre><code># uname -r
3.10.18
</code></pre>

<h3>Get The SourceCode</h3>

<pre><code># git clone --branch v3.10.18 https://chromium.googlesource.com/chromiumos/third_party/kernel
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Try Raid0 Installation on Ubuntu]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/07/03/try-raid0-installation-on-ubuntu/"/>
    <updated>2015-07-03T10:58:55+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/07/03/try-raid0-installation-on-ubuntu</id>
    <content type="html"><![CDATA[<h3>Preparation</h3>

<p>Prepare the disks:</p>

<pre><code>[root:/home/juju/img]# mkdir Raid0
[root:/home/juju/img]# cd Raid0/
[root:/home/juju/img/Raid0]# ls
[root:/home/juju/img/Raid0]# qemu-img create -f qcow2 disk0.qcow2 10G
Formatting 'disk0.qcow2', fmt=qcow2 size=10737418240 encryption=off cluster_size=65536 
[root:/home/juju/img/Raid0]# qemu-img create -f qcow2 disk1.qcow2 10G
Formatting 'disk1.qcow2', fmt=qcow2 size=10737418240 encryption=off cluster_size=65536 
[root:/home/juju/img/Raid0]# qemu-img create -f qcow2 disk2.qcow2 10G
Formatting 'disk2.qcow2', fmt=qcow2 size=10737418240 encryption=off cluster_size=65536 
</code></pre>

<p>Prepare the Virtual Machine:  <br/>
<img src="/images/2015_07_03_11_06_03_658x441.jpg" alt="/images/2015_07_03_11_06_03_658x441.jpg" /></p>

<p><img src="/images/2015_07_03_11_06_57_556x325.jpg" alt="/images/2015_07_03_11_06_57_556x325.jpg" /></p>

<h3>Partition</h3>

<p><img src="/images/2015_07_03_11_12_18_615x311.jpg" alt="/images/2015_07_03_11_12_18_615x311.jpg" /></p>

<p><img src="/images/2015_07_03_11_15_30_476x216.jpg" alt="/images/2015_07_03_11_15_30_476x216.jpg" /></p>

<p><img src="/images/2015_07_03_11_15_36_384x205.jpg" alt="/images/2015_07_03_11_15_36_384x205.jpg" /></p>

<p><img src="/images/2015_07_03_11_18_30_499x265.jpg" alt="/images/2015_07_03_11_18_30_499x265.jpg" /></p>

<h3>Raid</h3>

<p>Configure the Software Raid0:</p>

<p><img src="/images/2015_07_03_11_19_31_441x260.jpg" alt="/images/2015_07_03_11_19_31_441x260.jpg" /></p>

<p><img src="/images/2015_07_03_11_20_41_655x244.jpg" alt="/images/2015_07_03_11_20_41_655x244.jpg" /></p>

<p><img src="/images/2015_07_03_11_22_43_728x243.jpg" alt="/images/2015_07_03_11_22_43_728x243.jpg" /></p>

<p>After Configuration of SoftRaid1, the screen displayed like:</p>

<p><img src="/images/2015_07_03_11_28_28_687x457.jpg" alt="/images/2015_07_03_11_28_28_687x457.jpg" /></p>

<p>Continue to install.</p>

<h3>Verify Raid.</h3>

<p>Use df and fdisk to verify the partition information:</p>

<pre><code>clouder@UbuntuRaid1:~$ df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/md0        9.3G  870M  7.9G  10% /
none            4.0K     0  4.0K   0% /sys/fs/cgroup
udev            235M  4.0K  235M   1% /dev
tmpfs            50M  440K   49M   1% /run
none            5.0M     0  5.0M   0% /run/lock
none            246M     0  246M   0% /run/shm
none            100M     0  100M   0% /run/user
clouder@UbuntuRaid1:~$ sudo fdisk -l
[sudo] password for clouder: 

Disk /dev/vda: 10.7 GB, 10737418240 bytes
255 heads, 63 sectors/track, 1305 cylinders, total 20971520 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00035942

   Device Boot      Start         End      Blocks   Id  System
/dev/vda1   *        2048    19922943     9960448   fd  Linux raid autodetect
/dev/vda2        19924990    20969471      522241    5  Extended
/dev/vda5        19924992    20969471      522240   fd  Linux raid autodetect

Disk /dev/vdb: 10.7 GB, 10737418240 bytes
255 heads, 63 sectors/track, 1305 cylinders, total 20971520 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000715e9

   Device Boot      Start         End      Blocks   Id  System
/dev/vdb1   *        2048    19922943     9960448   fd  Linux raid autodetect
/dev/vdb2        19924990    20969471      522241    5  Extended
/dev/vdb5        19924992    20969471      522240   fd  Linux raid autodetect

Disk /dev/md0: 10.2 GB, 10190979072 bytes
2 heads, 4 sectors/track, 2488032 cylinders, total 19904256 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000

Disk /dev/md0 doesn't contain a valid partition table

Disk /dev/md1: 534 MB, 534446080 bytes
2 heads, 4 sectors/track, 130480 cylinders, total 1043840 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000

Disk /dev/md1 doesn't contain a valid partition table
</code></pre>

<p>Verify the raid status:</p>

<pre><code>root@UbuntuRaid1:/etc/initramfs-tools/conf.d# cat /proc/mdstat 
Personalities : [linear] [multipath] [raid0] [raid1] [raid6] [raid5] [raid4] [raid10] 
md1 : active raid1 vda5[0] vdb5[1]
      521920 blocks super 1.2 [2/2] [UU]

md0 : active raid1 vda1[0] vdb1[1]
      9952128 blocks super 1.2 [2/2] [UU]

unused devices: &lt;none&gt;
</code></pre>

<p>Query the status of SoftRaid1:</p>

<pre><code>root@UbuntuRaid1:/etc/initramfs-tools/conf.d# sudo mdadm --query --detail /dev/md0
/dev/md0:
        Version : 1.2
  Creation Time : Fri Jul  3 11:24:46 2015
     Raid Level : raid1
     Array Size : 9952128 (9.49 GiB 10.19 GB)
  Used Dev Size : 9952128 (9.49 GiB 10.19 GB)
   Raid Devices : 2
  Total Devices : 2
    Persistence : Superblock is persistent

    Update Time : Fri Jul  3 11:46:19 2015
          State : clean 
 Active Devices : 2
Working Devices : 2
 Failed Devices : 0
  Spare Devices : 0

           Name : UbuntuRaid1:0  (local to host UbuntuRaid1)
           UUID : bc091921:c198c219:7162e35c:bfff3c4e
         Events : 19

    Number   Major   Minor   RaidDevice State
       0     253        1        0      active sync   /dev/vda1
       1     253       17        1      active sync   /dev/vdb1
</code></pre>

<h3>Remove One Disk</h3>

<p>Remove one, and see if it could be startup.</p>

<p>Result:  <br/>
Done, it could start into the system.</p>

<pre><code>clouder@UbuntuRaid1:~$ cat /proc/mdstat 
Personalities : [linear] [multipath] [raid0] [raid1] [raid6] [raid5] [raid4] [raid10] 
md1 : active (auto-read-only) raid1 vda5[1]
      521920 blocks super 1.2 [2/1] [_U]

md0 : active raid1 vda1[1]
      9952128 blocks super 1.2 [2/1] [_U]

unused devices: &lt;none&gt;
</code></pre>

<h3>Add A New Empty Disk</h3>

<p>Add a new disk into the system, and first partition.</p>

<pre><code>$ sudo fdisk -l 

Disk /dev/vdb: 10.7 GB, 10737418240 bytes
16 heads, 63 sectors/track, 20805 cylinders, total 20971520 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000

Disk /dev/vdb doesn't contain a valid partition table
</code></pre>

<p>Clone the partition table from the vda to the newly added partion:</p>

<pre><code>$ sudo sfdisk -d /dev/vda &gt; vda.desc
$ cat vda.desc 
$ sudo sfdisk /dev/vdb&lt;./vda.desc
</code></pre>

<p>Now Add the new disk for usage:</p>

<pre><code>clouder@UbuntuRaid1:~$ cat /proc/mdstat 
Personalities : [linear] [multipath] [raid0] [raid1] [raid6] [raid5] [raid4] [raid10] 
md1 : active (auto-read-only) raid1 vda5[1]
      521920 blocks super 1.2 [2/1] [_U]

md0 : active raid1 vda1[1]
      9952128 blocks super 1.2 [2/1] [_U]

unused devices: &lt;none&gt;
clouder@UbuntuRaid1:~$ sudo mdadm --manage /dev/md0 --add /dev/vdb1
mdadm: added /dev/vdb1
clouder@UbuntuRaid1:~$ sudo mdadm --manage /dev/md1 --add /dev/vdb5
mdadm: added /dev/vdb5
clouder@UbuntuRaid1:~$ cat /proc/mdstat 
Personalities : [linear] [multipath] [raid0] [raid1] [raid6] [raid5] [raid4] [raid10] 
md1 : active raid1 vdb5[2] vda5[1]
      521920 blocks super 1.2 [2/1] [_U]
        resync=DELAYED

md0 : active raid1 vdb1[2] vda1[1]
      9952128 blocks super 1.2 [2/1] [_U]
      [===&gt;.................]  recovery = 16.6% (1662144/9952128) finish=1.8min speed=75552K/sec

unused devices: &lt;none&gt;
</code></pre>

<h3>Known Bugs</h3>

<p>Error and Solution:</p>

<pre><code>error:  Diskfilter writes are not supported

Edit :/etc/grub.d/10_linux

Replace 'quick_boot="1"' with 'quick_boot="0"'

Then :

sudo update-grub
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Tips(2)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/29/linux-tips-2/"/>
    <updated>2015-06-29T09:27:17+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/29/linux-tips-2</id>
    <content type="html"><![CDATA[<h3>1. XenCenter Installation</h3>

<p>Just use your windows&rsquo;s browser point to your XenServer IP Address, Download the XenCenter, and install it.</p>

<p>Update Some tools on XenServer:</p>

<pre><code>$ vim /etc/yum.repos.d/CentOS-Base.repo
...
enabled=1
...
$ yum install -y lm_sensors
</code></pre>

<p>After installation of lm_sensors you could see more detailed information on XenServer.</p>

<h3>2. Disable Specified Repository</h3>

<p>Since citrix have no data in its repository, simply disable it.</p>

<pre><code>$ yum update --disablerepo=citrix
</code></pre>

<h3>3. Yum Shell</h3>

<pre><code>yum shell
remove ffmpeg-libpostproc
remove ffmpeg
install ffmpeg-compat
run
</code></pre>

<h3>4. Install lm_sensors In XenServer</h3>

<p>The default lm_sensors could not be insalled due to dependency errors, so we download the source code from lm_sensors website and manually build and install it:</p>

<pre><code>$ wget http://dl.lm-sensors.org/lm-sensors/releases/lm_sensors-3.4.0.tar.bz2
$ tar xzvf lm_sensors-3.4.0.tar.bz2
$ cd lm_sensors
$ yum install -y gcc make flex bison 
$ make &amp;&amp; make install
$ export PATH=/usr/local/bin:$PATH
$ sensors-detect
$ sensors
</code></pre>

<p>In 79 machine, sensors won&rsquo;t printout cpu fan, solved by:</p>

<pre><code>$ modprobe it87 force_id=0x8728
</code></pre>

<p>Or configure the modprobe.d:</p>

<pre><code>[root:/etc/modprobe.d]# cat it87.conf 
options it87 force_id=0x8603

[root:/etc/modprobe.d]# pwd
/etc/modprobe.d
</code></pre>

<h3>5. Detect an AMD Chipset</h3>

<p>First using <code>sensors-detect</code> for detecting the sensors, the result is listed as:</p>

<pre><code>Now follows a summary of the probes I have just done.

Driver `w83627ehf':
  * ISA bus, address 0x290
    Chip `Nuvoton W83677HG-I (NCT5572D/NCT6771F/NCT6772F/NCT6775F) Super IO Sensors' (confidence: 9)

Driver `k10temp' (autoloaded):
  * Chip `AMD Family 12h and 14h thermal sensors' (confidence: 9)
</code></pre>

<p>Now go to the modules directory for finding out the corresponding driver:</p>

<pre><code>[root@xenserver-WolfHunter 3.10.0+2]# find . | grep -i w83
./kernel/drivers/hwmon/w83795.ko
./kernel/drivers/hwmon/w83627hf.ko
./kernel/drivers/hwmon/w83l786ng.ko
./kernel/drivers/hwmon/w83792d.ko
./kernel/drivers/hwmon/w83l785ts.ko
./kernel/drivers/hwmon/w83791d.ko
./kernel/drivers/hwmon/w83793.ko
./kernel/drivers/hwmon/w83781d.ko
./kernel/drivers/hwmon/w83627ehf.ko
[root@xenserver-WolfHunter 3.10.0+2]# pwd
/lib/modules/3.10.0+2
[root@xenserver-WolfHunter 3.10.0+2]# modprobe w83627ehf.ko
</code></pre>

<p>Now you could detect more infos, add to automatically:</p>

<pre><code>[root@xenserver-WolfHunter modprobe.d]# cat w83627ehf.conf
#!/bin/sh 
/sbin/insmod /lib/modules/3.10.0+2/kernel/drivers/hwmon/w83627ehf.ko
</code></pre>

<h3>6. Headless Ubuntu</h3>

<p>Headless Ubuntu, for updating grub.</p>

<pre><code>Add: GRUB_RECORDFAIL_TIMEOUT = 15 in /etc/default/grub, and run "sudo update-grub". You can change the 15 to any arbitrary number of seconds that you like.
</code></pre>

<h3>7.Joggler Bootloader Configuration</h3>

<p>Notice there are 2 systems available on Joggler.</p>

<pre><code>[dash@/run/media/dash/linux-boot]$ cat grub.cfg
loadfont /unicode.pf2
terminal_output gfxterm
set timeout=5
menuentry "Ubuntu 12.04 LTS (Precise) - 3.2.32joggler1" {
  # text mode
  #linux /vmlinuz-3.2.32joggler1 root=LABEL=linux-root 3 ro text pci=routeirq
  # Graphical mode
  linux /vmlinuz-3.2.32joggler1 root=LABEL=linux-root 3 ro pci=routeirq
  initrd /initrd.img-3.2.32joggler1
}
###############Xubuntu#####################3
#menuentry "XUbuntu 12.04 LTS (Precise) - 3.2.32joggler1" {
#  linux /vmlinuz-3.2.32joggler1 root=LABEL=Xubuntu ro quiet splash 
#  initrd /initrd.img-3.2.32joggler1
}
</code></pre>

<h3>8. Use Joggler As a DigitalFrame</h3>

<pre><code>#!/bin/sh
#
# Script to run Digital Picture Frame using Feh
# drware@thewares.net
#

# Change number below to the duration, in seconds
# for each photo to be displayed
DELAY="5"

# hide the cursor after 15 seconds
#/usr/bin/unclutter -idle 15 &amp;

# Start slide show
# /usr/bin/feh --quiet --recursive --randomize --full-screen \ --slideshow-delay $DELAY /home/dash/800480/
/usr/bin/feh --hide-pointer -D $DELAY --quiet --recursive --randomize --full-screen \ --slideshow-delay $DELAY /home/dash/800480 &amp;

# Phone home and sync
# /home/dsl/frame/rsync.sh

exit 0
</code></pre>

<h3>9. Resolving git conflicts</h3>

<p>Once you installed meld or other tools, using following commands.</p>

<pre><code>$ git mergetool
</code></pre>

<h3>10. Enlarge Volume</h3>

<p>Enlarge the qemu disk via:</p>

<pre><code>$ sudo qemu-img resize abc.qcow2 +200GB
</code></pre>

<p>Enlarge the disk via following command:</p>

<pre><code>[root@fuel ~]# df -h
Filesystem            Size  Used Avail Use% Mounted on
/dev/mapper/os-root   9.6G  976M  8.1G  11% /
/dev/mapper/os-var     27G  5.4G   20G  22% /var
[root@fuel ~]# lvs
  LV           VG   Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root         os   -wi-ao----  9.78g                                                    
  swap         os   -wi-ao----  2.94g                                                    
  var          os   -wi-ao---- 26.66g       
</code></pre>

<p>Use gparted livecd for enlarge the disk, now you could enjoy the whole 300GiB disk size.</p>

<p>Resize the var partition:</p>

<pre><code>Disk /dev/mapper/os-var: 28.6 GB, 28621930496 bytes
255 heads, 63 sectors/track, 3479 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
[root@fuel ~]# lvextend -L+50G /dev/mapper/os-var
  Size of logical volume os/var changed from 26.66 GiB (853 extents) to 76.66 GiB (2453 extents).
  Logical volume var successfully resized
######Reboot to gdisk iso, and resize2fs.   
# resize2fs /dev/mapper/os-var
</code></pre>

<h3>11. gpg Generation</h3>

<pre><code>$ apt-get install -y rng-tools
$ rngd -r /dev/urandom
$ gpg --gen-key
$ gpg --list-secret-keys
$ gpg-agent --homedir /home/dash/.gnupg --use-standard-socket --daemon
$ sudo apt-get install gnupg
</code></pre>

<h3>12. Syslogd related</h3>

<p>Redirect bash script&rsquo;s output to syslogd:   <br/>
<a href="http://urbanautomaton.com/blog/2014/09/09/redirecting-bash-script-output-to-syslog/">http://urbanautomaton.com/blog/2014/09/09/redirecting-bash-script-output-to-syslog/</a></p>

<p>Then limit the syslogd activity:</p>

<p>via logrotate, syslogd don&rsquo;t care about the log file size.</p>

<pre><code>So in the end the top portion of my /etc/logrotate.conf file looks like this:

size 250M
rotate 2
create
#compress
include /etc/logrotate.d
</code></pre>

<h3>13. Brake</h3>

<pre><code>http://www.miroslavnovak.com/qemu-brake_en.php
</code></pre>

<h3>14. install specified pip version</h3>

<pre><code>$ sudo pip install "PyOpenSSL&gt;=0.13"
</code></pre>

<h3>15. Tips for using vFense</h3>

<pre><code>   57  sudo pip install "PyOpenSSL&gt;=0.13"
   58  apt-cache search libffi
   59  sudo apt-get install -y libffi-dev
dash@fenseServer:~$ sudo mkdir /usr/share/rethinkdb
</code></pre>

<h3>16. Cgroup error</h3>

<pre><code>
cloudstack4.5.1 在centos7.1 上的 bug 
此bug 会导致 系统vm state 状态获取不到
在agent的log中获取到的错误信息为
Controller 'cpuacct' is not wanted, but 'cpu' is co-mounted: Invalid argument

解决方法

注释这个文件中的这行 /usr/lib64/python2.7/site-packages/cloudutils/serviceConfig.py
cfo.addEntry("cgroup_controllers", "[\"cpu\"]")
和这个文件中的这行 /etc/libvirt/qemu.conf
cgroup_controllers=["cpu"]
重启libvirtd服务

官网bug连接：https://issues.apache.org/jira/browse/CLOUDSTACK-8443
</code></pre>

<h3>17. PXE Boot Debian:</h3>

<pre><code>Install:   
http://backreference.org/2013/12/23/diskless-iscsi-boot-with-pxe-howto/
iscsi:    
http://www.sysprobs.com/guide-how-to-create-iscsi-storage-disks-freenas-08
Trouble Shooting: Use the latest version!!!
https://www.howtoforge.com/community/threads/debian-boot-over-iscsi-problem.67536/#post-321516
iscsi and kvm:
https://www.berrange.com/posts/2010/05/05/provisioning-kvm-virtual-machines-on-iscsi-the-hard-way-part-2-of-2/
</code></pre>

<h3>18. Quickly Connect to RDP</h3>

<pre><code># ssh -L 2333:10.0.0.2:3389 192.168.10.187 -l root
# rdesktop -u YourUseName -p YourPassword localhost:2333 -g 1400x800
</code></pre>

<h3>18. nginx enable directory displaying and follow links:</h3>

<p>On CentOS 7, do following:</p>

<pre><code>$ sudo vim /etc/nginx/nginx.conf
http {
        disable_symlinks off;
}

server {
        root         /var/www/html;

        location / {
                        autoindex on;
        }
</code></pre>

<p>Restart the nginx service now you could get the local directory avaiable in browser.</p>

<h3>20. Get Back the passwd</h3>

<p>In Grub, add <code>single</code> at the <code>linux   /boot/vmlinuz-</code>&hellip;&hellip;</p>

<p>Press F10, and now you can do whatever you want to do.</p>

<h3>21. Enable Nested KVM</h3>

<pre><code># virsh edit VM_NAME
&lt;vcpu placement='static' cpuset='0-3'&gt;4&lt;/vcpu&gt;
Also change the cpu model.  
&lt;cpu&gt;
....
&lt;/cpu&gt; 
remove the tsc related item.   
</code></pre>

<h3>22. Restart Windows Under CMD</h3>

<p>Specify the timeout(5 seconds) under the cmd line:</p>

<pre><code># shutdown /r /t 5
</code></pre>

<h3>23. Cleanup Windows7 Disk</h3>

<p>Right click the disk, and select <code>Disk Cleanup</code>, then select <code>Clean up system files</code>, then your winsxs directory will be cleaned, thus saved your partition volumn.</p>

<h3>24. vim spell checking</h3>

<pre><code>: set spell spelllang=en_us
</code></pre>

<h3>25. Startup Synergy At System Startup</h3>

<pre><code># vim /etc/lightdm/lightdm.conf
greeter-setup-script=/usr/bin/synergys --config /home/dash/mysynergy.conf
</code></pre>

<h3>26. Install Cobbler On Ubuntu</h3>

<pre><code># wget -qO - http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/xUbuntu_14.04/Release.key | sudo apt-key add -
OK
# sudo add-apt-repository "deb http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/xUbuntu_14.04/ ./"
# apt-get update
</code></pre>

<h3>27. Install restricted extra packages</h3>

<p>Install it via:</p>

<pre><code> # sudo apt-get install ubuntu-restricted-extras
</code></pre>

<h3>28. View Allocated DHCP Address</h3>

<pre><code>$ more /var/lib/dhcpd/dhcpd.leases
</code></pre>

<h3>29. apt-mirror for launchpad</h3>

<p>The steps are the same as the ordinary repository.</p>

<pre><code># vim  /etc/apt/mirror.list
 deb http://ppa.launchpad.net/landscape/15.01/ubuntu trusty main
# apt-mirror
</code></pre>

<h3>30. Specify architecture of sources.list</h3>

<p>Only include amd64:</p>

<pre><code>$ sudo vim /etc/apt.sources.list
deb [arch=amd64] http://192.168.0.79/landscape/15.01/ubuntu/ trusty main
</code></pre>

<h3>31. Use Cobbler Repository</h3>

<pre><code>[root@localhost yum.repos.d]# cat cobbler.repo 
[core-0]
name=core-0
baseurl=http://10.9.10.1/ks_mirror/CentOS-6.5-x86_64
enabled=1
gpgcheck=0
priority=1
</code></pre>

<h3>32. Jenkins Worktips</h3>

<p>Worktips:</p>

<pre><code># visudo
jenkins ALL=(ALL) NOPASSWD:ALL
</code></pre>

<h3>33. Query packages</h3>

<pre><code>$ yum whatprovides "*/mkpasswd"
-or-
$ repoquery -q --file */mkpasswd
</code></pre>

<h3>34. Encrypt kickstart used passwd</h3>

<pre><code># perl -e "print crypt('engine123','sa')"
saWbOtynpFXBA%
</code></pre>

<h3>35. Disable ssh -X warning</h3>

<p>Problem:</p>

<pre><code>Couldn't connect to accessibility bus: Failed to connect to socket /tmp/dbus-*
</code></pre>

<p>Solution:</p>

<pre><code># vim ~/.bashrc
export NO_AT_BRIDGE=1
</code></pre>

<h3>36. Manually add gpg key</h3>

<pre><code># wget http://download.opensuse.org/repositories/home:/libertas-ict:/cobbler26/xUbuntu_15.04/Release.key
# cat Release.key |sudo apt-key add -
</code></pre>

<h3>37. Quick Setup the CentOS7 Network</h3>

<pre><code># cat /etc/sysconfig/network-scripts/ifcfg-eth0
# Generated by dracut initrd
DEVICE="eth0"
ONBOOT=yes
NETBOOT=yes
UUID="99c6b60e-1932-46f9-a86a-d9836f42cecb"
IPV6INIT=yes
BOOTPROTO=static
IPADDR=10.9.10.100
GATEWAY=10.9.10.1
TYPE=Ethernet
NAME="eth0"
DNS1=223.5.5.5
DNS2=180.76.76.76
</code></pre>

<h3>38. GPG Key Error</h3>

<pre><code>Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
GPG key retrieval failed: [Errno 14] curl#37 - "Couldn't open file
/etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7"
</code></pre>

<p>Solution:</p>

<pre><code># wget http://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-7
# rpm --import RPM-GPG-KEY-EPEL-7 
</code></pre>

<h3>39. Sync REpository</h3>

<pre><code>[root@SpaceWalker ~]# spacewalk-repo-sync -c centos7-x86_64 --url=file:///var/distro-trees/centos7_64/
======================================
| Channel: centos7-x86_64
======================================

Repo URL: file:///var/distro-trees/centos7_64/
Packages in repo:              8652
No new packages to sync.
Repo file:///var/distro-trees/centos7_64/ has comps file 0e6e90965f55146ba5025ea450f822d1bb0267d0299ef64dd4365825e6bad995-c7-x86_64-comps.xml.gz.
Repo file:///var/distro-trees/centos7_64/ has 0 errata.
Sync completed.
Total time: 0:01:58
</code></pre>

<h3>40. Resuming until you success</h3>

<pre><code># cat ./abc.sh
until sudo xxxxxxx
do
    do something
done
# ./abc.sh
</code></pre>

<h3>41. pacman/yaourt</h3>

<p>Ignore the pacman PGP check:</p>

<pre><code>$ sudo vim /etc/pacman.conf
SigLevel = Never
</code></pre>

<p>yaourt use disable PGP options:</p>

<pre><code>yaourt --m-arg "--skipchecksums --skippgpcheck" -S xxxxxx
</code></pre>

<h3>42. Install pandoc</h3>

<p>Add 3rd-party repository</p>

<pre><code># vim /etc/pacman.conf
[haskell-core]
Server = http://xsounds.org/~haskell/core/x86_64/
</code></pre>

<p>With the above ignore PGP settting, run <code>proxychains pacman -Sy</code>.</p>

<p>Then you type-in <code>proxychain pacman -S haskell-pandoc</code> for installing the pandoc.</p>

<h3>43. Change Docker Image Save Directory</h3>

<p>Only works under CentOS:</p>

<pre><code># cat /etc/sysconfig/docker
other_args='-g /home/xxxxxxx/dockerimage'
``

### 44. Define locale under CentOS
</code></pre>

<h1>localedef -v -c -i en_US -f UTF-8 en_US.UTF-8</h1>

<pre><code>
### 45. Install nethogs in CentOS 7 
</code></pre>

<h1>yum install libpcap-devel -y</h1>

<h1>rpm -ivh <a href="http://cdn.kanachan.me.uk/dl/rpms/nethogs/nethogs-0.8.0-1.el6.x86_64.rpm">http://cdn.kanachan.me.uk/dl/rpms/nethogs/nethogs-0.8.0-1.el6.x86_64.rpm</a></h1>

<pre><code>
### 46. CS7 Related
</code></pre>

<p>[root@spacewalkercs7 zones]# cat db.spacewalkercs7
;
;
$TTL 604800
@       IN      SOA     spacewalkercs7. root.spacewalker.cs. (
                                3               ;Serial
                                604800          ;Refresh
                                86400           ;Retry
                                2419200         ;Expire
                                604800 )        ;Negative Cache TTL
;
; name servers - NS records
      IN      NS      spacewalkercs7.</p>

<p>; name servers  - A records
spacewalkercs7.         IN      A       10.9.10.12
[root@spacewalkercs7 zones]# pwd
/etc/named/zones
[root@spacewalkercs7 zones]# cat /etc/named.conf
//
// named.conf
//
// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS
// server as a caching only nameserver (as a localhost DNS resolver only).
//
// See /usr/share/doc/bind*/sample/ for example named configuration files.
//</p>

<p>options {
        listen-on port 53 { 127.0.0.1; 10.9.10.12; };
        listen-on-v6 port 53 { ::1; };
        directory       &ldquo;/var/named&rdquo;;
        dump-file       &ldquo;/var/named/data/cache_dump.db&rdquo;;
        statistics-file &ldquo;/var/named/data/named_stats.txt&rdquo;;
        memstatistics-file &ldquo;/var/named/data/named_mem_stats.txt&rdquo;;
        allow-query     { localhost; 10.9.10.0/24;};
        allow-transfer     { localhost; 10.9.10.0/24;};</p>

<pre><code>    /* 
     - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
     - If you are building a RECURSIVE (caching) DNS server, you need to enable 
       recursion. 
     - If your recursive DNS server has a public IP address, you MUST enable access 
       control to limit queries to your legitimate users. Failing to do so will
       cause your server to become part of large scale DNS amplification 
       attacks. Implementing BCP38 within your network would greatly
       reduce such attack surface 
    */
    recursion yes;

    dnssec-enable yes;
    dnssec-validation yes;
    dnssec-lookaside auto;

    /* Path to ISC DLV key */
    bindkeys-file "/etc/named.iscdlv.key";

    managed-keys-directory "/var/named/dynamic";

    pid-file "/run/named/named.pid";
    session-keyfile "/run/named/session.key";
</code></pre>

<p>};</p>

<p>logging {
        channel default_debug {
                file &ldquo;data/named.run&rdquo;;
                severity dynamic;
        };
};</p>

<p>zone &ldquo;.&rdquo; IN {
        type hint;
        file &ldquo;named.ca&rdquo;;
};</p>

<p>zone &ldquo;spacewalkercs7&rdquo; {
        type master;
        file &ldquo;/etc/named/zones/db.spacewalkercs7&rdquo;;
};</p>

<p>include &ldquo;/etc/named.rfc1912.zones&rdquo;;
include &ldquo;/etc/named.root.key&rdquo;;</p>

<p>[root@spacewalkercs7 zones]# cat /etc/dhcp/dhcpd.conf
#</p>

<h1>DHCP Server Configuration file.</h1>

<h1>see /usr/share/doc/dhcp*/dhcpd.conf.example</h1>

<h1>see dhcpd.conf(5) man page</h1>

<p>#
option domain-name &ldquo;server.world&rdquo;;</p>

<h1>specify name server&rsquo;s hostname or IP address</h1>

<p>option domain-name-servers dlp.server.world;</p>

<h1>default lease time</h1>

<p>default-lease-time 600;</p>

<h1>max lease time</h1>

<p>max-lease-time 7200;</p>

<h1>this DHCP server to be declared valid</h1>

<p>authoritative;</p>

<h1>specify network address and subnet mask</h1>

<p>subnet 10.9.10.0 netmask 255.255.255.0 {
    # specify the range of lease IP address
    range dynamic-bootp 10.9.10.200 10.9.10.254;
    # specify broadcast address
    option broadcast-address 10.9.10.255;
    # specify default gateway
    option routers 10.9.10.1;
    # Specify default dns server
    option domain-name-servers 10.9.10.12;
}</p>

<pre><code>
### 47. On DNS Server
</code></pre>

<p><a href="http://www.unixmen.com/setting-dns-server-centos-7/">http://www.unixmen.com/setting-dns-server-centos-7/</a>
<a href="https://www.digitalocean.com/community/tutorials/how-to-configure-bind-as-a-private-network-dns-server-on-centos-7">https://www.digitalocean.com/community/tutorials/how-to-configure-bind-as-a-private-network-dns-server-on-centos-7</a>
```</p>

<h3>48. Install X windows under CentOS</h3>

<pre><code># yum groupinstall 'X Window System' -y
</code></pre>

<h3>49. Quickly Create/Start KVM Machine</h3>

<pre><code># virsh dumpxml VM_A&gt;A.xml
# vim A.xml
Change its name/uuid/disk file
# virsh start A.xml
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use 8188eu and Hostapd for Setting Soft-AP Router]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/11/use-8188eu-and-hostapd-for-setting-soft-ap-router/"/>
    <updated>2015-06-11T16:25:51+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/11/use-8188eu-and-hostapd-for-setting-soft-ap-router</id>
    <content type="html"><![CDATA[<h3>HostAPD</h3>

<p>Install HostAPD via following commands:</p>

<pre><code>$ sudo apt-get autoremove hostapd
$ wget https://github.com/jenssegers/RTL8188-hostapd/archive/v2.0.tar.gz
$ tar -zxvf v2.0.tar.gz
$ cd RTL8188-hostapd-2.0/hostapd
$ sudo make
$ sudo make install
$ sudo service hostapd restart
[ ok ] Stopping advanced IEEE 802.11 management: hostapd.
[ ok ] Starting advanced IEEE 802.11 management: hostapd.
</code></pre>

<h3>dhcpd</h3>

<p>We need a dhcp server for assigning a new IP address to the clients who joins the ap:  <br/>
An example file is listed as following:</p>

<pre><code>ddns-update-style none;
ignore client-updates;
authoritative;
option local-wpad code 252 = text;

subnet
10.0.0.0 netmask 255.255.255.0 {
# --- default gateway
option routers
10.0.0.1;
# --- Netmask
option subnet-mask
255.255.255.0;
# --- Broadcast Address
option broadcast-address
10.0.0.255;
# --- Domain name servers, tells the clients which DNS servers to use.
option domain-name-servers
10.0.0.1, 8.8.8.8, 8.8.4.4;
option time-offset
0;
range 10.0.0.3 10.0.0.13;
default-lease-time 1209600;
max-lease-time 1814400;
}
</code></pre>

<h3>WLAN0 Network</h3>

<p>The WLAN0 equipment network should be configured as following:</p>

<pre><code>$ cat /etc/network/interface
# wireless wlan0
allow-hotplug wlan0
iface wlan0 inet static
address 10.0.70.1
netmask 255.255.255.0
</code></pre>

<p>So next time you reboot the computer, it will automatically get the ip address for wlan0.</p>

<h3>Enable the ip forwarding</h3>

<p>Using following 2 commands for enabling your AP.</p>

<pre><code>$ sudo iptables -t nat -A POSTROUTING -s 10.0.70.0/24 ! -d 10.0.70.0/24  -j MASQUERADE
$ sudo dhcpd wlan0
</code></pre>

<p>I add these two lines into the start file of awesome(My desktop environment).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef TroubleShooting 2]]></title>
    <link href="http://purplepalmdash.github.io/blog/2015/06/08/chef-troubleshooting-2/"/>
    <updated>2015-06-08T19:43:13+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2015/06/08/chef-troubleshooting-2</id>
    <content type="html"><![CDATA[<p>The ssl checking for adding new nodes is still a horrible procedure, following shows the correct steps for adding new node:</p>

<p>On Chef Workstation, add node via its ip address rather than via its hostname:</p>

<pre><code>$ knife bootstrap 172.16.0.12 -x username_on_12 -P password_on_12 --sudo
</code></pre>

<p>The example knife.rb file should be written like following:</p>

<pre><code>current_dir = File.dirname(__FILE__)
log_level                :info
log_location             STDOUT
node_name                "nodename"
client_key               "#{current_dir}/node.pem"
validation_client_name   "nodename"
validation_key           "#{current_dir}/node_org.pem"
chef_server_url          "https://tmpChefServer/organizations/nodename"
syntax_check_cache_path  "#{ENV['HOME']}/.chef/syntaxcache"
cookbook_path            ["#{current_dir}/../cookbooks"]
</code></pre>

<p>On Chef Client, first fetching the ssl, then manually passed the verification.</p>

<pre><code>$ knife ssl fetch --config /etc/chef/client.rb
$ chef-client -l debug -S https://ChefServer/organizations/xxxxx -K /xxx/xxx/xxxxx.pem
</code></pre>

<p>On Chef Server, bootstrap again via the same command, now you could work.</p>
]]></content>
  </entry>
  
</feed>
