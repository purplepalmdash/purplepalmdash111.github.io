<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Archlinux | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/archlinux/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2016-03-11T21:53:11+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Graphic Card on ArchLinux]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/06/24/graphic-card-on-archlinux/"/>
    <updated>2014-06-24T09:52:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/06/24/graphic-card-on-archlinux</id>
    <content type="html"><![CDATA[<p>Since I got several Intel powered PC, It&rsquo;s is essential to know how graphics card works, thus I could get the fastest performance of my PC or Server.</p>

<h3>Detect Graphics Card</h3>

<p>Use lspci we could get the output of all PCI equipments, get the VGA related information via:</p>

<pre><code>$ lspci | grep VGA
00:02.0 VGA compatible controller: Intel Corporation 2nd Generation Core Processor Family Integrated Graphics Controller (rev 09)
</code></pre>

<p>To know the detailed information of this equipment:</p>

<pre><code>$ lspci -v -s 00:02.0
00:02.0 VGA compatible controller: Intel Corporation 2nd Generation Core Processor Family Integrated Graphics Controller (rev 09) (prog-if 00 [VGA controller])
    Subsystem: Hewlett-Packard Company Device 161c
    Flags: bus master, fast devsel, latency 0, IRQ 57
    Memory at d4000000 (64-bit, non-prefetchable) [size=4M]
    Memory at c0000000 (64-bit, prefetchable) [size=256M]
    I/O ports at 4000 [size=64]
    Expansion ROM at &lt;unassigned&gt; [disabled]
    Capabilities: &lt;access denied&gt;
    Kernel driver in use: i915
    Kernel modules: i915
</code></pre>

<p><code>Memory at c0000000 (64-bit, prefetchable) [size=256M]</code> shows the Intel Video Card with 256MB of video RAM. Or you can get the detailed via : <code>sudo lspci -v  | more</code>.</p>

<p>If you want the graphic ways, simply install following tool:</p>

<pre><code>$ sudo pacman -S hardinfo
$ hardinfo
</code></pre>

<p>The picture shows as following:</p>

<p><img src="/images/hardinfo.jpg" alt="/images/hardinfo.jpg" /></p>

<p>lshw could also shows the result:</p>

<pre><code>$ sudo lshw -class display
  *-display               
       description: VGA compatible controller
       product: 2nd Generation Core Processor Family Integrated Graphics Controller
       vendor: Intel Corporation
       physical id: 2
       bus info: pci@0000:00:02.0
       version: 09
       width: 64 bits
       clock: 33MHz
       capabilities: msi pm vga_controller bus_master cap_list rom
       configuration: driver=i915 latency=0
       resources: irq:57 memory:d4000000-d43fffff memory:c0000000-cfffffff ioport:4000(size=64)
</code></pre>

<h3>Get the config from Intel Doc</h3>

<p>Refer to following link:  <br/>
<a href="http://en.wikipedia.org/wiki/Comparison_of_Intel_graphics_processing_units">http://en.wikipedia.org/wiki/Comparison_of_Intel_graphics_processing_units</a>, for example, My cpu is Intel&reg; Core&trade; i5-2520M , then find the &ldquo;Core i5-2xxxM&rdquo;, it shows the graphic card is HD Graphics 3000.</p>

<h3>Configure Intel Graphics Card</h3>

<p>Install driver:</p>

<pre><code>$ sudo pacman -S xf86-video-intel
</code></pre>

<p>32-bit 3D Support:</p>

<pre><code>$ sudo pacman -S lib32-intel-dri
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CURL Error in Yaourt]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/04/03/curl-error-in-yaourt/"/>
    <updated>2014-04-03T11:20:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/04/03/curl-error-in-yaourt</id>
    <content type="html"><![CDATA[<p>When downloading package, the yaourt complains:<br /></p>

<pre><code>    yaourt curl: (60) SSL certificate problem
</code></pre>

<p>The solution is via:<br />
Add following lines at the top of the pkg build file:<br /></p>

<pre><code>    DLAGENTS=("https::/usr/bin/curl -k -o %o %u")
</code></pre>

<p>Then restart the yaourt, you can pass through the building.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic ArchLinux Setting(i386)]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/03/27/basic-archlinux-setting-i386/"/>
    <updated>2014-03-27T19:10:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/03/27/basic-archlinux-setting-i386</id>
    <content type="html"><![CDATA[<h3>ArchLinux Installation</h3>

<p>First we download the iso from the archlinux.org, then using iso to boot. Partition it into many disks as you like.<br /></p>

<p>Now begin to install:</p>

<pre><code>    $ mount /dev/sda2 /mnt
    $ swapon /dev/sda1
    $ pacstrap /mnt base
    $ genfstab -p /mnt &gt;&gt; /mnt/etc/fstab
</code></pre>

<p>Chroot into the newly installed system:<br /></p>

<pre><code>    $ arch-chroot /mnt
    $ ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
    $ vi /etc/locale.gen
    # enable en_US related
    $ locale-gen
    $ vi /etc/mkinitcpio.conf
    # we can remain the default, notice if you use usb, enable usb related. 
    $ mkinitcpio -p linux
    $ passwd root
</code></pre>

<p>Grub install and configure:<br /></p>

<pre><code>    $ pacman -S grub
    $ grub-install --target=i386-pc --recheck --debug /dev/sda
    $ grub-install --target=i386-pc --recheck --debug /dev/sda
</code></pre>

<p>Install vim:<br /></p>

<pre><code>    $ pacman -S vim
</code></pre>

<p>Install dhcpcd:<br /></p>

<pre><code>    $ pacman -S dhcpcd
    $ systemctl enable dhcpcd@enp0s3
    $ pacman -S net-tools # for using ifconfig
</code></pre>

<p>Install openssh:<br /></p>

<pre><code>    $ pacman -S openssh
    $ systemctl start sshd
    $ systemcrl enable sshd.service
</code></pre>

<h3>Build rsim3 on ArchLinux</h3>

<p>First download the package from rsim3.<br />
Install the base-devel:<br /></p>

<pre><code>    pacman -S base-devel
</code></pre>

<p>Install boost, boost-libs, libpcap, cppunit:<br /></p>

<pre><code>    pacman -S boost boost-libs libpcap cppunit
</code></pre>

<p>Then you can enjoy the compiling and get the result.</p>
]]></content>
  </entry>
  
</feed>
