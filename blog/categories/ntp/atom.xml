<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ntp | Dash]]></title>
  <link href="http://purplepalmdash.github.io/blog/categories/ntp/atom.xml" rel="self"/>
  <link href="http://purplepalmdash.github.io/"/>
  <updated>2016-03-17T21:18:16+08:00</updated>
  <id>http://purplepalmdash.github.io/</id>
  <author>
    <name><![CDATA[Dash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Write Local Ntp Sync Server]]></title>
    <link href="http://purplepalmdash.github.io/blog/2014/02/11/write-local-ntp-sync-server/"/>
    <updated>2014-02-11T19:36:00+08:00</updated>
    <id>http://purplepalmdash.github.io/blog/2014/02/11/write-local-ntp-sync-server</id>
    <content type="html"><![CDATA[<p>Due to frequently query the ntp webserver, the website is banned by the administrator, thus I have to think about another way for updating the local machine&rsquo;s time on OpenWRT.  <br/>
First, install the coreutils-date:
    opkg install coreutils-date
Add the no-login for local server:
    cat id_rsa.pub | ssh <a href="&#x6d;&#97;&#105;&#x6c;&#116;&#x6f;&#58;&#100;&#100;&#100;&#100;&#x64;&#64;&#x31;&#x78;&#120;&#46;&#x78;&#120;&#x78;&#46;&#120;&#x78;&#120;&#x2e;&#120;&#x78;&#120;">&#100;&#100;&#100;&#x64;&#100;&#64;&#49;&#120;&#120;&#x2e;&#x78;&#120;&#x78;&#x2e;&#x78;&#x78;&#x78;&#46;&#x78;&#x78;&#x78;</a> &lsquo;cat >.ssh/authorized_keys&rsquo;
Now you can directly call remote command via:
    ssh <a href="&#x6d;&#x61;&#x69;&#108;&#116;&#x6f;&#x3a;&#x64;&#x64;&#x64;&#x64;&#x64;&#x40;&#x31;&#120;&#120;&#x2e;&#120;&#120;&#120;&#x2e;&#120;&#x78;&#x78;&#x2e;&#120;&#120;&#120;">&#x64;&#x64;&#x64;&#x64;&#100;&#x40;&#x31;&#x78;&#120;&#46;&#120;&#x78;&#x78;&#x2e;&#x78;&#x78;&#120;&#x2e;&#x78;&#120;&#x78;</a> ls
OK, we update the time.sh</p>

<pre><code class="sh time.sh">#!/bin/sh
#echo $http_proxy
#echo $https_proxy
#date $(wget -O - "http://www.timeapi.org/utc/in+eight+hours" 2&gt;/dev/null | sed s/[-T:+]/\ /g | awk '{print $2,$3,$4,$5,".",$6}' | tr -d " " )
timestring=`ssh ddddd@1xx.xxx.xxx.xxx date`
echo $timestring
/usr/bin/date -s "$timestring"
</code></pre>

<p>Add the following line into the crontab
    * */3 * * * /bin/time.sh
Now you can enjoy the local server updated time.</p>
]]></content>
  </entry>
  
</feed>
